{"version":3,"file":"reveal.esm.js","sources":["../js/utils/util.js","../js/utils/device.js","../node_modules/fitty/dist/fitty.module.js","../js/controllers/slidecontent.js","../js/controllers/slidenumber.js","../js/utils/color.js","../js/controllers/backgrounds.js","../js/utils/constants.js","../js/controllers/autoanimate.js","../js/controllers/fragments.js","../js/controllers/overview.js","../js/controllers/keyboard.js","../js/controllers/location.js","../js/controllers/controls.js","../js/controllers/progress.js","../js/controllers/pointer.js","../js/utils/loader.js","../js/controllers/plugins.js","../js/controllers/print.js","../js/controllers/touch.js","../js/controllers/focus.js","../js/controllers/notes.js","../js/components/playback.js","../js/config.js","../js/reveal.js","../js/index.js"],"sourcesContent":["/**\n * Extend object a with the properties of object b.\n * If there's a conflict, object b takes precedence.\n *\n * @param {object} a\n * @param {object} b\n */\nexport const extend = ( a, b ) => {\n\n\tfor( let i in b ) {\n\t\ta[ i ] = b[ i ];\n\t}\n\n\treturn a;\n\n}\n\n/**\n * querySelectorAll but returns an Array.\n */\nexport const queryAll = ( el, selector ) => {\n\n\treturn Array.from( el.querySelectorAll( selector ) );\n\n}\n\n/**\n * classList.toggle() with cross browser support\n */\nexport const toggleClass = ( el, className, value ) => {\n\tif( value ) {\n\t\tel.classList.add( className );\n\t}\n\telse {\n\t\tel.classList.remove( className );\n\t}\n}\n\n/**\n * Utility for deserializing a value.\n *\n * @param {*} value\n * @return {*}\n */\nexport const deserialize = ( value ) => {\n\n\tif( typeof value === 'string' ) {\n\t\tif( value === 'null' ) return null;\n\t\telse if( value === 'true' ) return true;\n\t\telse if( value === 'false' ) return false;\n\t\telse if( value.match( /^-?[\\d\\.]+$/ ) ) return parseFloat( value );\n\t}\n\n\treturn value;\n\n}\n\n/**\n * Measures the distance in pixels between point a\n * and point b.\n *\n * @param {object} a point with x/y properties\n * @param {object} b point with x/y properties\n *\n * @return {number}\n */\nexport const distanceBetween = ( a, b ) => {\n\n\tlet dx = a.x - b.x,\n\t\tdy = a.y - b.y;\n\n\treturn Math.sqrt( dx*dx + dy*dy );\n\n}\n\n/**\n * Applies a CSS transform to the target element.\n *\n * @param {HTMLElement} element\n * @param {string} transform\n */\nexport const transformElement = ( element, transform ) => {\n\n\telement.style.transform = transform;\n\n}\n\n/**\n * Element.matches with IE support.\n *\n * @param {HTMLElement} target The element to match\n * @param {String} selector The CSS selector to match\n * the element against\n *\n * @return {Boolean}\n */\nexport const matches = ( target, selector ) => {\n\n\tlet matchesMethod = target.matches || target.matchesSelector || target.msMatchesSelector;\n\n\treturn !!( matchesMethod && matchesMethod.call( target, selector ) );\n\n}\n\n/**\n * Find the closest parent that matches the given\n * selector.\n *\n * @param {HTMLElement} target The child element\n * @param {String} selector The CSS selector to match\n * the parents against\n *\n * @return {HTMLElement} The matched parent or null\n * if no matching parent was found\n */\nexport const closest = ( target, selector ) => {\n\n\t// Native Element.closest\n\tif( typeof target.closest === 'function' ) {\n\t\treturn target.closest( selector );\n\t}\n\n\t// Polyfill\n\twhile( target ) {\n\t\tif( matches( target, selector ) ) {\n\t\t\treturn target;\n\t\t}\n\n\t\t// Keep searching\n\t\ttarget = target.parentNode;\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Handling the fullscreen functionality via the fullscreen API\n *\n * @see http://fullscreen.spec.whatwg.org/\n * @see https://developer.mozilla.org/en-US/docs/DOM/Using_fullscreen_mode\n */\nexport const enterFullscreen = element => {\n\n\telement = element || document.documentElement;\n\n\t// Check which implementation is available\n\tlet requestMethod = element.requestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullscreen ||\n\t\t\t\t\t\telement.webkitRequestFullScreen ||\n\t\t\t\t\t\telement.mozRequestFullScreen ||\n\t\t\t\t\t\telement.msRequestFullscreen;\n\n\tif( requestMethod ) {\n\t\trequestMethod.apply( element );\n\t}\n\n}\n\n/**\n * Creates an HTML element and returns a reference to it.\n * If the element already exists the existing instance will\n * be returned.\n *\n * @param {HTMLElement} container\n * @param {string} tagname\n * @param {string} classname\n * @param {string} innerHTML\n *\n * @return {HTMLElement}\n */\nexport const createSingletonNode = ( container, tagname, classname, innerHTML='' ) => {\n\n\t// Find all nodes matching the description\n\tlet nodes = container.querySelectorAll( '.' + classname );\n\n\t// Check all matches to find one which is a direct child of\n\t// the specified container\n\tfor( let i = 0; i < nodes.length; i++ ) {\n\t\tlet testNode = nodes[i];\n\t\tif( testNode.parentNode === container ) {\n\t\t\treturn testNode;\n\t\t}\n\t}\n\n\t// If no node was found, create it now\n\tlet node = document.createElement( tagname );\n\tnode.className = classname;\n\tnode.innerHTML = innerHTML;\n\tcontainer.appendChild( node );\n\n\treturn node;\n\n}\n\n/**\n * Injects the given CSS styles into the DOM.\n *\n * @param {string} value\n */\nexport const createStyleSheet = ( value ) => {\n\n\tlet tag = document.createElement( 'style' );\n\ttag.type = 'text/css';\n\n\tif( value && value.length > 0 ) {\n\t\tif( tag.styleSheet ) {\n\t\t\ttag.styleSheet.cssText = value;\n\t\t}\n\t\telse {\n\t\t\ttag.appendChild( document.createTextNode( value ) );\n\t\t}\n\t}\n\n\tdocument.head.appendChild( tag );\n\n\treturn tag;\n\n}\n\n/**\n * Returns a key:value hash of all query params.\n */\nexport const getQueryHash = () => {\n\n\tlet query = {};\n\n\tlocation.search.replace( /[A-Z0-9]+?=([\\w\\.%-]*)/gi, a => {\n\t\tquery[ a.split( '=' ).shift() ] = a.split( '=' ).pop();\n\t} );\n\n\t// Basic deserialization\n\tfor( let i in query ) {\n\t\tlet value = query[ i ];\n\n\t\tquery[ i ] = deserialize( unescape( value ) );\n\t}\n\n\t// Do not accept new dependencies via query config to avoid\n\t// the potential of malicious script injection\n\tif( typeof query['dependencies'] !== 'undefined' ) delete query['dependencies'];\n\n\treturn query;\n\n}\n\n/**\n * Returns the remaining height within the parent of the\n * target element.\n *\n * remaining height = [ configured parent height ] - [ current parent height ]\n *\n * @param {HTMLElement} element\n * @param {number} [height]\n */\nexport const getRemainingHeight = ( element, height = 0 ) => {\n\n\tif( element ) {\n\t\tlet newHeight, oldHeight = element.style.height;\n\n\t\t// Change the .stretch element height to 0 in order find the height of all\n\t\t// the other elements\n\t\telement.style.height = '0px';\n\n\t\t// In Overview mode, the parent (.slide) height is set of 700px.\n\t\t// Restore it temporarily to its natural height.\n\t\telement.parentNode.style.height = 'auto';\n\n\t\tnewHeight = height - element.parentNode.offsetHeight;\n\n\t\t// Restore the old height, just in case\n\t\telement.style.height = oldHeight + 'px';\n\n\t\t// Clear the parent (.slide) height. .removeProperty works in IE9+\n\t\telement.parentNode.style.removeProperty('height');\n\n\t\treturn newHeight;\n\t}\n\n\treturn height;\n\n}\n\nconst fileExtensionToMimeMap = {\n\t'mp4': 'video/mp4',\n\t'm4a': 'video/mp4',\n\t'ogv': 'video/ogg',\n\t'mpeg': 'video/mpeg',\n\t'webm': 'video/webm'\n}\n\n/**\n * Guess the MIME type for common file formats.\n */\nexport const getMimeTypeFromFile = ( filename='' ) => {\n\treturn fileExtensionToMimeMap[filename.split('.').pop()]\n}","const UA = navigator.userAgent;\n\nexport const isMobile = /(iphone|ipod|ipad|android)/gi.test( UA ) ||\n\t\t\t\t\t\t( navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1 ); // iPadOS\n\nexport const isChrome = /chrome/i.test( UA ) && !/edge/i.test( UA );\n\nexport const isAndroid = /android/gi.test( UA );","/*\n * fitty v2.3.3 - Snugly resizes text to fit its parent container\n * Copyright (c) 2020 Rik Schennink <rik@pqina.nl> (https://pqina.nl/)\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = function (w) {\n\n  // no window, early exit\n  if (!w) return;\n\n  // node list to array helper method\n  var toArray = function toArray(nl) {\n    return [].slice.call(nl);\n  };\n\n  // states\n  var DrawState = {\n    IDLE: 0,\n    DIRTY_CONTENT: 1,\n    DIRTY_LAYOUT: 2,\n    DIRTY: 3\n  };\n\n  // all active fitty elements\n  var fitties = [];\n\n  // group all redraw calls till next frame, we cancel each frame request when a new one comes in. If no support for request animation frame, this is an empty function and supports for fitty stops.\n  var redrawFrame = null;\n  var requestRedraw = 'requestAnimationFrame' in w ? function () {\n    w.cancelAnimationFrame(redrawFrame);\n    redrawFrame = w.requestAnimationFrame(function () {\n      return redraw(fitties.filter(function (f) {\n        return f.dirty && f.active;\n      }));\n    });\n  } : function () {};\n\n  // sets all fitties to dirty so they are redrawn on the next redraw loop, then calls redraw\n  var redrawAll = function redrawAll(type) {\n    return function () {\n      fitties.forEach(function (f) {\n        return f.dirty = type;\n      });\n      requestRedraw();\n    };\n  };\n\n  // redraws fitties so they nicely fit their parent container\n  var redraw = function redraw(fitties) {\n\n    // getting info from the DOM at this point should not trigger a reflow, let's gather as much intel as possible before triggering a reflow\n\n    // check if styles of all fitties have been computed\n    fitties.filter(function (f) {\n      return !f.styleComputed;\n    }).forEach(function (f) {\n      f.styleComputed = computeStyle(f);\n    });\n\n    // restyle elements that require pre-styling, this triggers a reflow, please try to prevent by adding CSS rules (see docs)\n    fitties.filter(shouldPreStyle).forEach(applyStyle);\n\n    // we now determine which fitties should be redrawn\n    var fittiesToRedraw = fitties.filter(shouldRedraw);\n\n    // we calculate final styles for these fitties\n    fittiesToRedraw.forEach(calculateStyles);\n\n    // now we apply the calculated styles from our previous loop\n    fittiesToRedraw.forEach(function (f) {\n      applyStyle(f);\n      markAsClean(f);\n    });\n\n    // now we dispatch events for all restyled fitties\n    fittiesToRedraw.forEach(dispatchFitEvent);\n  };\n\n  var markAsClean = function markAsClean(f) {\n    return f.dirty = DrawState.IDLE;\n  };\n\n  var calculateStyles = function calculateStyles(f) {\n\n    // get available width from parent node\n    f.availableWidth = f.element.parentNode.clientWidth;\n\n    // the space our target element uses\n    f.currentWidth = f.element.scrollWidth;\n\n    // remember current font size\n    f.previousFontSize = f.currentFontSize;\n\n    // let's calculate the new font size\n    f.currentFontSize = Math.min(Math.max(f.minSize, f.availableWidth / f.currentWidth * f.previousFontSize), f.maxSize);\n\n    // if allows wrapping, only wrap when at minimum font size (otherwise would break container)\n    f.whiteSpace = f.multiLine && f.currentFontSize === f.minSize ? 'normal' : 'nowrap';\n  };\n\n  // should always redraw if is not dirty layout, if is dirty layout, only redraw if size has changed\n  var shouldRedraw = function shouldRedraw(f) {\n    return f.dirty !== DrawState.DIRTY_LAYOUT || f.dirty === DrawState.DIRTY_LAYOUT && f.element.parentNode.clientWidth !== f.availableWidth;\n  };\n\n  // every fitty element is tested for invalid styles\n  var computeStyle = function computeStyle(f) {\n\n    // get style properties\n    var style = w.getComputedStyle(f.element, null);\n\n    // get current font size in pixels (if we already calculated it, use the calculated version)\n    f.currentFontSize = parseFloat(style.getPropertyValue('font-size'));\n\n    // get display type and wrap mode\n    f.display = style.getPropertyValue('display');\n    f.whiteSpace = style.getPropertyValue('white-space');\n  };\n\n  // determines if this fitty requires initial styling, can be prevented by applying correct styles through CSS\n  var shouldPreStyle = function shouldPreStyle(f) {\n\n    var preStyle = false;\n\n    // if we already tested for prestyling we don't have to do it again\n    if (f.preStyleTestCompleted) return false;\n\n    // should have an inline style, if not, apply\n    if (!/inline-/.test(f.display)) {\n      preStyle = true;\n      f.display = 'inline-block';\n    }\n\n    // to correctly calculate dimensions the element should have whiteSpace set to nowrap\n    if (f.whiteSpace !== 'nowrap') {\n      preStyle = true;\n      f.whiteSpace = 'nowrap';\n    }\n\n    // we don't have to do this twice\n    f.preStyleTestCompleted = true;\n\n    return preStyle;\n  };\n\n  // apply styles to single fitty\n  var applyStyle = function applyStyle(f) {\n    f.element.style.whiteSpace = f.whiteSpace;\n    f.element.style.display = f.display;\n    f.element.style.fontSize = f.currentFontSize + 'px';\n  };\n\n  // dispatch a fit event on a fitty\n  var dispatchFitEvent = function dispatchFitEvent(f) {\n    f.element.dispatchEvent(new CustomEvent('fit', {\n      detail: {\n        oldValue: f.previousFontSize,\n        newValue: f.currentFontSize,\n        scaleFactor: f.currentFontSize / f.previousFontSize\n      }\n    }));\n  };\n\n  // fit method, marks the fitty as dirty and requests a redraw (this will also redraw any other fitty marked as dirty)\n  var fit = function fit(f, type) {\n    return function () {\n      f.dirty = type;\n      if (!f.active) return;\n      requestRedraw();\n    };\n  };\n\n  var init = function init(f) {\n\n    // save some of the original CSS properties before we change them\n    f.originalStyle = {\n      whiteSpace: f.element.style.whiteSpace,\n      display: f.element.style.display,\n      fontSize: f.element.style.fontSize\n    };\n\n    // should we observe DOM mutations\n    observeMutations(f);\n\n    // this is a new fitty so we need to validate if it's styles are in order\n    f.newbie = true;\n\n    // because it's a new fitty it should also be dirty, we want it to redraw on the first loop\n    f.dirty = true;\n\n    // we want to be able to update this fitty\n    fitties.push(f);\n  };\n\n  var destroy = function destroy(f) {\n    return function () {\n\n      // remove from fitties array\n      fitties = fitties.filter(function (_) {\n        return _.element !== f.element;\n      });\n\n      // stop observing DOM\n      if (f.observeMutations) f.observer.disconnect();\n\n      // reset the CSS properties we changes\n      f.element.style.whiteSpace = f.originalStyle.whiteSpace;\n      f.element.style.display = f.originalStyle.display;\n      f.element.style.fontSize = f.originalStyle.fontSize;\n    };\n  };\n\n  // add a new fitty, does not redraw said fitty\n  var subscribe = function subscribe(f) {\n    return function () {\n      if (f.active) return;\n      f.active = true;\n      requestRedraw();\n    };\n  };\n\n  // remove an existing fitty\n  var unsubscribe = function unsubscribe(f) {\n    return function () {\n      return f.active = false;\n    };\n  };\n\n  var observeMutations = function observeMutations(f) {\n\n    // no observing?\n    if (!f.observeMutations) return;\n\n    // start observing mutations\n    f.observer = new MutationObserver(fit(f, DrawState.DIRTY_CONTENT));\n\n    // start observing\n    f.observer.observe(f.element, f.observeMutations);\n  };\n\n  // default mutation observer settings\n  var mutationObserverDefaultSetting = {\n    subtree: true,\n    childList: true,\n    characterData: true\n  };\n\n  // default fitty options\n  var defaultOptions = {\n    minSize: 16,\n    maxSize: 512,\n    multiLine: true,\n    observeMutations: 'MutationObserver' in w ? mutationObserverDefaultSetting : false\n  };\n\n  // array of elements in, fitty instances out\n  function fittyCreate(elements, options) {\n\n    // set options object\n    var fittyOptions = _extends({}, defaultOptions, options);\n\n    // create fitties\n    var publicFitties = elements.map(function (element) {\n\n      // create fitty instance\n      var f = _extends({}, fittyOptions, {\n\n        // internal options for this fitty\n        element: element,\n        active: true\n      });\n\n      // initialise this fitty\n      init(f);\n\n      // expose API\n      return {\n        element: element,\n        fit: fit(f, DrawState.DIRTY),\n        unfreeze: subscribe(f),\n        freeze: unsubscribe(f),\n        unsubscribe: destroy(f)\n      };\n    });\n\n    // call redraw on newly initiated fitties\n    requestRedraw();\n\n    // expose fitties\n    return publicFitties;\n  }\n\n  // fitty creation function\n  function fitty(target) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\n    // if target is a string\n    return typeof target === 'string' ?\n\n    // treat it as a querySelector\n    fittyCreate(toArray(document.querySelectorAll(target)), options) :\n\n    // create single fitty\n    fittyCreate([target], options)[0];\n  }\n\n  // handles viewport changes, redraws all fitties, but only does so after a timeout\n  var resizeDebounce = null;\n  var onWindowResized = function onWindowResized() {\n    w.clearTimeout(resizeDebounce);\n    resizeDebounce = w.setTimeout(redrawAll(DrawState.DIRTY_LAYOUT), fitty.observeWindowDelay);\n  };\n\n  // define observe window property, so when we set it to true or false events are automatically added and removed\n  var events = ['resize', 'orientationchange'];\n  Object.defineProperty(fitty, 'observeWindow', {\n    set: function set(enabled) {\n      var method = (enabled ? 'add' : 'remove') + 'EventListener';\n      events.forEach(function (e) {\n        w[method](e, onWindowResized);\n      });\n    }\n  });\n\n  // fitty global properties (by setting observeWindow to true the events above get added)\n  fitty.observeWindow = true;\n  fitty.observeWindowDelay = 100;\n\n  // public fit all method, will force redraw no matter what\n  fitty.fitAll = redrawAll(DrawState.DIRTY);\n\n  // export our fitty function, we don't want to keep it to our selves\n  return fitty;\n}(typeof window === 'undefined' ? null : window);","import { extend, queryAll, closest, getMimeTypeFromFile } from '../utils/util.js'\nimport { isMobile } from '../utils/device.js'\n\nimport fitty from 'fitty';\n\n/**\n * Handles loading, unloading and playback of slide\n * content such as images, videos and iframes.\n */\nexport default class SlideContent {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.startEmbeddedIframe = this.startEmbeddedIframe.bind( this );\n\n\t}\n\n\t/**\n\t * Should the given element be preloaded?\n\t * Decides based on local element attributes and global config.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tshouldPreload( element ) {\n\n\t\t// Prefer an explicit global preload setting\n\t\tlet preload = this.Reveal.getConfig().preloadIframes;\n\n\t\t// If no global setting is available, fall back on the element's\n\t\t// own preload setting\n\t\tif( typeof preload !== 'boolean' ) {\n\t\t\tpreload = element.hasAttribute( 'data-preload' );\n\t\t}\n\n\t\treturn preload;\n\t}\n\n\t/**\n\t * Called when the given slide is within the configured view\n\t * distance. Shows the slide element and loads any content\n\t * that is set to load lazily (data-src).\n\t *\n\t * @param {HTMLElement} slide Slide to show\n\t */\n\tload( slide, options = {} ) {\n\n\t\t// Show the slide element\n\t\tslide.style.display = this.Reveal.getConfig().display;\n\n\t\t// Media elements with data-src attributes\n\t\tqueryAll( slide, 'img[data-src], video[data-src], audio[data-src], iframe[data-src]' ).forEach( element => {\n\t\t\tif( element.tagName !== 'IFRAME' || this.shouldPreload( element ) ) {\n\t\t\t\telement.setAttribute( 'src', element.getAttribute( 'data-src' ) );\n\t\t\t\telement.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\telement.removeAttribute( 'data-src' );\n\t\t\t}\n\t\t} );\n\n\t\t// Media elements with <source> children\n\t\tqueryAll( slide, 'video, audio' ).forEach( media => {\n\t\t\tlet sources = 0;\n\n\t\t\tqueryAll( media, 'source[data-src]' ).forEach( source => {\n\t\t\t\tsource.setAttribute( 'src', source.getAttribute( 'data-src' ) );\n\t\t\t\tsource.removeAttribute( 'data-src' );\n\t\t\t\tsource.setAttribute( 'data-lazy-loaded', '' );\n\t\t\t\tsources += 1;\n\t\t\t} );\n\n\t\t\t// Enable inline video playback in mobile Safari\n\t\t\tif( isMobile && media.tagName === 'VIDEO' ) {\n\t\t\t\tmedia.setAttribute( 'playsinline', '' );\n\t\t\t}\n\n\t\t\t// If we rewrote sources for this video/audio element, we need\n\t\t\t// to manually tell it to load from its new origin\n\t\t\tif( sources > 0 ) {\n\t\t\t\tmedia.load();\n\t\t\t}\n\t\t} );\n\n\n\t\t// Show the corresponding background element\n\t\tlet background = slide.slideBackgroundElement;\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'block';\n\n\t\t\tlet backgroundContent = slide.slideBackgroundContentElement;\n\t\t\tlet backgroundIframe = slide.getAttribute( 'data-background-iframe' );\n\n\t\t\t// If the background contains media, load it\n\t\t\tif( background.hasAttribute( 'data-loaded' ) === false ) {\n\t\t\t\tbackground.setAttribute( 'data-loaded', 'true' );\n\n\t\t\t\tlet backgroundImage = slide.getAttribute( 'data-background-image' ),\n\t\t\t\t\tbackgroundVideo = slide.getAttribute( 'data-background-video' ),\n\t\t\t\t\tbackgroundVideoLoop = slide.hasAttribute( 'data-background-video-loop' ),\n\t\t\t\t\tbackgroundVideoMuted = slide.hasAttribute( 'data-background-video-muted' );\n\n\t\t\t\t// Images\n\t\t\t\tif( backgroundImage ) {\n\t\t\t\t\t// base64\n\t\t\t\t\tif(  /^data:/.test( backgroundImage.trim() ) ) {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = `url(${backgroundImage.trim()})`;\n\t\t\t\t\t}\n\t\t\t\t\t// URL(s)\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundContent.style.backgroundImage = backgroundImage.split( ',' ).map( background => {\n\t\t\t\t\t\t\treturn `url(${encodeURI(background.trim())})`;\n\t\t\t\t\t\t}).join( ',' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Videos\n\t\t\t\telse if ( backgroundVideo && !this.Reveal.isSpeakerNotes() ) {\n\t\t\t\t\tlet video = document.createElement( 'video' );\n\n\t\t\t\t\tif( backgroundVideoLoop ) {\n\t\t\t\t\t\tvideo.setAttribute( 'loop', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\tif( backgroundVideoMuted ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Enable inline playback in mobile Safari\n\t\t\t\t\t//\n\t\t\t\t\t// Mute is required for video to play when using\n\t\t\t\t\t// swipe gestures to navigate since they don't\n\t\t\t\t\t// count as direct user actions :'(\n\t\t\t\t\tif( isMobile ) {\n\t\t\t\t\t\tvideo.muted = true;\n\t\t\t\t\t\tvideo.setAttribute( 'playsinline', '' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support comma separated lists of video sources\n\t\t\t\t\tbackgroundVideo.split( ',' ).forEach( source => {\n\t\t\t\t\t\tlet type = getMimeTypeFromFile( source );\n\t\t\t\t\t\tif( type ) {\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\" type=\"${type}\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tvideo.innerHTML += `<source src=\"${source}\">`;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\n\t\t\t\t\tbackgroundContent.appendChild( video );\n\t\t\t\t}\n\t\t\t\t// Iframes\n\t\t\t\telse if( backgroundIframe && options.excludeIframes !== true ) {\n\t\t\t\t\tlet iframe = document.createElement( 'iframe' );\n\t\t\t\t\tiframe.setAttribute( 'allowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'mozallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'webkitallowfullscreen', '' );\n\t\t\t\t\tiframe.setAttribute( 'allow', 'autoplay' );\n\n\t\t\t\t\tiframe.setAttribute( 'data-src', backgroundIframe );\n\n\t\t\t\t\tiframe.style.width  = '100%';\n\t\t\t\t\tiframe.style.height = '100%';\n\t\t\t\t\tiframe.style.maxHeight = '100%';\n\t\t\t\t\tiframe.style.maxWidth = '100%';\n\n\t\t\t\t\tbackgroundContent.appendChild( iframe );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Start loading preloadable iframes\n\t\t\tlet backgroundIframeElement = backgroundContent.querySelector( 'iframe[data-src]' );\n\t\t\tif( backgroundIframeElement ) {\n\n\t\t\t\t// Check if this iframe is eligible to be preloaded\n\t\t\t\tif( this.shouldPreload( background ) && !/autoplay=(1|true|yes)/gi.test( backgroundIframe ) ) {\n\t\t\t\t\tif( backgroundIframeElement.getAttribute( 'src' ) !== backgroundIframe ) {\n\t\t\t\t\t\tbackgroundIframeElement.setAttribute( 'src', backgroundIframe );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.layout( slide );\n\n\t}\n\n\t/**\n\t * Applies JS-dependent layout helpers for the given slide,\n\t * if there are any.\n\t */\n\tlayout( slide ) {\n\n\t\t// Autosize text with the r-fit-text class based on the\n\t\t// size of its container. This needs to happen after the\n\t\t// slide is visible in order to measure the text.\n\t\tArray.from( slide.querySelectorAll( '.r-fit-text' ) ).forEach( element => {\n\t\t\tfitty( element, {\n\t\t\t\tminSize: 24,\n\t\t\t\tmaxSize: this.Reveal.getConfig().height * 0.8,\n\t\t\t\tobserveMutations: false,\n\t\t\t\tobserveWindow: false\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unloads and hides the given slide. This is called when the\n\t * slide is moved outside of the configured view distance.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tunload( slide ) {\n\n\t\t// Hide the slide element\n\t\tslide.style.display = 'none';\n\n\t\t// Hide the corresponding background element\n\t\tlet background = this.Reveal.getSlideBackground( slide );\n\t\tif( background ) {\n\t\t\tbackground.style.display = 'none';\n\n\t\t\t// Unload any background iframes\n\t\t\tqueryAll( background, 'iframe[src]' ).forEach( element => {\n\t\t\t\telement.removeAttribute( 'src' );\n\t\t\t} );\n\t\t}\n\n\t\t// Reset lazy-loaded media elements with src attributes\n\t\tqueryAll( slide, 'video[data-lazy-loaded][src], audio[data-lazy-loaded][src], iframe[data-lazy-loaded][src]' ).forEach( element => {\n\t\t\telement.setAttribute( 'data-src', element.getAttribute( 'src' ) );\n\t\t\telement.removeAttribute( 'src' );\n\t\t} );\n\n\t\t// Reset lazy-loaded media elements with <source> children\n\t\tqueryAll( slide, 'video[data-lazy-loaded] source[src], audio source[src]' ).forEach( source => {\n\t\t\tsource.setAttribute( 'data-src', source.getAttribute( 'src' ) );\n\t\t\tsource.removeAttribute( 'src' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Enforces origin-specific format rules for embedded media.\n\t */\n\tformatEmbeddedContent() {\n\n\t\tlet _appendParamToIframeSource = ( sourceAttribute, sourceURL, param ) => {\n\t\t\tqueryAll( this.Reveal.getSlidesElement(), 'iframe['+ sourceAttribute +'*=\"'+ sourceURL +'\"]' ).forEach( el => {\n\t\t\t\tlet src = el.getAttribute( sourceAttribute );\n\t\t\t\tif( src && src.indexOf( param ) === -1 ) {\n\t\t\t\t\tel.setAttribute( sourceAttribute, src + ( !/\\?/.test( src ) ? '?' : '&' ) + param );\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// YouTube frames must include \"?enablejsapi=1\"\n\t\t_appendParamToIframeSource( 'src', 'youtube.com/embed/', 'enablejsapi=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'youtube.com/embed/', 'enablejsapi=1' );\n\n\t\t// Vimeo frames must include \"?api=1\"\n\t\t_appendParamToIframeSource( 'src', 'player.vimeo.com/', 'api=1' );\n\t\t_appendParamToIframeSource( 'data-src', 'player.vimeo.com/', 'api=1' );\n\n\t}\n\n\t/**\n\t * Start playback of any embedded content inside of\n\t * the given element.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstartEmbeddedContent( element ) {\n\n\t\tif( element && !this.Reveal.isSpeakerNotes() ) {\n\n\t\t\t// Restart GIFs\n\t\t\tqueryAll( element, 'img[src$=\".gif\"]' ).forEach( el => {\n\t\t\t\t// Setting the same unchanged source like this was confirmed\n\t\t\t\t// to work in Chrome, FF & Safari\n\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'src' ) );\n\t\t\t} );\n\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = el.hasAttribute( 'data-autoplay' ) || !!closest( el, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\tif( autoplay && typeof el.play === 'function' ) {\n\n\t\t\t\t\t// If the media is ready, start playback\n\t\t\t\t\tif( el.readyState > 1 ) {\n\t\t\t\t\t\tthis.startEmbeddedMedia( { target: el } );\n\t\t\t\t\t}\n\t\t\t\t\t// Mobile devices never fire a loaded event so instead\n\t\t\t\t\t// of waiting, we initiate playback\n\t\t\t\t\telse if( isMobile ) {\n\t\t\t\t\t\tlet promise = el.play();\n\n\t\t\t\t\t\t// If autoplay does not work, ensure that the controls are visible so\n\t\t\t\t\t\t// that the viewer can start the media on their own\n\t\t\t\t\t\tif( promise && typeof promise.catch === 'function' && el.controls === false ) {\n\t\t\t\t\t\t\tpromise.catch( () => {\n\t\t\t\t\t\t\t\tel.controls = true;\n\n\t\t\t\t\t\t\t\t// Once the video does start playing, hide the controls again\n\t\t\t\t\t\t\t\tel.addEventListener( 'play', () => {\n\t\t\t\t\t\t\t\t\tel.controls = false;\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// If the media isn't loaded, wait before playing\n\t\t\t\t\telse {\n\t\t\t\t\t\tel.removeEventListener( 'loadeddata', this.startEmbeddedMedia ); // remove first to avoid dupes\n\t\t\t\t\t\tel.addEventListener( 'loadeddata', this.startEmbeddedMedia );\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Normal iframes\n\t\t\tqueryAll( element, 'iframe[src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tthis.startEmbeddedIframe( { target: el } );\n\t\t\t} );\n\n\t\t\t// Lazy loading iframes\n\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\tif( closest( el, '.fragment' ) && !closest( el, '.fragment.visible' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif( el.getAttribute( 'src' ) !== el.getAttribute( 'data-src' ) ) {\n\t\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe ); // remove first to avoid dupes\n\t\t\t\t\tel.addEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t\t\tel.setAttribute( 'src', el.getAttribute( 'data-src' ) );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Starts playing an embedded video/audio element after\n\t * it has finished loading.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedMedia( event ) {\n\n\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\tif( isAttachedToDOM && isVisible ) {\n\t\t\tevent.target.currentTime = 0;\n\t\t\tevent.target.play();\n\t\t}\n\n\t\tevent.target.removeEventListener( 'loadeddata', this.startEmbeddedMedia );\n\n\t}\n\n\t/**\n\t * \"Starts\" the content of an embedded iframe using the\n\t * postMessage API.\n\t *\n\t * @param {object} event\n\t */\n\tstartEmbeddedIframe( event ) {\n\n\t\tlet iframe = event.target;\n\n\t\tif( iframe && iframe.contentWindow ) {\n\n\t\t\tlet isAttachedToDOM = !!closest( event.target, 'html' ),\n\t\t\t\tisVisible  \t\t= !!closest( event.target, '.present' );\n\n\t\t\tif( isAttachedToDOM && isVisible ) {\n\n\t\t\t\t// Prefer an explicit global autoplay setting\n\t\t\t\tlet autoplay = this.Reveal.getConfig().autoPlayMedia;\n\n\t\t\t\t// If no global setting is available, fall back on the element's\n\t\t\t\t// own autoplay setting\n\t\t\t\tif( typeof autoplay !== 'boolean' ) {\n\t\t\t\t\tautoplay = iframe.hasAttribute( 'data-autoplay' ) || !!closest( iframe, '.slide-background' );\n\t\t\t\t}\n\n\t\t\t\t// YouTube postMessage API\n\t\t\t\tif( /youtube\\.com\\/embed\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Vimeo postMessage API\n\t\t\t\telse if( /player\\.vimeo\\.com\\//.test( iframe.getAttribute( 'src' ) ) && autoplay ) {\n\t\t\t\t\tiframe.contentWindow.postMessage( '{\"method\":\"play\"}', '*' );\n\t\t\t\t}\n\t\t\t\t// Generic postMessage API\n\t\t\t\telse {\n\t\t\t\t\tiframe.contentWindow.postMessage( 'slide:start', '*' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Stop playback of any embedded content inside of\n\t * the targeted slide.\n\t *\n\t * @param {HTMLElement} element\n\t */\n\tstopEmbeddedContent( element, options = {} ) {\n\n\t\toptions = extend( {\n\t\t\t// Defaults\n\t\t\tunloadIframes: true\n\t\t}, options );\n\n\t\tif( element && element.parentNode ) {\n\t\t\t// HTML5 media elements\n\t\t\tqueryAll( element, 'video, audio' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && typeof el.pause === 'function' ) {\n\t\t\t\t\tel.setAttribute('data-paused-by-reveal', '');\n\t\t\t\t\tel.pause();\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Generic postMessage API for non-lazy loaded iframes\n\t\t\tqueryAll( element, 'iframe' ).forEach( el => {\n\t\t\t\tif( el.contentWindow ) el.contentWindow.postMessage( 'slide:stop', '*' );\n\t\t\t\tel.removeEventListener( 'load', this.startEmbeddedIframe );\n\t\t\t});\n\n\t\t\t// YouTube postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"youtube.com/embed/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Vimeo postMessage API\n\t\t\tqueryAll( element, 'iframe[src*=\"player.vimeo.com/\"]' ).forEach( el => {\n\t\t\t\tif( !el.hasAttribute( 'data-ignore' ) && el.contentWindow && typeof el.contentWindow.postMessage === 'function' ) {\n\t\t\t\t\tel.contentWindow.postMessage( '{\"method\":\"pause\"}', '*' );\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif( options.unloadIframes === true ) {\n\t\t\t\t// Unload lazy-loaded iframes\n\t\t\t\tqueryAll( element, 'iframe[data-src]' ).forEach( el => {\n\t\t\t\t\t// Only removing the src doesn't actually unload the frame\n\t\t\t\t\t// in all browsers (Firefox) so we set it to blank first\n\t\t\t\t\tel.setAttribute( 'src', 'about:blank' );\n\t\t\t\t\tel.removeAttribute( 'src' );\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n}\n","/**\n * Handles the display of reveal.js' optional slide number.\n */\nexport default class SlideNumber {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'slide-number';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tlet slideNumberDisplay = 'none';\n\t\tif( config.slideNumber && !this.Reveal.isPrintingPDF() ) {\n\t\t\tif( config.showSlideNumber === 'all' ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t\telse if( config.showSlideNumber === 'speaker' && this.Reveal.isSpeakerNotes() ) {\n\t\t\t\tslideNumberDisplay = 'block';\n\t\t\t}\n\t\t}\n\n\t\tthis.element.style.display = slideNumberDisplay;\n\n\t}\n\n\t/**\n\t * Updates the slide number to match the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update slide number if enabled\n\t\tif( this.Reveal.getConfig().slideNumber && this.element ) {\n\t\t\tthis.element.innerHTML = this.getSlideNumber();\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the HTML string corresponding to the current slide\n\t * number, including formatting.\n\t */\n\tgetSlideNumber( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet value;\n\t\tlet format = 'h.v';\n\n\t\tif ( typeof config.slideNumber === 'function' ) {\n\t\t\tvalue = config.slideNumber( slide );\n\t\t} else {\n\t\t\t// Check if a custom number format is available\n\t\t\tif( typeof config.slideNumber === 'string' ) {\n\t\t\t\tformat = config.slideNumber;\n\t\t\t}\n\n\t\t\t// If there are ONLY vertical slides in this deck, always use\n\t\t\t// a flattened slide number\n\t\t\tif( !/c/.test( format ) && this.Reveal.getHorizontalSlides().length === 1 ) {\n\t\t\t\tformat = 'c';\n\t\t\t}\n\n\t\t\t// Offset the current slide number by 1 to make it 1-indexed\n\t\t\tlet horizontalOffset = slide && slide.dataset.visibility === 'uncounted' ? 0 : 1;\n\n\t\t\tvalue = [];\n\t\t\tswitch( format ) {\n\t\t\t\tcase 'c':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset );\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'c/t':\n\t\t\t\t\tvalue.push( this.Reveal.getSlidePastCount( slide ) + horizontalOffset, '/', this.Reveal.getTotalSlides() );\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tlet indices = this.Reveal.getIndices( slide );\n\t\t\t\t\tvalue.push( indices.h + horizontalOffset );\n\t\t\t\t\tlet sep = format === 'h/v' ? '/' : '.';\n\t\t\t\t\tif( this.Reveal.isVerticalSlide( slide ) ) value.push( sep, indices.v + 1 );\n\t\t\t}\n\t\t}\n\n\t\tlet url = '#' + this.Reveal.location.getHash( slide );\n\t\treturn this.formatNumber( value[0], value[1], value[2], url );\n\n\t}\n\n\t/**\n\t * Applies HTML formatting to a slide number before it's\n\t * written to the DOM.\n\t *\n\t * @param {number} a Current slide\n\t * @param {string} delimiter Character to separate slide numbers\n\t * @param {(number|*)} b Total slides\n\t * @param {HTMLElement} [url='#'+locationHash()] The url to link to\n\t * @return {string} HTML string fragment\n\t */\n\tformatNumber( a, delimiter, b, url = '#' + this.Reveal.location.getHash() ) {\n\n\t\tif( typeof b === 'number' && !isNaN( b ) ) {\n\t\t\treturn  `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t<span class=\"slide-number-delimiter\">${delimiter}</span>\n\t\t\t\t\t<span class=\"slide-number-b\">${b}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\t\telse {\n\t\t\treturn `<a href=\"${url}\">\n\t\t\t\t\t<span class=\"slide-number-a\">${a}</span>\n\t\t\t\t\t</a>`;\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * Converts various color input formats to an {r:0,g:0,b:0} object.\n *\n * @param {string} color The string representation of a color\n * @example\n * colorToRgb('#000');\n * @example\n * colorToRgb('#000000');\n * @example\n * colorToRgb('rgb(0,0,0)');\n * @example\n * colorToRgb('rgba(0,0,0)');\n *\n * @return {{r: number, g: number, b: number, [a]: number}|null}\n */\nexport const colorToRgb = ( color ) => {\n\n\tlet hex3 = color.match( /^#([0-9a-f]{3})$/i );\n\tif( hex3 && hex3[1] ) {\n\t\thex3 = hex3[1];\n\t\treturn {\n\t\t\tr: parseInt( hex3.charAt( 0 ), 16 ) * 0x11,\n\t\t\tg: parseInt( hex3.charAt( 1 ), 16 ) * 0x11,\n\t\t\tb: parseInt( hex3.charAt( 2 ), 16 ) * 0x11\n\t\t};\n\t}\n\n\tlet hex6 = color.match( /^#([0-9a-f]{6})$/i );\n\tif( hex6 && hex6[1] ) {\n\t\thex6 = hex6[1];\n\t\treturn {\n\t\t\tr: parseInt( hex6.slice( 0, 2 ), 16 ),\n\t\t\tg: parseInt( hex6.slice( 2, 4 ), 16 ),\n\t\t\tb: parseInt( hex6.slice( 4, 6 ), 16 )\n\t\t};\n\t}\n\n\tlet rgb = color.match( /^rgb\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\)$/i );\n\tif( rgb ) {\n\t\treturn {\n\t\t\tr: parseInt( rgb[1], 10 ),\n\t\t\tg: parseInt( rgb[2], 10 ),\n\t\t\tb: parseInt( rgb[3], 10 )\n\t\t};\n\t}\n\n\tlet rgba = color.match( /^rgba\\s*\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*\\,\\s*([\\d]+|[\\d]*.[\\d]+)\\s*\\)$/i );\n\tif( rgba ) {\n\t\treturn {\n\t\t\tr: parseInt( rgba[1], 10 ),\n\t\t\tg: parseInt( rgba[2], 10 ),\n\t\t\tb: parseInt( rgba[3], 10 ),\n\t\t\ta: parseFloat( rgba[4] )\n\t\t};\n\t}\n\n\treturn null;\n\n}\n\n/**\n * Calculates brightness on a scale of 0-255.\n *\n * @param {string} color See colorToRgb for supported formats.\n * @see {@link colorToRgb}\n */\nexport const colorBrightness = ( color ) => {\n\n\tif( typeof color === 'string' ) color = colorToRgb( color );\n\n\tif( color ) {\n\t\treturn ( color.r * 299 + color.g * 587 + color.b * 114 ) / 1000;\n\t}\n\n\treturn null;\n\n}","import { queryAll } from '../utils/util.js'\nimport { colorToRgb, colorBrightness } from '../utils/color.js'\n\n/**\n * Creates and updates slide backgrounds.\n */\nexport default class Backgrounds {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'backgrounds';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Creates the slide background elements and appends them\n\t * to the background container. One element is created per\n\t * slide no matter if the given slide has visible background.\n\t */\n\tcreate() {\n\n\t\t// Clear prior backgrounds\n\t\tthis.element.innerHTML = '';\n\t\tthis.element.classList.add( 'no-transition' );\n\n\t\t// Iterate over all horizontal slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( slideh => {\n\n\t\t\tlet backgroundStack = this.createBackground( slideh, this.element );\n\n\t\t\t// Iterate over all vertical slides\n\t\t\tqueryAll( slideh, 'section' ).forEach( slidev => {\n\n\t\t\t\tthis.createBackground( slidev, backgroundStack );\n\n\t\t\t\tbackgroundStack.classList.add( 'stack' );\n\n\t\t\t} );\n\n\t\t} );\n\n\t\t// Add parallax background if specified\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tthis.element.style.backgroundImage = 'url(\"' + this.Reveal.getConfig().parallaxBackgroundImage + '\")';\n\t\t\tthis.element.style.backgroundSize = this.Reveal.getConfig().parallaxBackgroundSize;\n\t\t\tthis.element.style.backgroundRepeat = this.Reveal.getConfig().parallaxBackgroundRepeat;\n\t\t\tthis.element.style.backgroundPosition = this.Reveal.getConfig().parallaxBackgroundPosition;\n\n\t\t\t// Make sure the below properties are set on the element - these properties are\n\t\t\t// needed for proper transitions to be set on the element via CSS. To remove\n\t\t\t// annoying background slide-in effect when the presentation starts, apply\n\t\t\t// these properties after short time delay\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.add( 'has-parallax-background' );\n\t\t\t}, 1 );\n\n\t\t}\n\t\telse {\n\n\t\t\tthis.element.style.backgroundImage = '';\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'has-parallax-background' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a background for the given slide.\n\t *\n\t * @param {HTMLElement} slide\n\t * @param {HTMLElement} container The element that the background\n\t * should be appended to\n\t * @return {HTMLElement} New background div\n\t */\n\tcreateBackground( slide, container ) {\n\n\t\t// Main slide background element\n\t\tlet element = document.createElement( 'div' );\n\t\telement.className = 'slide-background ' + slide.className.replace( /present|past|future/, '' );\n\n\t\t// Inner background element that wraps images/videos/iframes\n\t\tlet contentElement = document.createElement( 'div' );\n\t\tcontentElement.className = 'slide-background-content';\n\n\t\telement.appendChild( contentElement );\n\t\tcontainer.appendChild( element );\n\n\t\tslide.slideBackgroundElement = element;\n\t\tslide.slideBackgroundContentElement = contentElement;\n\n\t\t// Syncs the background to reflect all current background settings\n\t\tthis.sync( slide );\n\n\t\treturn element;\n\n\t}\n\n\t/**\n\t * Renders all of the visual properties of a slide background\n\t * based on the various background attributes.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tsync( slide ) {\n\n\t\tconst element = slide.slideBackgroundElement,\n\t\t\tcontentElement = slide.slideBackgroundContentElement;\n\n\t\tconst data = {\n\t\t\tbackground: slide.getAttribute( 'data-background' ),\n\t\t\tbackgroundSize: slide.getAttribute( 'data-background-size' ),\n\t\t\tbackgroundImage: slide.getAttribute( 'data-background-image' ),\n\t\t\tbackgroundVideo: slide.getAttribute( 'data-background-video' ),\n\t\t\tbackgroundIframe: slide.getAttribute( 'data-background-iframe' ),\n\t\t\tbackgroundColor: slide.getAttribute( 'data-background-color' ),\n\t\t\tbackgroundGradient: slide.getAttribute( 'data-background-gradient' ),\n\t\t\tbackgroundRepeat: slide.getAttribute( 'data-background-repeat' ),\n\t\t\tbackgroundPosition: slide.getAttribute( 'data-background-position' ),\n\t\t\tbackgroundTransition: slide.getAttribute( 'data-background-transition' ),\n\t\t\tbackgroundOpacity: slide.getAttribute( 'data-background-opacity' ),\n\t\t};\n\n\t\tconst dataPreload = slide.hasAttribute( 'data-preload' );\n\n\t\t// Reset the prior background state in case this is not the\n\t\t// initial sync\n\t\tslide.classList.remove( 'has-dark-background' );\n\t\tslide.classList.remove( 'has-light-background' );\n\n\t\telement.removeAttribute( 'data-loaded' );\n\t\telement.removeAttribute( 'data-background-hash' );\n\t\telement.removeAttribute( 'data-background-size' );\n\t\telement.removeAttribute( 'data-background-transition' );\n\t\telement.style.backgroundColor = '';\n\n\t\tcontentElement.style.backgroundSize = '';\n\t\tcontentElement.style.backgroundRepeat = '';\n\t\tcontentElement.style.backgroundPosition = '';\n\t\tcontentElement.style.backgroundImage = '';\n\t\tcontentElement.style.opacity = '';\n\t\tcontentElement.innerHTML = '';\n\n\t\tif( data.background ) {\n\t\t\t// Auto-wrap image urls in url(...)\n\t\t\tif( /^(http|file|\\/\\/)/gi.test( data.background ) || /\\.(svg|png|jpg|jpeg|gif|bmp|webp)([?#\\s]|$)/gi.test( data.background ) ) {\n\t\t\t\tslide.setAttribute( 'data-background-image', data.background );\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.background = data.background;\n\t\t\t}\n\t\t}\n\n\t\t// Create a hash for this combination of background settings.\n\t\t// This is used to determine when two slide backgrounds are\n\t\t// the same.\n\t\tif( data.background || data.backgroundColor || data.backgroundGradient || data.backgroundImage || data.backgroundVideo || data.backgroundIframe ) {\n\t\t\telement.setAttribute( 'data-background-hash', data.background +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundSize +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundImage +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundVideo +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundIframe +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundColor +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundGradient +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundRepeat +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundPosition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundTransition +\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdata.backgroundOpacity );\n\t\t}\n\n\t\t// Additional and optional background properties\n\t\tif( data.backgroundSize ) element.setAttribute( 'data-background-size', data.backgroundSize );\n\t\tif( data.backgroundColor ) element.style.backgroundColor = data.backgroundColor;\n\t\tif( data.backgroundGradient ) element.style.backgroundImage = data.backgroundGradient;\n\t\tif( data.backgroundTransition ) element.setAttribute( 'data-background-transition', data.backgroundTransition );\n\n\t\tif( dataPreload ) element.setAttribute( 'data-preload', '' );\n\n\t\t// Background image options are set on the content wrapper\n\t\tif( data.backgroundSize ) contentElement.style.backgroundSize = data.backgroundSize;\n\t\tif( data.backgroundRepeat ) contentElement.style.backgroundRepeat = data.backgroundRepeat;\n\t\tif( data.backgroundPosition ) contentElement.style.backgroundPosition = data.backgroundPosition;\n\t\tif( data.backgroundOpacity ) contentElement.style.opacity = data.backgroundOpacity;\n\n\t\t// If this slide has a background color, we add a class that\n\t\t// signals if it is light or dark. If the slide has no background\n\t\t// color, no class will be added\n\t\tlet contrastColor = data.backgroundColor;\n\n\t\t// If no bg color was found, or it cannot be converted by colorToRgb, check the computed background\n\t\tif( !contrastColor || !colorToRgb( contrastColor ) ) {\n\t\t\tlet computedBackgroundStyle = window.getComputedStyle( element );\n\t\t\tif( computedBackgroundStyle && computedBackgroundStyle.backgroundColor ) {\n\t\t\t\tcontrastColor = computedBackgroundStyle.backgroundColor;\n\t\t\t}\n\t\t}\n\n\t\tif( contrastColor ) {\n\t\t\tconst rgb = colorToRgb( contrastColor );\n\n\t\t\t// Ignore fully transparent backgrounds. Some browsers return\n\t\t\t// rgba(0,0,0,0) when reading the computed background color of\n\t\t\t// an element with no background\n\t\t\tif( rgb && rgb.a !== 0 ) {\n\t\t\t\tif( colorBrightness( contrastColor ) < 128 ) {\n\t\t\t\t\tslide.classList.add( 'has-dark-background' );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslide.classList.add( 'has-light-background' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the background elements to reflect the current\n\t * slide.\n\t *\n\t * @param {boolean} includeAll If true, the backgrounds of\n\t * all vertical slides (not just the present) will be updated.\n\t */\n\tupdate( includeAll = false ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tlet currentBackground = null;\n\n\t\t// Reverse past/future classes when in RTL mode\n\t\tlet horizontalPast = this.Reveal.getConfig().rtl ? 'future' : 'past',\n\t\t\thorizontalFuture = this.Reveal.getConfig().rtl ? 'past' : 'future';\n\n\t\t// Update the classes of all backgrounds to match the\n\t\t// states of their slides (past/present/future)\n\t\tArray.from( this.element.childNodes ).forEach( ( backgroundh, h ) => {\n\n\t\t\tbackgroundh.classList.remove( 'past', 'present', 'future' );\n\n\t\t\tif( h < indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalPast );\n\t\t\t}\n\t\t\telse if ( h > indices.h ) {\n\t\t\t\tbackgroundh.classList.add( horizontalFuture );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundh.classList.add( 'present' );\n\n\t\t\t\t// Store a reference to the current background element\n\t\t\t\tcurrentBackground = backgroundh;\n\t\t\t}\n\n\t\t\tif( includeAll || h === indices.h ) {\n\t\t\t\tqueryAll( backgroundh, '.slide-background' ).forEach( ( backgroundv, v ) => {\n\n\t\t\t\t\tbackgroundv.classList.remove( 'past', 'present', 'future' );\n\n\t\t\t\t\tif( v < indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'past' );\n\t\t\t\t\t}\n\t\t\t\t\telse if ( v > indices.v ) {\n\t\t\t\t\t\tbackgroundv.classList.add( 'future' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tbackgroundv.classList.add( 'present' );\n\n\t\t\t\t\t\t// Only if this is the present horizontal and vertical slide\n\t\t\t\t\t\tif( h === indices.h ) currentBackground = backgroundv;\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\t\t\t}\n\n\t\t} );\n\n\t\t// Stop content inside of previous backgrounds\n\t\tif( this.previousBackground ) {\n\n\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( this.previousBackground, { unloadIframes: !this.Reveal.slideContent.shouldPreload( this.previousBackground ) } );\n\n\t\t}\n\n\t\t// Start content in the current background\n\t\tif( currentBackground ) {\n\n\t\t\tthis.Reveal.slideContent.startEmbeddedContent( currentBackground );\n\n\t\t\tlet currentBackgroundContent = currentBackground.querySelector( '.slide-background-content' );\n\t\t\tif( currentBackgroundContent ) {\n\n\t\t\t\tlet backgroundImageURL = currentBackgroundContent.style.backgroundImage || '';\n\n\t\t\t\t// Restart GIFs (doesn't work in Firefox)\n\t\t\t\tif( /\\.gif/i.test( backgroundImageURL ) ) {\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = '';\n\t\t\t\t\twindow.getComputedStyle( currentBackgroundContent ).opacity;\n\t\t\t\t\tcurrentBackgroundContent.style.backgroundImage = backgroundImageURL;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Don't transition between identical backgrounds. This\n\t\t\t// prevents unwanted flicker.\n\t\t\tlet previousBackgroundHash = this.previousBackground ? this.previousBackground.getAttribute( 'data-background-hash' ) : null;\n\t\t\tlet currentBackgroundHash = currentBackground.getAttribute( 'data-background-hash' );\n\t\t\tif( currentBackgroundHash && currentBackgroundHash === previousBackgroundHash && currentBackground !== this.previousBackground ) {\n\t\t\t\tthis.element.classList.add( 'no-transition' );\n\t\t\t}\n\n\t\t\tthis.previousBackground = currentBackground;\n\n\t\t}\n\n\t\t// If there's a background brightness flag for this slide,\n\t\t// bubble it to the .reveal container\n\t\tif( currentSlide ) {\n\t\t\t[ 'has-light-background', 'has-dark-background' ].forEach( classToBubble => {\n\t\t\t\tif( currentSlide.classList.contains( classToBubble ) ) {\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.add( classToBubble );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.getRevealElement().classList.remove( classToBubble );\n\t\t\t\t}\n\t\t\t}, this );\n\t\t}\n\n\t\t// Allow the first background to apply without transition\n\t\tsetTimeout( () => {\n\t\t\tthis.element.classList.remove( 'no-transition' );\n\t\t}, 1 );\n\n\t}\n\n\t/**\n\t * Updates the position of the parallax background based\n\t * on the current slide index.\n\t */\n\tupdateParallax() {\n\n\t\tlet indices = this.Reveal.getIndices();\n\n\t\tif( this.Reveal.getConfig().parallaxBackgroundImage ) {\n\n\t\t\tlet horizontalSlides = this.Reveal.getHorizontalSlides(),\n\t\t\t\tverticalSlides = this.Reveal.getVerticalSlides();\n\n\t\t\tlet backgroundSize = this.element.style.backgroundSize.split( ' ' ),\n\t\t\t\tbackgroundWidth, backgroundHeight;\n\n\t\t\tif( backgroundSize.length === 1 ) {\n\t\t\t\tbackgroundWidth = backgroundHeight = parseInt( backgroundSize[0], 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbackgroundWidth = parseInt( backgroundSize[0], 10 );\n\t\t\t\tbackgroundHeight = parseInt( backgroundSize[1], 10 );\n\t\t\t}\n\n\t\t\tlet slideWidth = this.element.offsetWidth,\n\t\t\t\thorizontalSlideCount = horizontalSlides.length,\n\t\t\t\thorizontalOffsetMultiplier,\n\t\t\t\thorizontalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundHorizontal === 'number' ) {\n\t\t\t\thorizontalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundHorizontal;\n\t\t\t}\n\t\t\telse {\n\t\t\t\thorizontalOffsetMultiplier = horizontalSlideCount > 1 ? ( backgroundWidth - slideWidth ) / ( horizontalSlideCount-1 ) : 0;\n\t\t\t}\n\n\t\t\thorizontalOffset = horizontalOffsetMultiplier * indices.h * -1;\n\n\t\t\tlet slideHeight = this.element.offsetHeight,\n\t\t\t\tverticalSlideCount = verticalSlides.length,\n\t\t\t\tverticalOffsetMultiplier,\n\t\t\t\tverticalOffset;\n\n\t\t\tif( typeof this.Reveal.getConfig().parallaxBackgroundVertical === 'number' ) {\n\t\t\t\tverticalOffsetMultiplier = this.Reveal.getConfig().parallaxBackgroundVertical;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tverticalOffsetMultiplier = ( backgroundHeight - slideHeight ) / ( verticalSlideCount-1 );\n\t\t\t}\n\n\t\t\tverticalOffset = verticalSlideCount > 0 ?  verticalOffsetMultiplier * indices.v : 0;\n\n\t\t\tthis.element.style.backgroundPosition = horizontalOffset + 'px ' + -verticalOffset + 'px';\n\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}\n","\nexport const SLIDES_SELECTOR = '.slides section';\nexport const HORIZONTAL_SLIDES_SELECTOR = '.slides>section';\nexport const VERTICAL_SLIDES_SELECTOR = '.slides>section.present>section';\n\n// Methods that may not be invoked via the postMessage API\nexport const POST_MESSAGE_METHOD_BLACKLIST = /registerPlugin|registerKeyboardShortcut|addKeyBinding|addEventListener/;\n\n// Regex for retrieving the fragment style from a class attribute\nexport const FRAGMENT_STYLE_REGEX = /fade-(down|up|right|left|out|in-then-out|in-then-semi-out)|semi-fade-out|current-visible|shrink|grow/;","import { queryAll, extend, createStyleSheet, matches, closest } from '../utils/util.js'\nimport { FRAGMENT_STYLE_REGEX } from '../utils/constants.js'\n\n// Counter used to generate unique IDs for auto-animated elements\nlet autoAnimateCounter = 0;\n\n/**\n * Automatically animates matching elements across\n * slides with the [data-auto-animate] attribute.\n */\nexport default class AutoAnimate {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Runs an auto-animation between the given slides.\n\t *\n\t * @param  {HTMLElement} fromSlide\n\t * @param  {HTMLElement} toSlide\n\t */\n\trun( fromSlide, toSlide ) {\n\n\t\t// Clean up after prior animations\n\t\tthis.reset();\n\n\t\tlet allSlides = this.Reveal.getSlides();\n\t\tlet toSlideIndex = allSlides.indexOf( toSlide );\n\t\tlet fromSlideIndex = allSlides.indexOf( fromSlide );\n\n\t\t// Ensure that both slides are auto-animate targets with the same data-auto-animate-id value\n\t\t// (including null if absent on both) and that data-auto-animate-restart isn't set on the\n\t\t// physically latter slide (independent of slide direction)\n\t\tif( fromSlide.hasAttribute( 'data-auto-animate' ) && toSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t&& fromSlide.getAttribute( 'data-auto-animate-id' ) === toSlide.getAttribute( 'data-auto-animate-id' ) \n\t\t\t\t&& !( toSlideIndex > fromSlideIndex ? toSlide : fromSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t// Create a new auto-animate sheet\n\t\t\tthis.autoAnimateStyleSheet = this.autoAnimateStyleSheet || createStyleSheet();\n\n\t\t\tlet animationOptions = this.getAutoAnimateOptions( toSlide );\n\n\t\t\t// Set our starting state\n\t\t\tfromSlide.dataset.autoAnimate = 'pending';\n\t\t\ttoSlide.dataset.autoAnimate = 'pending';\n\n\t\t\t// Flag the navigation direction, needed for fragment buildup\n\t\t\tanimationOptions.slideDirection = toSlideIndex > fromSlideIndex ? 'forward' : 'backward';\n\n\t\t\t// If the from-slide is hidden because it has moved outside\n\t\t\t// the view distance, we need to temporarily show it while\n\t\t\t// measuring\n\t\t\tlet fromSlideIsHidden = fromSlide.style.display === 'none';\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = this.Reveal.getConfig().display;\n\n\t\t\t// Inject our auto-animate styles for this transition\n\t\t\tlet css = this.getAutoAnimatableElements( fromSlide, toSlide ).map( elements => {\n\t\t\t\treturn this.autoAnimateElements( elements.from, elements.to, elements.options || {}, animationOptions, autoAnimateCounter++ );\n\t\t\t} );\n\n\t\t\tif( fromSlideIsHidden ) fromSlide.style.display = 'none';\n\n\t\t\t// Animate unmatched elements, if enabled\n\t\t\tif( toSlide.dataset.autoAnimateUnmatched !== 'false' && this.Reveal.getConfig().autoAnimateUnmatched === true ) {\n\n\t\t\t\t// Our default timings for unmatched elements\n\t\t\t\tlet defaultUnmatchedDuration = animationOptions.duration * 0.8,\n\t\t\t\t\tdefaultUnmatchedDelay = animationOptions.duration * 0.2;\n\n\t\t\t\tthis.getUnmatchedAutoAnimateElements( toSlide ).forEach( unmatchedElement => {\n\n\t\t\t\t\tlet unmatchedOptions = this.getAutoAnimateOptions( unmatchedElement, animationOptions );\n\t\t\t\t\tlet id = 'unmatched';\n\n\t\t\t\t\t// If there is a duration or delay set specifically for this\n\t\t\t\t\t// element our unmatched elements should adhere to those\n\t\t\t\t\tif( unmatchedOptions.duration !== animationOptions.duration || unmatchedOptions.delay !== animationOptions.delay ) {\n\t\t\t\t\t\tid = 'unmatched-' + autoAnimateCounter++;\n\t\t\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"${id}\"] { transition: opacity ${unmatchedOptions.duration}s ease ${unmatchedOptions.delay}s; }` );\n\t\t\t\t\t}\n\n\t\t\t\t\tunmatchedElement.dataset.autoAnimateTarget = id;\n\n\t\t\t\t}, this );\n\n\t\t\t\t// Our default transition for unmatched elements\n\t\t\t\tcss.push( `[data-auto-animate=\"running\"] [data-auto-animate-target=\"unmatched\"] { transition: opacity ${defaultUnmatchedDuration}s ease ${defaultUnmatchedDelay}s; }` );\n\n\t\t\t}\n\n\t\t\t// Setting the whole chunk of CSS at once is the most\n\t\t\t// efficient way to do this. Using sheet.insertRule\n\t\t\t// is multiple factors slower.\n\t\t\tthis.autoAnimateStyleSheet.innerHTML = css.join( '' );\n\n\t\t\t// Start the animation next cycle\n\t\t\trequestAnimationFrame( () => {\n\t\t\t\tif( this.autoAnimateStyleSheet ) {\n\t\t\t\t\t// This forces our newly injected styles to be applied in Firefox\n\t\t\t\t\tgetComputedStyle( this.autoAnimateStyleSheet ).fontWeight;\n\n\t\t\t\t\ttoSlide.dataset.autoAnimate = 'running';\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'autoanimate',\n\t\t\t\tdata: {\n\t\t\t\t\tfromSlide,\n\t\t\t\t\ttoSlide,\n\t\t\t\t\tsheet: this.autoAnimateStyleSheet\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Rolls back all changes that we've made to the DOM so\n\t * that as part of animating.\n\t */\n\treset() {\n\n\t\t// Reset slides\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate]:not([data-auto-animate=\"\"])' ).forEach( element => {\n\t\t\telement.dataset.autoAnimate = '';\n\t\t} );\n\n\t\t// Reset elements\n\t\tqueryAll( this.Reveal.getRevealElement(), '[data-auto-animate-target]' ).forEach( element => {\n\t\t\tdelete element.dataset.autoAnimateTarget;\n\t\t} );\n\n\t\t// Remove the animation sheet\n\t\tif( this.autoAnimateStyleSheet && this.autoAnimateStyleSheet.parentNode ) {\n\t\t\tthis.autoAnimateStyleSheet.parentNode.removeChild( this.autoAnimateStyleSheet );\n\t\t\tthis.autoAnimateStyleSheet = null;\n\t\t}\n\n\t}\n\n\t/**\n\t * Creates a FLIP animation where the `to` element starts out\n\t * in the `from` element position and animates to its original\n\t * state.\n\t *\n\t * @param {HTMLElement} from\n\t * @param {HTMLElement} to\n\t * @param {Object} elementOptions Options for this element pair\n\t * @param {Object} animationOptions Options set at the slide level\n\t * @param {String} id Unique ID that we can use to identify this\n\t * auto-animate element in the DOM\n\t */\n\tautoAnimateElements( from, to, elementOptions, animationOptions, id ) {\n\n\t\t// 'from' elements are given a data-auto-animate-target with no value,\n\t\t// 'to' elements are are given a data-auto-animate-target with an ID\n\t\tfrom.dataset.autoAnimateTarget = '';\n\t\tto.dataset.autoAnimateTarget = id;\n\n\t\t// Each element may override any of the auto-animate options\n\t\t// like transition easing, duration and delay via data-attributes\n\t\tlet options = this.getAutoAnimateOptions( to, animationOptions );\n\n\t\t// If we're using a custom element matcher the element options\n\t\t// may contain additional transition overrides\n\t\tif( typeof elementOptions.delay !== 'undefined' ) options.delay = elementOptions.delay;\n\t\tif( typeof elementOptions.duration !== 'undefined' ) options.duration = elementOptions.duration;\n\t\tif( typeof elementOptions.easing !== 'undefined' ) options.easing = elementOptions.easing;\n\n\t\tlet fromProps = this.getAutoAnimatableProperties( 'from', from, elementOptions ),\n\t\t\ttoProps = this.getAutoAnimatableProperties( 'to', to, elementOptions );\n\n\t\t// Maintain fragment visibility for matching elements when\n\t\t// we're navigating forwards, this way the viewer won't need\n\t\t// to step through the same fragments twice\n\t\tif( to.classList.contains( 'fragment' ) ) {\n\n\t\t\t// Don't auto-animate the opacity of fragments to avoid\n\t\t\t// conflicts with fragment animations\n\t\t\tdelete toProps.styles['opacity'];\n\n\t\t\tif( from.classList.contains( 'fragment' ) ) {\n\n\t\t\t\tlet fromFragmentStyle = ( from.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\t\t\t\tlet toFragmentStyle = ( to.className.match( FRAGMENT_STYLE_REGEX ) || [''] )[0];\n\n\t\t\t\t// Only skip the fragment if the fragment animation style\n\t\t\t\t// remains unchanged\n\t\t\t\tif( fromFragmentStyle === toFragmentStyle && animationOptions.slideDirection === 'forward' ) {\n\t\t\t\t\tto.classList.add( 'visible', 'disabled' );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// If translation and/or scaling are enabled, css transform\n\t\t// the 'to' element so that it matches the position and size\n\t\t// of the 'from' element\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\n\t\t\tlet presentationScale = this.Reveal.getScale();\n\n\t\t\tlet delta = {\n\t\t\t\tx: ( fromProps.x - toProps.x ) / presentationScale,\n\t\t\t\ty: ( fromProps.y - toProps.y ) / presentationScale,\n\t\t\t\tscaleX: fromProps.width / toProps.width,\n\t\t\t\tscaleY: fromProps.height / toProps.height\n\t\t\t};\n\n\t\t\t// Limit decimal points to avoid 0.0001px blur and stutter\n\t\t\tdelta.x = Math.round( delta.x * 1000 ) / 1000;\n\t\t\tdelta.y = Math.round( delta.y * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\t\t\tdelta.scaleX = Math.round( delta.scaleX * 1000 ) / 1000;\n\n\t\t\tlet translate = elementOptions.translate !== false && ( delta.x !== 0 || delta.y !== 0 ),\n\t\t\t\tscale = elementOptions.scale !== false && ( delta.scaleX !== 0 || delta.scaleY !== 0 );\n\n\t\t\t// No need to transform if nothing's changed\n\t\t\tif( translate || scale ) {\n\n\t\t\t\tlet transform = [];\n\n\t\t\t\tif( translate ) transform.push( `translate(${delta.x}px, ${delta.y}px)` );\n\t\t\t\tif( scale ) transform.push( `scale(${delta.scaleX}, ${delta.scaleY})` );\n\n\t\t\t\tfromProps.styles['transform'] = transform.join( ' ' );\n\t\t\t\tfromProps.styles['transform-origin'] = 'top left';\n\n\t\t\t\ttoProps.styles['transform'] = 'none';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Delete all unchanged 'to' styles\n\t\tfor( let propertyName in toProps.styles ) {\n\t\t\tconst toValue = toProps.styles[propertyName];\n\t\t\tconst fromValue = fromProps.styles[propertyName];\n\n\t\t\tif( toValue === fromValue ) {\n\t\t\t\tdelete toProps.styles[propertyName];\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// If these property values were set via a custom matcher providing\n\t\t\t\t// an explicit 'from' and/or 'to' value, we always inject those values.\n\t\t\t\tif( toValue.explicitValue === true ) {\n\t\t\t\t\ttoProps.styles[propertyName] = toValue.value;\n\t\t\t\t}\n\n\t\t\t\tif( fromValue.explicitValue === true ) {\n\t\t\t\t\tfromProps.styles[propertyName] = fromValue.value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tlet css = '';\n\n\t\tlet toStyleProperties = Object.keys( toProps.styles );\n\n\t\t// Only create animate this element IF at least one style\n\t\t// property has changed\n\t\tif( toStyleProperties.length > 0 ) {\n\n\t\t\t// Instantly move to the 'from' state\n\t\t\tfromProps.styles['transition'] = 'none';\n\n\t\t\t// Animate towards the 'to' state\n\t\t\ttoProps.styles['transition'] = `all ${options.duration}s ${options.easing} ${options.delay}s`;\n\t\t\ttoProps.styles['transition-property'] = toStyleProperties.join( ', ' );\n\t\t\ttoProps.styles['will-change'] = toStyleProperties.join( ', ' );\n\n\t\t\t// Build up our custom CSS. We need to override inline styles\n\t\t\t// so we need to make our styles vErY IMPORTANT!1!!\n\t\t\tlet fromCSS = Object.keys( fromProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + fromProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tlet toCSS = Object.keys( toProps.styles ).map( propertyName => {\n\t\t\t\treturn propertyName + ': ' + toProps.styles[propertyName] + ' !important;';\n\t\t\t} ).join( '' );\n\n\t\t\tcss = \t'[data-auto-animate-target=\"'+ id +'\"] {'+ fromCSS +'}' +\n\t\t\t\t\t'[data-auto-animate=\"running\"] [data-auto-animate-target=\"'+ id +'\"] {'+ toCSS +'}';\n\n\t\t}\n\n\t\treturn css;\n\n\t}\n\n\t/**\n\t * Returns the auto-animate options for the given element.\n\t *\n\t * @param {HTMLElement} element Element to pick up options\n\t * from, either a slide or an animation target\n\t * @param {Object} [inheritedOptions] Optional set of existing\n\t * options\n\t */\n\tgetAutoAnimateOptions( element, inheritedOptions ) {\n\n\t\tlet options = {\n\t\t\teasing: this.Reveal.getConfig().autoAnimateEasing,\n\t\t\tduration: this.Reveal.getConfig().autoAnimateDuration,\n\t\t\tdelay: 0\n\t\t};\n\n\t\toptions = extend( options, inheritedOptions );\n\n\t\t// Inherit options from parent elements\n\t\tif( element.parentNode ) {\n\t\t\tlet autoAnimatedParent = closest( element.parentNode, '[data-auto-animate-target]' );\n\t\t\tif( autoAnimatedParent ) {\n\t\t\t\toptions = this.getAutoAnimateOptions( autoAnimatedParent, options );\n\t\t\t}\n\t\t}\n\n\t\tif( element.dataset.autoAnimateEasing ) {\n\t\t\toptions.easing = element.dataset.autoAnimateEasing;\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDuration ) {\n\t\t\toptions.duration = parseFloat( element.dataset.autoAnimateDuration );\n\t\t}\n\n\t\tif( element.dataset.autoAnimateDelay ) {\n\t\t\toptions.delay = parseFloat( element.dataset.autoAnimateDelay );\n\t\t}\n\n\t\treturn options;\n\n\t}\n\n\t/**\n\t * Returns an object containing all of the properties\n\t * that can be auto-animated for the given element and\n\t * their current computed values.\n\t *\n\t * @param {String} direction 'from' or 'to'\n\t */\n\tgetAutoAnimatableProperties( direction, element, elementOptions ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\tlet properties = { styles: [] };\n\n\t\t// Position and size\n\t\tif( elementOptions.translate !== false || elementOptions.scale !== false ) {\n\t\t\tlet bounds;\n\n\t\t\t// Custom auto-animate may optionally return a custom tailored\n\t\t\t// measurement function\n\t\t\tif( typeof elementOptions.measure === 'function' ) {\n\t\t\t\tbounds = elementOptions.measure( element );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( config.center ) {\n\t\t\t\t\t// More precise, but breaks when used in combination\n\t\t\t\t\t// with zoom for scaling the deck ¯\\_(ツ)_/¯\n\t\t\t\t\tbounds = element.getBoundingClientRect();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tlet scale = this.Reveal.getScale();\n\t\t\t\t\tbounds = {\n\t\t\t\t\t\tx: element.offsetLeft * scale,\n\t\t\t\t\t\ty: element.offsetTop * scale,\n\t\t\t\t\t\twidth: element.offsetWidth * scale,\n\t\t\t\t\t\theight: element.offsetHeight * scale\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.x = bounds.x;\n\t\t\tproperties.y = bounds.y;\n\t\t\tproperties.width = bounds.width;\n\t\t\tproperties.height = bounds.height;\n\t\t}\n\n\t\tconst computedStyles = getComputedStyle( element );\n\n\t\t// CSS styles\n\t\t( elementOptions.styles || config.autoAnimateStyles ).forEach( style => {\n\t\t\tlet value;\n\n\t\t\t// `style` is either the property name directly, or an object\n\t\t\t// definition of a style property\n\t\t\tif( typeof style === 'string' ) style = { property: style };\n\n\t\t\tif( typeof style.from !== 'undefined' && direction === 'from' ) {\n\t\t\t\tvalue = { value: style.from, explicitValue: true };\n\t\t\t}\n\t\t\telse if( typeof style.to !== 'undefined' && direction === 'to' ) {\n\t\t\t\tvalue = { value: style.to, explicitValue: true };\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvalue = computedStyles[style.property];\n\t\t\t}\n\n\t\t\tif( value !== '' ) {\n\t\t\t\tproperties.styles[style.property] = value;\n\t\t\t}\n\t\t} );\n\n\t\treturn properties;\n\n\t}\n\n\t/**\n\t * Get a list of all element pairs that we can animate\n\t * between the given slides.\n\t *\n\t * @param {HTMLElement} fromSlide\n\t * @param {HTMLElement} toSlide\n\t *\n\t * @return {Array} Each value is an array where [0] is\n\t * the element we're animating from and [1] is the\n\t * element we're animating to\n\t */\n\tgetAutoAnimatableElements( fromSlide, toSlide ) {\n\n\t\tlet matcher = typeof this.Reveal.getConfig().autoAnimateMatcher === 'function' ? this.Reveal.getConfig().autoAnimateMatcher : this.getAutoAnimatePairs;\n\n\t\tlet pairs = matcher.call( this, fromSlide, toSlide );\n\n\t\tlet reserved = [];\n\n\t\t// Remove duplicate pairs\n\t\treturn pairs.filter( ( pair, index ) => {\n\t\t\tif( reserved.indexOf( pair.to ) === -1 ) {\n\t\t\t\treserved.push( pair.to );\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Identifies matching elements between slides.\n\t *\n\t * You can specify a custom matcher function by using\n\t * the `autoAnimateMatcher` config option.\n\t */\n\tgetAutoAnimatePairs( fromSlide, toSlide ) {\n\n\t\tlet pairs = [];\n\n\t\tconst codeNodes = 'pre';\n\t\tconst textNodes = 'h1, h2, h3, h4, h5, h6, p, li';\n\t\tconst mediaNodes = 'img, video, iframe';\n\n\t\t// Eplicit matches via data-id\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, '[data-id]', node => {\n\t\t\treturn node.nodeName + ':::' + node.getAttribute( 'data-id' );\n\t\t} );\n\n\t\t// Text\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, textNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\t// Media\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, mediaNodes, node => {\n\t\t\treturn node.nodeName + ':::' + ( node.getAttribute( 'src' ) || node.getAttribute( 'data-src' ) );\n\t\t} );\n\n\t\t// Code\n\t\tthis.findAutoAnimateMatches( pairs, fromSlide, toSlide, codeNodes, node => {\n\t\t\treturn node.nodeName + ':::' + node.innerText;\n\t\t} );\n\n\t\tpairs.forEach( pair => {\n\n\t\t\t// Disable scale transformations on text nodes, we transition\n\t\t\t// each individual text property instead\n\t\t\tif( matches( pair.from, textNodes ) ) {\n\t\t\t\tpair.options = { scale: false };\n\t\t\t}\n\t\t\t// Animate individual lines of code\n\t\t\telse if( matches( pair.from, codeNodes ) ) {\n\n\t\t\t\t// Transition the code block's width and height instead of scaling\n\t\t\t\t// to prevent its content from being squished\n\t\t\t\tpair.options = { scale: false, styles: [ 'width', 'height' ] };\n\n\t\t\t\t// Lines of code\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-code', node => {\n\t\t\t\t\treturn node.textContent;\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t\t// Line numbers\n\t\t\t\tthis.findAutoAnimateMatches( pairs, pair.from, pair.to, '.hljs .hljs-ln-line[data-line-number]', node => {\n\t\t\t\t\treturn node.getAttribute( 'data-line-number' );\n\t\t\t\t}, {\n\t\t\t\t\tscale: false,\n\t\t\t\t\tstyles: [ 'width' ],\n\t\t\t\t\tmeasure: this.getLocalBoundingBox.bind( this )\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\treturn pairs;\n\n\t}\n\n\t/**\n\t * Helper method which returns a bounding box based on\n\t * the given elements offset coordinates.\n\t *\n\t * @param {HTMLElement} element\n\t * @return {Object} x, y, width, height\n\t */\n\tgetLocalBoundingBox( element ) {\n\n\t\tconst presentationScale = this.Reveal.getScale();\n\n\t\treturn {\n\t\t\tx: Math.round( ( element.offsetLeft * presentationScale ) * 100 ) / 100,\n\t\t\ty: Math.round( ( element.offsetTop * presentationScale ) * 100 ) / 100,\n\t\t\twidth: Math.round( ( element.offsetWidth * presentationScale ) * 100 ) / 100,\n\t\t\theight: Math.round( ( element.offsetHeight * presentationScale ) * 100 ) / 100\n\t\t};\n\n\t}\n\n\t/**\n\t * Finds matching elements between two slides.\n\t *\n\t * @param {Array} pairs            \tList of pairs to push matches to\n\t * @param {HTMLElement} fromScope   Scope within the from element exists\n\t * @param {HTMLElement} toScope     Scope within the to element exists\n\t * @param {String} selector         CSS selector of the element to match\n\t * @param {Function} serializer     A function that accepts an element and returns\n\t *                                  a stringified ID based on its contents\n\t * @param {Object} animationOptions Optional config options for this pair\n\t */\n\tfindAutoAnimateMatches( pairs, fromScope, toScope, selector, serializer, animationOptions ) {\n\n\t\tlet fromMatches = {};\n\t\tlet toMatches = {};\n\n\t\t[].slice.call( fromScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\tif( typeof key === 'string' && key.length ) {\n\t\t\t\tfromMatches[key] = fromMatches[key] || [];\n\t\t\t\tfromMatches[key].push( element );\n\t\t\t}\n\t\t} );\n\n\t\t[].slice.call( toScope.querySelectorAll( selector ) ).forEach( ( element, i ) => {\n\t\t\tconst key = serializer( element );\n\t\t\ttoMatches[key] = toMatches[key] || [];\n\t\t\ttoMatches[key].push( element );\n\n\t\t\tlet fromElement;\n\n\t\t\t// Retrieve the 'from' element\n\t\t\tif( fromMatches[key] ) {\n\t\t\t\tconst pimaryIndex = toMatches[key].length - 1;\n\t\t\t\tconst secondaryIndex = fromMatches[key].length - 1;\n\n\t\t\t\t// If there are multiple identical from elements, retrieve\n\t\t\t\t// the one at the same index as our to-element.\n\t\t\t\tif( fromMatches[key][ pimaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ pimaryIndex ];\n\t\t\t\t\tfromMatches[key][ pimaryIndex ] = null;\n\t\t\t\t}\n\t\t\t\t// If there are no matching from-elements at the same index,\n\t\t\t\t// use the last one.\n\t\t\t\telse if( fromMatches[key][ secondaryIndex ] ) {\n\t\t\t\t\tfromElement = fromMatches[key][ secondaryIndex ];\n\t\t\t\t\tfromMatches[key][ secondaryIndex ] = null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If we've got a matching pair, push it to the list of pairs\n\t\t\tif( fromElement ) {\n\t\t\t\tpairs.push({\n\t\t\t\t\tfrom: fromElement,\n\t\t\t\t\tto: element,\n\t\t\t\t\toptions: animationOptions\n\t\t\t\t});\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns a all elements within the given scope that should\n\t * be considered unmatched in an auto-animate transition. If\n\t * fading of unmatched elements is turned on, these elements\n\t * will fade when going between auto-animate slides.\n\t *\n\t * Note that parents of auto-animate targets are NOT considerd\n\t * unmatched since fading them would break the auto-animation.\n\t *\n\t * @param {HTMLElement} rootElement\n\t * @return {Array}\n\t */\n\tgetUnmatchedAutoAnimateElements( rootElement ) {\n\n\t\treturn [].slice.call( rootElement.children ).reduce( ( result, element ) => {\n\n\t\t\tconst containsAnimatedElements = element.querySelector( '[data-auto-animate-target]' );\n\n\t\t\t// The element is unmatched if\n\t\t\t// - It is not an auto-animate target\n\t\t\t// - It does not contain any auto-animate targets\n\t\t\tif( !element.hasAttribute( 'data-auto-animate-target' ) && !containsAnimatedElements ) {\n\t\t\t\tresult.push( element );\n\t\t\t}\n\n\t\t\tif( element.querySelector( '[data-auto-animate-target]' ) ) {\n\t\t\t\tresult = result.concat( this.getUnmatchedAutoAnimateElements( element ) );\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}, [] );\n\n\t}\n\n}\n","import { extend, queryAll } from '../utils/util.js'\n\n/**\n * Handles sorting and navigation of slide fragments.\n * Fragments are elements within a slide that are\n * revealed/animated incrementally.\n */\nexport default class Fragments {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.fragments === false ) {\n\t\t\tthis.disable();\n\t\t}\n\t\telse if( oldConfig.fragments === false ) {\n\t\t\tthis.enable();\n\t\t}\n\n\t}\n\n\t/**\n\t * If fragments are disabled in the deck, they should all be\n\t * visible rather than stepped through.\n\t */\n\tdisable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.add( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Reverse of #disable(). Only called if fragments have\n\t * previously been disabled.\n\t */\n\tenable() {\n\n\t\tqueryAll( this.Reveal.getSlidesElement(), '.fragment' ).forEach( element => {\n\t\t\telement.classList.remove( 'visible' );\n\t\t\telement.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Returns an object describing the available fragment\n\t * directions.\n\t *\n\t * @return {{prev: boolean, next: boolean}}\n\t */\n\tavailableRoutes() {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\t\t\tlet fragments = currentSlide.querySelectorAll( '.fragment:not(.disabled)' );\n\t\t\tlet hiddenFragments = currentSlide.querySelectorAll( '.fragment:not(.disabled):not(.visible)' );\n\n\t\t\treturn {\n\t\t\t\tprev: fragments.length - hiddenFragments.length > 0,\n\t\t\t\tnext: !!hiddenFragments.length\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\treturn { prev: false, next: false };\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a sorted fragments list, ordered by an increasing\n\t * \"data-fragment-index\" attribute.\n\t *\n\t * Fragments will be revealed in the order that they are returned by\n\t * this function, so you can use the index attributes to control the\n\t * order of fragment appearance.\n\t *\n\t * To maintain a sensible default fragment order, fragments are presumed\n\t * to be passed in document order. This function adds a \"fragment-index\"\n\t * attribute to each node if such an attribute is not already present,\n\t * and sets that attribute to an integer value which is the position of\n\t * the fragment within the fragments list.\n\t *\n\t * @param {object[]|*} fragments\n\t * @param {boolean} grouped If true the returned array will contain\n\t * nested arrays for all fragments with the same index\n\t * @return {object[]} sorted Sorted array of fragments\n\t */\n\tsort( fragments, grouped = false ) {\n\n\t\tfragments = Array.from( fragments );\n\n\t\tlet ordered = [],\n\t\t\tunordered = [],\n\t\t\tsorted = [];\n\n\t\t// Group ordered and unordered elements\n\t\tfragments.forEach( fragment => {\n\t\t\tif( fragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\tlet index = parseInt( fragment.getAttribute( 'data-fragment-index' ), 10 );\n\n\t\t\t\tif( !ordered[index] ) {\n\t\t\t\t\tordered[index] = [];\n\t\t\t\t}\n\n\t\t\t\tordered[index].push( fragment );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tunordered.push( [ fragment ] );\n\t\t\t}\n\t\t} );\n\n\t\t// Append fragments without explicit indices in their\n\t\t// DOM order\n\t\tordered = ordered.concat( unordered );\n\n\t\t// Manually count the index up per group to ensure there\n\t\t// are no gaps\n\t\tlet index = 0;\n\n\t\t// Push all fragments in their sorted order to an array,\n\t\t// this flattens the groups\n\t\tordered.forEach( group => {\n\t\t\tgroup.forEach( fragment => {\n\t\t\t\tsorted.push( fragment );\n\t\t\t\tfragment.setAttribute( 'data-fragment-index', index );\n\t\t\t} );\n\n\t\t\tindex ++;\n\t\t} );\n\n\t\treturn grouped === true ? ordered : sorted;\n\n\t}\n\n\t/**\n\t * Sorts and formats all of fragments in the\n\t * presentation.\n\t */\n\tsortAll() {\n\n\t\tthis.Reveal.getHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tlet verticalSlides = queryAll( horizontalSlide, 'section' );\n\t\t\tverticalSlides.forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tthis.sort( verticalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\t}, this );\n\n\t\t\tif( verticalSlides.length === 0 ) this.sort( horizontalSlide.querySelectorAll( '.fragment' ) );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Refreshes the fragments on the current slide so that they\n\t * have the appropriate classes (.visible + .current-fragment).\n\t *\n\t * @param {number} [index] The index of the current fragment\n\t * @param {array} [fragments] Array containing all fragments\n\t * in the current slide\n\t *\n\t * @return {{shown: array, hidden: array}}\n\t */\n\tupdate( index, fragments ) {\n\n\t\tlet changedFragments = {\n\t\t\tshown: [],\n\t\t\thidden: []\n\t\t};\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tfragments = fragments || this.sort( currentSlide.querySelectorAll( '.fragment' ) );\n\n\t\t\tif( fragments.length ) {\n\n\t\t\t\tlet maxIndex = 0;\n\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet currentFragment = this.sort( currentSlide.querySelectorAll( '.fragment.visible' ) ).pop();\n\t\t\t\t\tif( currentFragment ) {\n\t\t\t\t\t\tindex = parseInt( currentFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tArray.from( fragments ).forEach( ( el, i ) => {\n\n\t\t\t\t\tif( el.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\t\ti = parseInt( el.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t\t}\n\n\t\t\t\t\tmaxIndex = Math.max( maxIndex, i );\n\n\t\t\t\t\t// Visible fragments\n\t\t\t\t\tif( i <= index ) {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.add( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( i === index ) {\n\t\t\t\t\t\t\t// Announce the fragments one by one to the Screen Reader\n\t\t\t\t\t\t\tthis.Reveal.announceStatus( this.Reveal.getStatusText( el ) );\n\n\t\t\t\t\t\t\tel.classList.add( 'current-fragment' );\n\t\t\t\t\t\t\tthis.Reveal.slideContent.startEmbeddedContent( el );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif( !wasVisible ) {\n\t\t\t\t\t\t\tchangedFragments.shown.push( el )\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'visible',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// Hidden fragments\n\t\t\t\t\telse {\n\t\t\t\t\t\tlet wasVisible = el.classList.contains( 'visible' )\n\t\t\t\t\t\tel.classList.remove( 'visible' );\n\t\t\t\t\t\tel.classList.remove( 'current-fragment' );\n\n\t\t\t\t\t\tif( wasVisible ) {\n\t\t\t\t\t\t\tthis.Reveal.slideContent.stopEmbeddedContent( el );\n\t\t\t\t\t\t\tchangedFragments.hidden.push( el );\n\t\t\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\t\t\ttarget: el,\n\t\t\t\t\t\t\t\ttype: 'hidden',\n\t\t\t\t\t\t\t\tbubbles: false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\t// Write the current fragment index to the slide <section>.\n\t\t\t\t// This can be used by end users to apply styles based on\n\t\t\t\t// the current fragment index.\n\t\t\t\tindex = typeof index === 'number' ? index : -1;\n\t\t\t\tindex = Math.max( Math.min( index, maxIndex ), -1 );\n\t\t\t\tcurrentSlide.setAttribute( 'data-fragment', index );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn changedFragments;\n\n\t}\n\n\t/**\n\t * Formats the fragments on the given slide so that they have\n\t * valid indices. Call this if fragments are changed in the DOM\n\t * after reveal.js has already initialized.\n\t *\n\t * @param {HTMLElement} slide\n\t * @return {Array} a list of the HTML fragments that were synced\n\t */\n\tsync( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\treturn this.sort( slide.querySelectorAll( '.fragment' ) );\n\n\t}\n\n\t/**\n\t * Navigate to the specified slide fragment.\n\t *\n\t * @param {?number} index The index of the fragment that\n\t * should be shown, -1 means all are invisible\n\t * @param {number} offset Integer offset to apply to the\n\t * fragment index\n\t *\n\t * @return {boolean} true if a change was made in any\n\t * fragments visibility as part of this call\n\t */\n\tgoto( index, offset = 0 ) {\n\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide && this.Reveal.getConfig().fragments ) {\n\n\t\t\tlet fragments = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled)' ) );\n\t\t\tif( fragments.length ) {\n\n\t\t\t\t// If no index is specified, find the current\n\t\t\t\tif( typeof index !== 'number' ) {\n\t\t\t\t\tlet lastVisibleFragment = this.sort( currentSlide.querySelectorAll( '.fragment:not(.disabled).visible' ) ).pop();\n\n\t\t\t\t\tif( lastVisibleFragment ) {\n\t\t\t\t\t\tindex = parseInt( lastVisibleFragment.getAttribute( 'data-fragment-index' ) || 0, 10 );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tindex = -1;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply the offset if there is one\n\t\t\t\tindex += offset;\n\n\t\t\t\tlet changedFragments = this.update( index, fragments );\n\n\t\t\t\tif( changedFragments.hidden.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmenthidden',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.hidden[0],\n\t\t\t\t\t\t\tfragments: changedFragments.hidden\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tif( changedFragments.shown.length ) {\n\t\t\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\t\t\ttype: 'fragmentshown',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\tfragment: changedFragments.shown[0],\n\t\t\t\t\t\t\tfragments: changedFragments.shown\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tthis.Reveal.controls.update();\n\t\t\t\tthis.Reveal.progress.update();\n\n\t\t\t\tif( this.Reveal.getConfig().fragmentInURL ) {\n\t\t\t\t\tthis.Reveal.location.writeURL();\n\t\t\t\t}\n\n\t\t\t\treturn !!( changedFragments.shown.length || changedFragments.hidden.length );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Navigate to the next slide fragment.\n\t *\n\t * @return {boolean} true if there was a next fragment,\n\t * false otherwise\n\t */\n\tnext() {\n\n\t\treturn this.goto( null, 1 );\n\n\t}\n\n\t/**\n\t * Navigate to the previous slide fragment.\n\t *\n\t * @return {boolean} true if there was a previous fragment,\n\t * false otherwise\n\t */\n\tprev() {\n\n\t\treturn this.goto( null, -1 );\n\n\t}\n\n}","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { extend, queryAll, transformElement } from '../utils/util.js'\n\n/**\n * Handles all logic related to the overview mode\n * (birds-eye view of all slides).\n */\nexport default class Overview {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.active = false;\n\n\t\tthis.onSlideClicked = this.onSlideClicked.bind( this );\n\n\t}\n\n\t/**\n\t * Displays the overview of slides (quick nav) by scaling\n\t * down and arranging all slide elements.\n\t */\n\tactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview && !this.isActive() ) {\n\n\t\t\tthis.active = true;\n\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview' );\n\n\t\t\t// Don't auto-slide while in overview mode\n\t\t\tthis.Reveal.cancelAutoSlide();\n\n\t\t\t// Move the backgrounds element into the slide container to\n\t\t\t// that the same scaling is applied\n\t\t\tthis.Reveal.getSlidesElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clicking on an overview slide navigates to it\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\tif( !slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tslide.addEventListener( 'click', this.onSlideClicked, true );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\t// Calculate slide sizes\n\t\t\tconst margin = 70;\n\t\t\tconst slideSize = this.Reveal.getComputedSlideSize();\n\t\t\tthis.overviewSlideWidth = slideSize.width + margin;\n\t\t\tthis.overviewSlideHeight = slideSize.height + margin;\n\n\t\t\t// Reverse in RTL mode\n\t\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\t\tthis.overviewSlideWidth = -this.overviewSlideWidth;\n\t\t\t}\n\n\t\t\tthis.Reveal.updateSlidesVisibility();\n\n\t\t\tthis.layout();\n\t\t\tthis.update();\n\n\t\t\tthis.Reveal.layout();\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\t// Notify observers of the overview showing\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewshown',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Uses CSS transforms to position all slides in a grid for\n\t * display inside of the overview mode.\n\t */\n\tlayout() {\n\n\t\t// Layout slides\n\t\tthis.Reveal.getHorizontalSlides().forEach( ( hslide, h ) => {\n\t\t\thslide.setAttribute( 'data-index-h', h );\n\t\t\ttransformElement( hslide, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tif( hslide.classList.contains( 'stack' ) ) {\n\n\t\t\t\tqueryAll( hslide, 'section' ).forEach( ( vslide, v ) => {\n\t\t\t\t\tvslide.setAttribute( 'data-index-h', h );\n\t\t\t\t\tvslide.setAttribute( 'data-index-v', v );\n\n\t\t\t\t\ttransformElement( vslide, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t\t} );\n\n\t\t\t}\n\t\t} );\n\n\t\t// Layout slide backgrounds\n\t\tArray.from( this.Reveal.getBackgroundsElement().childNodes ).forEach( ( hbackground, h ) => {\n\t\t\ttransformElement( hbackground, 'translate3d(' + ( h * this.overviewSlideWidth ) + 'px, 0, 0)' );\n\n\t\t\tqueryAll( hbackground, '.slide-background' ).forEach( ( vbackground, v ) => {\n\t\t\t\ttransformElement( vbackground, 'translate3d(0, ' + ( v * this.overviewSlideHeight ) + 'px, 0)' );\n\t\t\t} );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Moves the overview viewport to the current slides.\n\t * Called each time the current slide changes.\n\t */\n\tupdate() {\n\n\t\tconst vmin = Math.min( window.innerWidth, window.innerHeight );\n\t\tconst scale = Math.max( vmin / 5, 150 ) / vmin;\n\t\tconst indices = this.Reveal.getIndices();\n\n\t\tthis.Reveal.transformSlides( {\n\t\t\toverview: [\n\t\t\t\t'scale('+ scale +')',\n\t\t\t\t'translateX('+ ( -indices.h * this.overviewSlideWidth ) +'px)',\n\t\t\t\t'translateY('+ ( -indices.v * this.overviewSlideHeight ) +'px)'\n\t\t\t].join( ' ' )\n\t\t} );\n\n\t}\n\n\t/**\n\t * Exits the slide overview and enters the currently\n\t * active slide.\n\t */\n\tdeactivate() {\n\n\t\t// Only proceed if enabled in config\n\t\tif( this.Reveal.getConfig().overview ) {\n\n\t\t\tthis.active = false;\n\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview' );\n\n\t\t\t// Temporarily add a class so that transitions can do different things\n\t\t\t// depending on whether they are exiting/entering overview, or just\n\t\t\t// moving from slide to slide\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'overview-deactivating' );\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.Reveal.getRevealElement().classList.remove( 'overview-deactivating' );\n\t\t\t}, 1 );\n\n\t\t\t// Move the background element back out\n\t\t\tthis.Reveal.getRevealElement().appendChild( this.Reveal.getBackgroundsElement() );\n\n\t\t\t// Clean up changes made to slides\n\t\t\tqueryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR ).forEach( slide => {\n\t\t\t\ttransformElement( slide, '' );\n\n\t\t\t\tslide.removeEventListener( 'click', this.onSlideClicked, true );\n\t\t\t} );\n\n\t\t\t// Clean up changes made to backgrounds\n\t\t\tqueryAll( this.Reveal.getBackgroundsElement(), '.slide-background' ).forEach( background => {\n\t\t\t\ttransformElement( background, '' );\n\t\t\t} );\n\n\t\t\tthis.Reveal.transformSlides( { overview: '' } );\n\n\t\t\tconst indices = this.Reveal.getIndices();\n\n\t\t\tthis.Reveal.slide( indices.h, indices.v );\n\t\t\tthis.Reveal.layout();\n\t\t\tthis.Reveal.cueAutoSlide();\n\n\t\t\t// Notify observers of the overview hiding\n\t\t\tthis.Reveal.dispatchEvent({\n\t\t\t\ttype: 'overviewhidden',\n\t\t\t\tdata: {\n\t\t\t\t\t'indexh': indices.h,\n\t\t\t\t\t'indexv': indices.v,\n\t\t\t\t\t'currentSlide': this.Reveal.getCurrentSlide()\n\t\t\t\t}\n\t\t\t});\n\n\t\t}\n\t}\n\n\t/**\n\t * Toggles the slide overview mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * overview is open, false means it's closed.\n\t */\n\ttoggle( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? this.activate() : this.deactivate();\n\t\t}\n\t\telse {\n\t\t\tthis.isActive() ? this.deactivate() : this.activate();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the overview is currently active.\n\t *\n\t * @return {Boolean} true if the overview is active,\n\t * false otherwise\n\t */\n\tisActive() {\n\n\t\treturn this.active;\n\n\t}\n\n\t/**\n\t * Invoked when a slide is and we're in the overview.\n\t *\n\t * @param {object} event\n\t */\n\tonSlideClicked( event ) {\n\n\t\tif( this.isActive() ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tlet element = event.target;\n\n\t\t\twhile( element && !element.nodeName.match( /section/gi ) ) {\n\t\t\t\telement = element.parentNode;\n\t\t\t}\n\n\t\t\tif( element && !element.classList.contains( 'disabled' ) ) {\n\n\t\t\t\tthis.deactivate();\n\n\t\t\t\tif( element.nodeName.match( /section/gi ) ) {\n\t\t\t\t\tlet h = parseInt( element.getAttribute( 'data-index-h' ), 10 ),\n\t\t\t\t\t\tv = parseInt( element.getAttribute( 'data-index-v' ), 10 );\n\n\t\t\t\t\tthis.Reveal.slide( h, v );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n}","import { enterFullscreen } from '../utils/util.js'\n\n/**\n * Handles all reveal.js keyboard interactions.\n */\nexport default class Keyboard {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// A key:value map of keyboard keys and descriptions of\n\t\t// the actions they trigger\n\t\tthis.shortcuts = {};\n\n\t\t// Holds custom key code mappings\n\t\tthis.bindings = {};\n\n\t\tthis.onDocumentKeyDown = this.onDocumentKeyDown.bind( this );\n\t\tthis.onDocumentKeyPress = this.onDocumentKeyPress.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.navigationMode === 'linear' ) {\n\t\t\tthis.shortcuts['&#8594;  ,  &#8595;  ,  SPACE  ,  N  ,  L  ,  J'] = 'Next slide';\n\t\t\tthis.shortcuts['&#8592;  ,  &#8593;  ,  P  ,  H  ,  K']           = 'Previous slide';\n\t\t}\n\t\telse {\n\t\t\tthis.shortcuts['N  ,  SPACE']   = 'Next slide';\n\t\t\tthis.shortcuts['P  ,  Shift SPACE']             = 'Previous slide';\n\t\t\tthis.shortcuts['&#8592;  ,  H'] = 'Navigate left';\n\t\t\tthis.shortcuts['&#8594;  ,  L'] = 'Navigate right';\n\t\t\tthis.shortcuts['&#8593;  ,  K'] = 'Navigate up';\n\t\t\tthis.shortcuts['&#8595;  ,  J'] = 'Navigate down';\n\t\t}\n\n\t\tthis.shortcuts['Alt + &#8592;/&#8593/&#8594;/&#8595;']        = 'Navigate without fragments';\n\t\tthis.shortcuts['Shift + &#8592;/&#8593/&#8594;/&#8595;']      = 'Jump to first/last slide';\n\t\tthis.shortcuts['B  ,  .']                       = 'Pause';\n\t\tthis.shortcuts['F']                             = 'Fullscreen';\n\t\tthis.shortcuts['ESC, O']                        = 'Slide overview';\n\n\t}\n\n\t/**\n\t * Starts listening for keyboard events.\n\t */\n\tbind() {\n\n\t\tdocument.addEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.addEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Stops listening for keyboard events.\n\t */\n\tunbind() {\n\n\t\tdocument.removeEventListener( 'keydown', this.onDocumentKeyDown, false );\n\t\tdocument.removeEventListener( 'keypress', this.onDocumentKeyPress, false );\n\n\t}\n\n\t/**\n\t * Add a custom key binding with optional description to\n\t * be added to the help screen.\n\t */\n\taddKeyBinding( binding, callback ) {\n\n\t\tif( typeof binding === 'object' && binding.keyCode ) {\n\t\t\tthis.bindings[binding.keyCode] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: binding.key,\n\t\t\t\tdescription: binding.description\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\tthis.bindings[binding] = {\n\t\t\t\tcallback: callback,\n\t\t\t\tkey: null,\n\t\t\t\tdescription: null\n\t\t\t};\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes the specified custom key binding.\n\t */\n\tremoveKeyBinding( keyCode ) {\n\n\t\tdelete this.bindings[keyCode];\n\n\t}\n\n\t/**\n\t * Programmatically triggers a keyboard event\n\t *\n\t * @param {int} keyCode\n\t */\n\ttriggerKey( keyCode ) {\n\n\t\tthis.onDocumentKeyDown( { keyCode } );\n\n\t}\n\n\t/**\n\t * Registers a new shortcut to include in the help overlay\n\t *\n\t * @param {String} key\n\t * @param {String} value\n\t */\n\tregisterKeyboardShortcut( key, value ) {\n\n\t\tthis.shortcuts[key] = value;\n\n\t}\n\n\tgetShortcuts() {\n\n\t\treturn this.shortcuts;\n\n\t}\n\n\tgetBindings() {\n\n\t\treturn this.bindings;\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keypress' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyPress( event ) {\n\n\t\t// Check if the pressed key is question mark\n\t\tif( event.shiftKey && event.charCode === 63 ) {\n\t\t\tthis.Reveal.toggleHelp();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'keydown' event.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentKeyDown( event ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// If there's a condition specified and it returns false,\n\t\t// ignore this event\n\t\tif( typeof config.keyboardCondition === 'function' && config.keyboardCondition(event) === false ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// If keyboardCondition is set, only capture keyboard events\n\t\t// for embedded decks when they are focused\n\t\tif( config.keyboardCondition === 'focused' && !this.Reveal.isFocused() ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Shorthand\n\t\tlet keyCode = event.keyCode;\n\n\t\t// Remember if auto-sliding was paused so we can toggle it\n\t\tlet autoSlideWasPaused = !this.Reveal.isAutoSliding();\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\t// Is there a focused element that could be using the keyboard?\n\t\tlet activeElementIsCE = document.activeElement && document.activeElement.isContentEditable === true;\n\t\tlet activeElementIsInput = document.activeElement && document.activeElement.tagName && /input|textarea/i.test( document.activeElement.tagName );\n\t\tlet activeElementIsNotes = document.activeElement && document.activeElement.className && /speaker-notes/i.test( document.activeElement.className);\n\n\t\t// Whitelist certain modifiers for slide navigation shortcuts\n\t\tlet isNavigationKey = [32, 37, 38, 39, 40, 78, 80].indexOf( event.keyCode ) !== -1;\n\n\t\t// Prevent all other events when a modifier is pressed\n\t\tlet unusedModifier = \t!( isNavigationKey && event.shiftKey || event.altKey ) &&\n\t\t\t\t\t\t\t\t( event.shiftKey || event.altKey || event.ctrlKey || event.metaKey );\n\n\t\t// Disregard the event if there's a focused element or a\n\t\t// keyboard modifier key is present\n\t\tif( activeElementIsCE || activeElementIsInput || activeElementIsNotes || unusedModifier ) return;\n\n\t\t// While paused only allow resume keyboard events; 'b', 'v', '.'\n\t\tlet resumeKeyCodes = [66,86,190,191];\n\t\tlet key;\n\n\t\t// Custom key bindings for togglePause should be able to resume\n\t\tif( typeof config.keyboard === 'object' ) {\n\t\t\tfor( key in config.keyboard ) {\n\t\t\t\tif( config.keyboard[key] === 'togglePause' ) {\n\t\t\t\t\tresumeKeyCodes.push( parseInt( key, 10 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif( this.Reveal.isPaused() && resumeKeyCodes.indexOf( keyCode ) === -1 ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Use linear navigation if we're configured to OR if\n\t\t// the presentation is one-dimensional\n\t\tlet useLinearMode = config.navigationMode === 'linear' || !this.Reveal.hasHorizontalSlides() || !this.Reveal.hasVerticalSlides();\n\n\t\tlet triggered = false;\n\n\t\t// 1. User defined key bindings\n\t\tif( typeof config.keyboard === 'object' ) {\n\n\t\t\tfor( key in config.keyboard ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet value = config.keyboard[ key ];\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof value === 'function' ) {\n\t\t\t\t\t\tvalue.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof value === 'string' && typeof this.Reveal[ value ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ value ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// 2. Registered custom key bindings\n\t\tif( triggered === false ) {\n\n\t\t\tfor( key in this.bindings ) {\n\n\t\t\t\t// Check if this binding matches the pressed key\n\t\t\t\tif( parseInt( key, 10 ) === keyCode ) {\n\n\t\t\t\t\tlet action = this.bindings[ key ].callback;\n\n\t\t\t\t\t// Callback function\n\t\t\t\t\tif( typeof action === 'function' ) {\n\t\t\t\t\t\taction.apply( null, [ event ] );\n\t\t\t\t\t}\n\t\t\t\t\t// String shortcuts to reveal.js API\n\t\t\t\t\telse if( typeof action === 'string' && typeof this.Reveal[ action ] === 'function' ) {\n\t\t\t\t\t\tthis.Reveal[ action ].call();\n\t\t\t\t\t}\n\n\t\t\t\t\ttriggered = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// 3. System defined key bindings\n\t\tif( triggered === false ) {\n\n\t\t\t// Assume true and try to prove false\n\t\t\ttriggered = true;\n\n\t\t\t// P, PAGE UP\n\t\t\tif( keyCode === 80 || keyCode === 33 ) {\n\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// N, PAGE DOWN\n\t\t\telse if( keyCode === 78 || keyCode === 34 ) {\n\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t}\n\t\t\t// H, LEFT\n\t\t\telse if( keyCode === 72 || keyCode === 37 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.left({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// L, RIGHT\n\t\t\telse if( keyCode === 76 || keyCode === 39 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.right({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// K, UP\n\t\t\telse if( keyCode === 75 || keyCode === 38 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, 0 );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.up({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// J, DOWN\n\t\t\telse if( keyCode === 74 || keyCode === 40 ) {\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.slide( undefined, Number.MAX_VALUE );\n\t\t\t\t}\n\t\t\t\telse if( !this.Reveal.overview.isActive() && useLinearMode ) {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.down({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// HOME\n\t\t\telse if( keyCode === 36 ) {\n\t\t\t\tthis.Reveal.slide( 0 );\n\t\t\t}\n\t\t\t// END\n\t\t\telse if( keyCode === 35 ) {\n\t\t\t\tthis.Reveal.slide( this.Reveal.getHorizontalSlides().length - 1 );\n\t\t\t}\n\t\t\t// SPACE\n\t\t\telse if( keyCode === 32 ) {\n\t\t\t\tif( this.Reveal.overview.isActive() ) {\n\t\t\t\t\tthis.Reveal.overview.deactivate();\n\t\t\t\t}\n\t\t\t\tif( event.shiftKey ) {\n\t\t\t\t\tthis.Reveal.prev({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.Reveal.next({skipFragments: event.altKey});\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TWO-SPOT, SEMICOLON, B, V, PERIOD, LOGITECH PRESENTER TOOLS \"BLACK SCREEN\" BUTTON\n\t\t\telse if( keyCode === 58 || keyCode === 59 || keyCode === 66 || keyCode === 86 || keyCode === 190 || keyCode === 191 ) {\n\t\t\t\tthis.Reveal.togglePause();\n\t\t\t}\n\t\t\t// F\n\t\t\telse if( keyCode === 70 ) {\n\t\t\t\tenterFullscreen( config.embedded ? this.Reveal.getViewportElement() : document.documentElement );\n\t\t\t}\n\t\t\t// A\n\t\t\telse if( keyCode === 65 ) {\n\t\t\t\tif ( config.autoSlideStoppable ) {\n\t\t\t\t\tthis.Reveal.toggleAutoSlide( autoSlideWasPaused );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\ttriggered = false;\n\t\t\t}\n\n\t\t}\n\n\t\t// If the input resulted in a triggered action we should prevent\n\t\t// the browsers default behavior\n\t\tif( triggered ) {\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\t\t// ESC or O key\n\t\telse if( keyCode === 27 || keyCode === 79 ) {\n\t\t\tif( this.Reveal.closeOverlay() === false ) {\n\t\t\t\tthis.Reveal.overview.toggle();\n\t\t\t}\n\n\t\t\tevent.preventDefault && event.preventDefault();\n\t\t}\n\n\t\t// If auto-sliding is enabled we need to cue up\n\t\t// another timeout\n\t\tthis.Reveal.cueAutoSlide();\n\n\t}\n\n}","/**\n * Reads and writes the URL based on reveal.js' current state.\n */\nexport default class Location {\n\n\t// The minimum number of milliseconds that must pass between\n\t// calls to history.replaceState\n\tMAX_REPLACE_STATE_FREQUENCY = 1000\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Delays updates to the URL due to a Chrome thumbnailer bug\n\t\tthis.writeURLTimeout = 0;\n\n\t\tthis.replaceStateTimestamp = 0;\n\n\t\tthis.onWindowHashChange = this.onWindowHashChange.bind( this );\n\n\t}\n\n\tbind() {\n\n\t\twindow.addEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\tunbind() {\n\n\t\twindow.removeEventListener( 'hashchange', this.onWindowHashChange, false );\n\n\t}\n\n\t/**\n\t * Returns the slide indices for the given hash link.\n\t *\n\t * @param {string} [hash] the hash string that we want to\n\t * find the indices for\n\t *\n\t * @returns slide indices or null\n\t */\n\tgetIndicesFromHash( hash=window.location.hash ) {\n\n\t\t// Attempt to parse the hash as either an index or name\n\t\tlet name = hash.replace( /^#\\/?/, '' );\n\t\tlet bits = name.split( '/' );\n\n\t\t// If the first bit is not fully numeric and there is a name we\n\t\t// can assume that this is a named link\n\t\tif( !/^[0-9]*$/.test( bits[0] ) && name.length ) {\n\t\t\tlet element;\n\n\t\t\tlet f;\n\n\t\t\t// Parse named links with fragments (#/named-link/2)\n\t\t\tif( /\\/[-\\d]+$/g.test( name ) ) {\n\t\t\t\tf = parseInt( name.split( '/' ).pop(), 10 );\n\t\t\t\tf = isNaN(f) ? undefined : f;\n\t\t\t\tname = name.split( '/' ).shift();\n\t\t\t}\n\n\t\t\t// Ensure the named link is a valid HTML ID attribute\n\t\t\ttry {\n\t\t\t\telement = document.getElementById( decodeURIComponent( name ) );\n\t\t\t}\n\t\t\tcatch ( error ) { }\n\n\t\t\tif( element ) {\n\t\t\t\treturn { ...this.Reveal.getIndices( element ), f };\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconst config = this.Reveal.getConfig();\n\t\t\tlet hashIndexBase = config.hashOneBasedIndex ? 1 : 0;\n\n\t\t\t// Read the index components of the hash\n\t\t\tlet h = ( parseInt( bits[0], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tv = ( parseInt( bits[1], 10 ) - hashIndexBase ) || 0,\n\t\t\t\tf;\n\n\t\t\tif( config.fragmentInURL ) {\n\t\t\t\tf = parseInt( bits[2], 10 );\n\t\t\t\tif( isNaN( f ) ) {\n\t\t\t\t\tf = undefined;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn { h, v, f };\n\t\t}\n\n\t\t// The hash couldn't be parsed or no matching named link was found\n\t\treturn null\n\n\t}\n\n\t/**\n\t * Reads the current URL (hash) and navigates accordingly.\n\t */\n\treadURL() {\n\n\t\tconst currentIndices = this.Reveal.getIndices();\n\t\tconst newIndices = this.getIndicesFromHash();\n\n\t\tif( newIndices ) {\n\t\t\tif( ( newIndices.h !== currentIndices.h || newIndices.v !== currentIndices.v || newIndices.f !== undefined ) ) {\n\t\t\t\t\tthis.Reveal.slide( newIndices.h, newIndices.v, newIndices.f );\n\t\t\t}\n\t\t}\n\t\t// If no new indices are available, we're trying to navigate to\n\t\t// a slide hash that does not exist\n\t\telse {\n\t\t\tthis.Reveal.slide( currentIndices.h || 0, currentIndices.v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the page URL (hash) to reflect the current\n\t * state.\n\t *\n\t * @param {number} delay The time in ms to wait before\n\t * writing the hash\n\t */\n\twriteURL( delay ) {\n\n\t\tlet config = this.Reveal.getConfig();\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\n\t\t// Make sure there's never more than one timeout running\n\t\tclearTimeout( this.writeURLTimeout );\n\n\t\t// If a delay is specified, timeout this call\n\t\tif( typeof delay === 'number' ) {\n\t\t\tthis.writeURLTimeout = setTimeout( this.writeURL, delay );\n\t\t}\n\t\telse if( currentSlide ) {\n\n\t\t\tlet hash = this.getHash();\n\n\t\t\t// If we're configured to push to history OR the history\n\t\t\t// API is not avaialble.\n\t\t\tif( config.history ) {\n\t\t\t\twindow.location.hash = hash;\n\t\t\t}\n\t\t\t// If we're configured to reflect the current slide in the\n\t\t\t// URL without pushing to history.\n\t\t\telse if( config.hash ) {\n\t\t\t\t// If the hash is empty, don't add it to the URL\n\t\t\t\tif( hash === '/' ) {\n\t\t\t\t\tthis.debouncedReplaceState( window.location.pathname + window.location.search );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.debouncedReplaceState( '#' + hash );\n\t\t\t\t}\n\t\t\t}\n\t\t\t// UPDATE: The below nuking of all hash changes breaks\n\t\t\t// anchors on pages where reveal.js is running. Removed\n\t\t\t// in 4.0. Why was it here in the first place? ¯\\_(ツ)_/¯\n\t\t\t//\n\t\t\t// If history and hash are both disabled, a hash may still\n\t\t\t// be added to the URL by clicking on a href with a hash\n\t\t\t// target. Counter this by always removing the hash.\n\t\t\t// else {\n\t\t\t// \twindow.history.replaceState( null, null, window.location.pathname + window.location.search );\n\t\t\t// }\n\n\t\t}\n\n\t}\n\n\treplaceState( url ) {\n\n\t\twindow.history.replaceState( null, null, url );\n\t\tthis.replaceStateTimestamp = Date.now();\n\n\t}\n\n\tdebouncedReplaceState( url ) {\n\n\t\tclearTimeout( this.replaceStateTimeout );\n\n\t\tif( Date.now() - this.replaceStateTimestamp > this.MAX_REPLACE_STATE_FREQUENCY ) {\n\t\t\tthis.replaceState( url );\n\t\t}\n\t\telse {\n\t\t\tthis.replaceStateTimeout = setTimeout( () => this.replaceState( url ), this.MAX_REPLACE_STATE_FREQUENCY );\n\t\t}\n\n\t}\n\n\t/**\n\t * Return a hash URL that will resolve to the given slide location.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to link to\n\t */\n\tgetHash( slide ) {\n\n\t\tlet url = '/';\n\n\t\t// Attempt to create a named link based on the slide's ID\n\t\tlet s = slide || this.Reveal.getCurrentSlide();\n\t\tlet id = s ? s.getAttribute( 'id' ) : null;\n\t\tif( id ) {\n\t\t\tid = encodeURIComponent( id );\n\t\t}\n\n\t\tlet index = this.Reveal.getIndices( slide );\n\t\tif( !this.Reveal.getConfig().fragmentInURL ) {\n\t\t\tindex.f = undefined;\n\t\t}\n\n\t\t// If the current slide has an ID, use that as a named link,\n\t\t// but we don't support named links with a fragment index\n\t\tif( typeof id === 'string' && id.length ) {\n\t\t\turl = '/' + id;\n\n\t\t\t// If there is also a fragment, append that at the end\n\t\t\t// of the named link, like: #/named-link/2\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\t\t// Otherwise use the /h/v index\n\t\telse {\n\t\t\tlet hashIndexBase = this.Reveal.getConfig().hashOneBasedIndex ? 1 : 0;\n\t\t\tif( index.h > 0 || index.v > 0 || index.f >= 0 ) url += index.h + hashIndexBase;\n\t\t\tif( index.v > 0 || index.f >= 0 ) url += '/' + (index.v + hashIndexBase );\n\t\t\tif( index.f >= 0 ) url += '/' + index.f;\n\t\t}\n\n\t\treturn url;\n\n\t}\n\n\t/**\n\t * Handler for the window level 'hashchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tonWindowHashChange( event ) {\n\n\t\tthis.readURL();\n\n\t}\n\n}","import { queryAll } from '../utils/util.js'\nimport { isAndroid } from '../utils/device.js'\n\n/**\n * Manages our presentation controls. This includes both\n * the built-in control arrows as well as event monitoring\n * of any elements within the presentation with either of the\n * following helper classes:\n * - .navigate-up\n * - .navigate-right\n * - .navigate-down\n * - .navigate-left\n * - .navigate-next\n * - .navigate-prev\n */\nexport default class Controls {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onNavigateLeftClicked = this.onNavigateLeftClicked.bind( this );\n\t\tthis.onNavigateRightClicked = this.onNavigateRightClicked.bind( this );\n\t\tthis.onNavigateUpClicked = this.onNavigateUpClicked.bind( this );\n\t\tthis.onNavigateDownClicked = this.onNavigateDownClicked.bind( this );\n\t\tthis.onNavigatePrevClicked = this.onNavigatePrevClicked.bind( this );\n\t\tthis.onNavigateNextClicked = this.onNavigateNextClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tconst rtl = this.Reveal.getConfig().rtl;\n\t\tconst revealElement = this.Reveal.getRevealElement();\n\n\t\tthis.element = document.createElement( 'aside' );\n\t\tthis.element.className = 'controls';\n\t\tthis.element.innerHTML =\n\t\t\t`<button class=\"navigate-left\" aria-label=\"${ rtl ? 'next slide' : 'previous slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-right\" aria-label=\"${ rtl ? 'previous slide' : 'next slide' }\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-up\" aria-label=\"above slide\"><div class=\"controls-arrow\"></div></button>\n\t\t\t<button class=\"navigate-down\" aria-label=\"below slide\"><div class=\"controls-arrow\"></div></button>`;\n\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\t// There can be multiple instances of controls throughout the page\n\t\tthis.controlsLeft = queryAll( revealElement, '.navigate-left' );\n\t\tthis.controlsRight = queryAll( revealElement, '.navigate-right' );\n\t\tthis.controlsUp = queryAll( revealElement, '.navigate-up' );\n\t\tthis.controlsDown = queryAll( revealElement, '.navigate-down' );\n\t\tthis.controlsPrev = queryAll( revealElement, '.navigate-prev' );\n\t\tthis.controlsNext = queryAll( revealElement, '.navigate-next' );\n\n\t\t// The left, right and down arrows in the standard reveal.js controls\n\t\tthis.controlsRightArrow = this.element.querySelector( '.navigate-right' );\n\t\tthis.controlsLeftArrow = this.element.querySelector( '.navigate-left' );\n\t\tthis.controlsDownArrow = this.element.querySelector( '.navigate-down' );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.controls ? 'block' : 'none';\n\n\t\tthis.element.setAttribute( 'data-controls-layout', config.controlsLayout );\n\t\tthis.element.setAttribute( 'data-controls-back-arrows', config.controlsBackArrows );\n\n\t}\n\n\tbind() {\n\n\t\t// Listen to both touch and click events, in case the device\n\t\t// supports both\n\t\tlet pointerEvents = [ 'touchstart', 'click' ];\n\n\t\t// Only support touch for Android, fixes double navigations in\n\t\t// stock browser\n\t\tif( isAndroid ) {\n\t\t\tpointerEvents = [ 'touchstart' ];\n\t\t}\n\n\t\tpointerEvents.forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.addEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.addEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.addEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.addEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.addEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.addEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\tunbind() {\n\n\t\t[ 'touchstart', 'click' ].forEach( eventName => {\n\t\t\tthis.controlsLeft.forEach( el => el.removeEventListener( eventName, this.onNavigateLeftClicked, false ) );\n\t\t\tthis.controlsRight.forEach( el => el.removeEventListener( eventName, this.onNavigateRightClicked, false ) );\n\t\t\tthis.controlsUp.forEach( el => el.removeEventListener( eventName, this.onNavigateUpClicked, false ) );\n\t\t\tthis.controlsDown.forEach( el => el.removeEventListener( eventName, this.onNavigateDownClicked, false ) );\n\t\t\tthis.controlsPrev.forEach( el => el.removeEventListener( eventName, this.onNavigatePrevClicked, false ) );\n\t\t\tthis.controlsNext.forEach( el => el.removeEventListener( eventName, this.onNavigateNextClicked, false ) );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates the state of all control/navigation arrows.\n\t */\n\tupdate() {\n\n\t\tlet routes = this.Reveal.availableRoutes();\n\n\t\t// Remove the 'enabled' class from all directions\n\t\t[...this.controlsLeft, ...this.controlsRight, ...this.controlsUp, ...this.controlsDown, ...this.controlsPrev, ...this.controlsNext].forEach( node => {\n\t\t\tnode.classList.remove( 'enabled', 'fragmented' );\n\n\t\t\t// Set 'disabled' attribute on all directions\n\t\t\tnode.setAttribute( 'disabled', 'disabled' );\n\t\t} );\n\n\t\t// Add the 'enabled' class to the available routes; remove 'disabled' attribute to enable buttons\n\t\tif( routes.left ) this.controlsLeft.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right ) this.controlsRight.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.up ) this.controlsUp.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.down ) this.controlsDown.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Prev/next buttons\n\t\tif( routes.left || routes.up ) this.controlsPrev.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\tif( routes.right || routes.down ) this.controlsNext.forEach( el => { el.classList.add( 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t// Highlight fragment directions\n\t\tlet currentSlide = this.Reveal.getCurrentSlide();\n\t\tif( currentSlide ) {\n\n\t\t\tlet fragmentsRoutes = this.Reveal.fragments.availableRoutes();\n\n\t\t\t// Always apply fragment decorator to prev/next buttons\n\t\t\tif( fragmentsRoutes.prev ) this.controlsPrev.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\tif( fragmentsRoutes.next ) this.controlsNext.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\n\t\t\t// Apply fragment decorators to directional buttons based on\n\t\t\t// what slide axis they are in\n\t\t\tif( this.Reveal.isVerticalSlide( currentSlide ) ) {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsUp.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsDown.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif( fragmentsRoutes.prev ) this.controlsLeft.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t\tif( fragmentsRoutes.next ) this.controlsRight.forEach( el => { el.classList.add( 'fragmented', 'enabled' ); el.removeAttribute( 'disabled' ); } );\n\t\t\t}\n\n\t\t}\n\n\t\tif( this.Reveal.getConfig().controlsTutorial ) {\n\n\t\t\tlet indices = this.Reveal.getIndices();\n\n\t\t\t// Highlight control arrows with an animation to ensure\n\t\t\t// that the viewer knows how to navigate\n\t\t\tif( !this.Reveal.hasNavigatedVertically() && routes.down ) {\n\t\t\t\tthis.controlsDownArrow.classList.add( 'highlight' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.controlsDownArrow.classList.remove( 'highlight' );\n\n\t\t\t\tif( this.Reveal.getConfig().rtl ) {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.left && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsLeftArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif( !this.Reveal.hasNavigatedHorizontally() && routes.right && indices.v === 0 ) {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.add( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.controlsRightArrow.classList.remove( 'highlight' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdestroy() {\n\n\t\tthis.unbind();\n\t\tthis.element.remove();\n\n\t}\n\n\t/**\n\t * Event handlers for navigation control buttons.\n\t */\n\tonNavigateLeftClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.prev();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.left();\n\t\t}\n\n\t}\n\n\tonNavigateRightClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tif( this.Reveal.getConfig().navigationMode === 'linear' ) {\n\t\t\tthis.Reveal.next();\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.right();\n\t\t}\n\n\t}\n\n\tonNavigateUpClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.up();\n\n\t}\n\n\tonNavigateDownClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.down();\n\n\t}\n\n\tonNavigatePrevClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.prev();\n\n\t}\n\n\tonNavigateNextClicked( event ) {\n\n\t\tevent.preventDefault();\n\t\tthis.Reveal.onUserInput();\n\n\t\tthis.Reveal.next();\n\n\t}\n\n\n}","/**\n * Creates a visual progress bar for the presentation.\n */\nexport default class Progress {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onProgressClicked = this.onProgressClicked.bind( this );\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'progress';\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t\tthis.bar = document.createElement( 'span' );\n\t\tthis.element.appendChild( this.bar );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tthis.element.style.display = config.progress ? 'block' : 'none';\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.addEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tif ( this.Reveal.getConfig().progress && this.element ) {\n\t\t\tthis.element.removeEventListener( 'click', this.onProgressClicked, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the progress bar to reflect the current slide.\n\t */\n\tupdate() {\n\n\t\t// Update progress if enabled\n\t\tif( this.Reveal.getConfig().progress && this.bar ) {\n\n\t\t\tlet scale = this.Reveal.getProgress();\n\n\t\t\t// Don't fill the progress bar if there's only one slide\n\t\t\tif( this.Reveal.getTotalSlides() < 2 ) {\n\t\t\t\tscale = 0;\n\t\t\t}\n\n\t\t\tthis.bar.style.transform = 'scaleX('+ scale +')';\n\n\t\t}\n\n\t}\n\n\tgetMaxWidth() {\n\n\t\treturn this.Reveal.getRevealElement().offsetWidth;\n\n\t}\n\n\t/**\n\t * Clicking on the progress bar results in a navigation to the\n\t * closest approximate horizontal slide using this equation:\n\t *\n\t * ( clickX / presentationWidth ) * numberOfSlides\n\t *\n\t * @param {object} event\n\t */\n\tonProgressClicked( event ) {\n\n\t\tthis.Reveal.onUserInput( event );\n\n\t\tevent.preventDefault();\n\n\t\tlet slides = this.Reveal.getSlides();\n\t\tlet slidesTotal = slides.length;\n\t\tlet slideIndex = Math.floor( ( event.clientX / this.getMaxWidth() ) * slidesTotal );\n\n\t\tif( this.Reveal.getConfig().rtl ) {\n\t\t\tslideIndex = slidesTotal - slideIndex;\n\t\t}\n\n\t\tlet targetIndices = this.Reveal.getIndices(slides[slideIndex]);\n\t\tthis.Reveal.slide( targetIndices.h, targetIndices.v );\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * Handles hiding of the pointer/cursor when inactive.\n */\nexport default class Pointer {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Throttles mouse wheel navigation\n\t\tthis.lastMouseWheelStep = 0;\n\n\t\t// Is the mouse pointer currently hidden from view\n\t\tthis.cursorHidden = false;\n\n\t\t// Timeout used to determine when the cursor is inactive\n\t\tthis.cursorInactiveTimeout = 0;\n\n\t\tthis.onDocumentCursorActive = this.onDocumentCursorActive.bind( this );\n\t\tthis.onDocumentMouseScroll = this.onDocumentMouseScroll.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.mouseWheel ) {\n\t\t\tdocument.addEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.addEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\t\telse {\n\t\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false ); // FF\n\t\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\t}\n\n\t\t// Auto-hide the mouse pointer when its inactive\n\t\tif( config.hideInactiveCursor ) {\n\t\t\tdocument.addEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.addEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\t\telse {\n\t\t\tthis.showCursor();\n\n\t\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Shows the mouse pointer after it has been hidden with\n\t * #hideCursor.\n\t */\n\tshowCursor() {\n\n\t\tif( this.cursorHidden ) {\n\t\t\tthis.cursorHidden = false;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = '';\n\t\t}\n\n\t}\n\n\t/**\n\t * Hides the mouse pointer when it's on top of the .reveal\n\t * container.\n\t */\n\thideCursor() {\n\n\t\tif( this.cursorHidden === false ) {\n\t\t\tthis.cursorHidden = true;\n\t\t\tthis.Reveal.getRevealElement().style.cursor = 'none';\n\t\t}\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.showCursor();\n\n\t\tdocument.removeEventListener( 'DOMMouseScroll', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousewheel', this.onDocumentMouseScroll, false );\n\t\tdocument.removeEventListener( 'mousemove', this.onDocumentCursorActive, false );\n\t\tdocument.removeEventListener( 'mousedown', this.onDocumentCursorActive, false );\n\n\t}\n\n\t/**\n\t * Called whenever there is mouse input at the document level\n\t * to determine if the cursor is active or not.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentCursorActive( event ) {\n\n\t\tthis.showCursor();\n\n\t\tclearTimeout( this.cursorInactiveTimeout );\n\n\t\tthis.cursorInactiveTimeout = setTimeout( this.hideCursor.bind( this ), this.Reveal.getConfig().hideCursorTime );\n\n\t}\n\n\t/**\n\t * Handles mouse wheel scrolling, throttled to avoid skipping\n\t * multiple slides.\n\t *\n\t * @param {object} event\n\t */\n\tonDocumentMouseScroll( event ) {\n\n\t\tif( Date.now() - this.lastMouseWheelStep > 1000 ) {\n\n\t\t\tthis.lastMouseWheelStep = Date.now();\n\n\t\t\tlet delta = event.detail || -event.wheelDelta;\n\t\t\tif( delta > 0 ) {\n\t\t\t\tthis.Reveal.next();\n\t\t\t}\n\t\t\telse if( delta < 0 ) {\n\t\t\t\tthis.Reveal.prev();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}","/**\n * Loads a JavaScript file from the given URL and executes it.\n *\n * @param {string} url Address of the .js file to load\n * @param {function} callback Method to invoke when the script\n * has loaded and executed\n */\nexport const loadScript = ( url, callback ) => {\n\n\tconst script = document.createElement( 'script' );\n\tscript.type = 'text/javascript';\n\tscript.async = false;\n\tscript.defer = false;\n\tscript.src = url;\n\n\tif( typeof callback === 'function' ) {\n\n\t\t// Success callback\n\t\tscript.onload = script.onreadystatechange = event => {\n\t\t\tif( event.type === 'load' || /loaded|complete/.test( script.readyState ) ) {\n\n\t\t\t\t// Kill event listeners\n\t\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\t\tcallback();\n\n\t\t\t}\n\t\t};\n\n\t\t// Error callback\n\t\tscript.onerror = err => {\n\n\t\t\t// Kill event listeners\n\t\t\tscript.onload = script.onreadystatechange = script.onerror = null;\n\n\t\t\tcallback( new Error( 'Failed loading script: ' + script.src + '\\n' + err ) );\n\n\t\t};\n\n\t}\n\n\t// Append the script at the end of <head>\n\tconst head = document.querySelector( 'head' );\n\thead.insertBefore( script, head.lastChild );\n\n}","import { loadScript } from '../utils/loader.js'\n\n/**\n * Manages loading and registering of reveal.js plugins.\n */\nexport default class Plugins {\n\n\tconstructor( reveal ) {\n\n\t\tthis.Reveal = reveal;\n\n\t\t// Flags our current state (idle -> loading -> loaded)\n\t\tthis.state = 'idle';\n\n\t\t// An id:instance map of currently registed plugins\n\t\tthis.registeredPlugins = {};\n\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n\t/**\n\t * Loads reveal.js dependencies, registers and\n\t * initializes plugins.\n\t *\n\t * Plugins are direct references to a reveal.js plugin\n\t * object that we register and initialize after any\n\t * synchronous dependencies have loaded.\n\t *\n\t * Dependencies are defined via the 'dependencies' config\n\t * option and will be loaded prior to starting reveal.js.\n\t * Some dependencies may have an 'async' flag, if so they\n\t * will load after reveal.js has been started up.\n\t */\n\tload( plugins, dependencies ) {\n\n\t\tthis.state = 'loading';\n\n\t\tplugins.forEach( this.registerPlugin.bind( this ) );\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet scripts = [],\n\t\t\t\tscriptsToLoad = 0;\n\n\t\t\tdependencies.forEach( s => {\n\t\t\t\t// Load if there's no condition or the condition is truthy\n\t\t\t\tif( !s.condition || s.condition() ) {\n\t\t\t\t\tif( s.async ) {\n\t\t\t\t\t\tthis.asyncDependencies.push( s );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tscripts.push( s );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif( scripts.length ) {\n\t\t\t\tscriptsToLoad = scripts.length;\n\n\t\t\t\tconst scriptLoadedCallback = (s) => {\n\t\t\t\t\tif( s && typeof s.callback === 'function' ) s.callback();\n\n\t\t\t\t\tif( --scriptsToLoad === 0 ) {\n\t\t\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Load synchronous scripts\n\t\t\t\tscripts.forEach( s => {\n\t\t\t\t\tif( typeof s.id === 'string' ) {\n\t\t\t\t\t\tthis.registerPlugin( s );\n\t\t\t\t\t\tscriptLoadedCallback( s );\n\t\t\t\t\t}\n\t\t\t\t\telse if( typeof s.src === 'string' ) {\n\t\t\t\t\t\tloadScript( s.src, () => scriptLoadedCallback(s) );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tconsole.warn( 'Unrecognized plugin format', s );\n\t\t\t\t\t\tscriptLoadedCallback();\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.initPlugins().then( resolve );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Initializes our plugins and waits for them to be ready\n\t * before proceeding.\n\t */\n\tinitPlugins() {\n\n\t\treturn new Promise( resolve => {\n\n\t\t\tlet pluginValues = Object.values( this.registeredPlugins );\n\t\t\tlet pluginsToInitialize = pluginValues.length;\n\n\t\t\t// If there are no plugins, skip this step\n\t\t\tif( pluginsToInitialize === 0 ) {\n\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t}\n\t\t\t// ... otherwise initialize plugins\n\t\t\telse {\n\n\t\t\t\tlet initNextPlugin;\n\n\t\t\t\tlet afterPlugInitialized = () => {\n\t\t\t\t\tif( --pluginsToInitialize === 0 ) {\n\t\t\t\t\t\tthis.loadAsync().then( resolve );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tinitNextPlugin();\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tlet i = 0;\n\n\t\t\t\t// Initialize plugins serially\n\t\t\t\tinitNextPlugin = () => {\n\n\t\t\t\t\tlet plugin = pluginValues[i++];\n\n\t\t\t\t\t// If the plugin has an 'init' method, invoke it\n\t\t\t\t\tif( typeof plugin.init === 'function' ) {\n\t\t\t\t\t\tlet promise = plugin.init( this.Reveal );\n\n\t\t\t\t\t\t// If the plugin returned a Promise, wait for it\n\t\t\t\t\t\tif( promise && typeof promise.then === 'function' ) {\n\t\t\t\t\t\t\tpromise.then( afterPlugInitialized );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tafterPlugInitialized();\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tinitNextPlugin();\n\n\t\t\t}\n\n\t\t} )\n\n\t}\n\n\t/**\n\t * Loads all async reveal.js dependencies.\n\t */\n\tloadAsync() {\n\n\t\tthis.state = 'loaded';\n\n\t\tif( this.asyncDependencies.length ) {\n\t\t\tthis.asyncDependencies.forEach( s => {\n\t\t\t\tloadScript( s.src, s.callback );\n\t\t\t} );\n\t\t}\n\n\t\treturn Promise.resolve();\n\n\t}\n\n\t/**\n\t * Registers a new plugin with this reveal.js instance.\n\t *\n\t * reveal.js waits for all regisered plugins to initialize\n\t * before considering itself ready, as long as the plugin\n\t * is registered before calling `Reveal.initialize()`.\n\t */\n\tregisterPlugin( plugin ) {\n\n\t\t// Backwards compatibility to make reveal.js ~3.9.0\n\t\t// plugins work with reveal.js 4.0.0\n\t\tif( arguments.length === 2 && typeof arguments[0] === 'string' ) {\n\t\t\tplugin = arguments[1];\n\t\t\tplugin.id = arguments[0];\n\t\t}\n\t\t// Plugin can optionally be a function which we call\n\t\t// to create an instance of the plugin\n\t\telse if( typeof plugin === 'function' ) {\n\t\t\tplugin = plugin();\n\t\t}\n\n\t\tlet id = plugin.id;\n\n\t\tif( typeof id !== 'string' ) {\n\t\t\tconsole.warn( 'Unrecognized plugin format; can\\'t find plugin.id', plugin );\n\t\t}\n\t\telse if( this.registeredPlugins[id] === undefined ) {\n\t\t\tthis.registeredPlugins[id] = plugin;\n\n\t\t\t// If a plugin is registered after reveal.js is loaded,\n\t\t\t// initialize it right away\n\t\t\tif( this.state === 'loaded' && typeof plugin.init === 'function' ) {\n\t\t\t\tplugin.init( this.Reveal );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tconsole.warn( 'reveal.js: \"'+ id +'\" plugin has already been registered' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if a specific plugin has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\thasPlugin( id ) {\n\n\t\treturn !!this.registeredPlugins[id];\n\n\t}\n\n\t/**\n\t * Returns the specific plugin instance, if a plugin\n\t * with the given ID has been registered.\n\t *\n\t * @param {String} id Unique plugin identifier\n\t */\n\tgetPlugin( id ) {\n\n\t\treturn this.registeredPlugins[id];\n\n\t}\n\n\tgetRegisteredPlugins() {\n\n\t\treturn this.registeredPlugins;\n\n\t}\n\n\tdestroy() {\n\n\t\tObject.values( this.registeredPlugins ).forEach( plugin => {\n\t\t\tif( typeof plugin.destroy === 'function' ) {\n\t\t\t\tplugin.destroy();\n\t\t\t}\n\t\t} );\n\n\t\tthis.registeredPlugins = {};\n\t\tthis.asyncDependencies = [];\n\n\t}\n\n}\n","import { SLIDES_SELECTOR } from '../utils/constants.js'\nimport { queryAll, createStyleSheet } from '../utils/util.js'\n\n/**\n * Setups up our presentation for printing/exporting to PDF.\n */\nexport default class Print {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\t/**\n\t * Configures the presentation for printing to a static\n\t * PDF.\n\t */\n\tasync setupPDF() {\n\n\t\tconst config = this.Reveal.getConfig();\n\t\tconst slides = queryAll( this.Reveal.getRevealElement(), SLIDES_SELECTOR )\n\n\t\t// Compute slide numbers now, before we start duplicating slides\n\t\tconst injectPageNumbers = config.slideNumber && /all|print/i.test( config.showSlideNumber );\n\n\t\tconst slideSize = this.Reveal.getComputedSlideSize( window.innerWidth, window.innerHeight );\n\n\t\t// Dimensions of the PDF pages\n\t\tconst pageWidth = Math.floor( slideSize.width * ( 1 + config.margin ) ),\n\t\t\tpageHeight = Math.floor( slideSize.height * ( 1 + config.margin ) );\n\n\t\t// Dimensions of slides within the pages\n\t\tconst slideWidth = slideSize.width,\n\t\t\tslideHeight = slideSize.height;\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\t// Let the browser know what page size we want to print\n\t\tcreateStyleSheet( '@page{size:'+ pageWidth +'px '+ pageHeight +'px; margin: 0px;}' );\n\n\t\t// Limit the size of certain elements to the dimensions of the slide\n\t\tcreateStyleSheet( '.reveal section>img, .reveal section>video, .reveal section>iframe{max-width: '+ slideWidth +'px; max-height:'+ slideHeight +'px}' );\n\n\t\tdocument.documentElement.classList.add( 'print-pdf' );\n\t\tdocument.body.style.width = pageWidth + 'px';\n\t\tdocument.body.style.height = pageHeight + 'px';\n\n\t\tconst viewportElement = document.querySelector( '.reveal-viewport' );\n\t\tlet presentationBackground;\n\t\tif( viewportElement ) {\n\t\t\tconst viewportStyles = window.getComputedStyle( viewportElement );\n\t\t\tif( viewportStyles && viewportStyles.background ) {\n\t\t\t\tpresentationBackground = viewportStyles.background;\n\t\t\t}\n\t\t}\n\n\t\t// Make sure stretch elements fit on slide\n\t\tawait new Promise( requestAnimationFrame );\n\t\tthis.Reveal.layoutSlideContents( slideWidth, slideHeight );\n\n\t\t// Batch scrollHeight access to prevent layout thrashing\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tconst slideScrollHeights = slides.map( slide => slide.scrollHeight );\n\n\t\tconst pages = [];\n\t\tconst pageContainer = slides[0].parentNode;\n\t\tlet slideNumber = 1;\n\n\t\t// Slide and slide background layout\n\t\tslides.forEach( function( slide, index ) {\n\n\t\t\t// Vertical stacks are not centred since their section\n\t\t\t// children will be\n\t\t\tif( slide.classList.contains( 'stack' ) === false ) {\n\t\t\t\t// Center the slide inside of the page, giving the slide some margin\n\t\t\t\tlet left = ( pageWidth - slideWidth ) / 2;\n\t\t\t\tlet top = ( pageHeight - slideHeight ) / 2;\n\n\t\t\t\tconst contentHeight = slideScrollHeights[ index ];\n\t\t\t\tlet numberOfPages = Math.max( Math.ceil( contentHeight / pageHeight ), 1 );\n\n\t\t\t\t// Adhere to configured pages per slide limit\n\t\t\t\tnumberOfPages = Math.min( numberOfPages, config.pdfMaxPagesPerSlide );\n\n\t\t\t\t// Center slides vertically\n\t\t\t\tif( numberOfPages === 1 && config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\ttop = Math.max( ( pageHeight - contentHeight ) / 2, 0 );\n\t\t\t\t}\n\n\t\t\t\t// Wrap the slide in a page element and hide its overflow\n\t\t\t\t// so that no page ever flows onto another\n\t\t\t\tconst page = document.createElement( 'div' );\n\t\t\t\tpages.push( page );\n\n\t\t\t\tpage.className = 'pdf-page';\n\t\t\t\tpage.style.height = ( ( pageHeight + config.pdfPageHeightOffset ) * numberOfPages ) + 'px';\n\n\t\t\t\t// Copy the presentation-wide background to each individual\n\t\t\t\t// page when printing\n\t\t\t\tif( presentationBackground ) {\n\t\t\t\t\tpage.style.background = presentationBackground;\n\t\t\t\t}\n\n\t\t\t\tpage.appendChild( slide );\n\n\t\t\t\t// Position the slide inside of the page\n\t\t\t\tslide.style.left = left + 'px';\n\t\t\t\tslide.style.top = top + 'px';\n\t\t\t\tslide.style.width = slideWidth + 'px';\n\n\t\t\t\t// Re-run the slide layout so that r-fit-text is applied based on\n\t\t\t\t// the printed slide size\n\t\t\t\tthis.Reveal.slideContent.layout( slide )\n\n\t\t\t\tif( slide.slideBackgroundElement ) {\n\t\t\t\t\tpage.insertBefore( slide.slideBackgroundElement, slide );\n\t\t\t\t}\n\n\t\t\t\t// Inject notes if `showNotes` is enabled\n\t\t\t\tif( config.showNotes ) {\n\n\t\t\t\t\t// Are there notes for this slide?\n\t\t\t\t\tconst notes = this.Reveal.getSlideNotes( slide );\n\t\t\t\t\tif( notes ) {\n\n\t\t\t\t\t\tconst notesSpacing = 8;\n\t\t\t\t\t\tconst notesLayout = typeof config.showNotes === 'string' ? config.showNotes : 'inline';\n\t\t\t\t\t\tconst notesElement = document.createElement( 'div' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes' );\n\t\t\t\t\t\tnotesElement.classList.add( 'speaker-notes-pdf' );\n\t\t\t\t\t\tnotesElement.setAttribute( 'data-layout', notesLayout );\n\t\t\t\t\t\tnotesElement.innerHTML = notes;\n\n\t\t\t\t\t\tif( notesLayout === 'separate-page' ) {\n\t\t\t\t\t\t\tpages.push( notesElement );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tnotesElement.style.left = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.bottom = notesSpacing + 'px';\n\t\t\t\t\t\t\tnotesElement.style.width = ( pageWidth - notesSpacing*2 ) + 'px';\n\t\t\t\t\t\t\tpage.appendChild( notesElement );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Inject page numbers if `slideNumbers` are enabled\n\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\tconst numberElement = document.createElement( 'div' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number' );\n\t\t\t\t\tnumberElement.classList.add( 'slide-number-pdf' );\n\t\t\t\t\tnumberElement.innerHTML = slideNumber++;\n\t\t\t\t\tpage.appendChild( numberElement );\n\t\t\t\t}\n\n\t\t\t\t// Copy page and show fragments one after another\n\t\t\t\tif( config.pdfSeparateFragments ) {\n\n\t\t\t\t\t// Each fragment 'group' is an array containing one or more\n\t\t\t\t\t// fragments. Multiple fragments that appear at the same time\n\t\t\t\t\t// are part of the same group.\n\t\t\t\t\tconst fragmentGroups = this.Reveal.fragments.sort( page.querySelectorAll( '.fragment' ), true );\n\n\t\t\t\t\tlet previousFragmentStep;\n\n\t\t\t\t\tfragmentGroups.forEach( function( fragments, index ) {\n\n\t\t\t\t\t\t// Remove 'current-fragment' from the previous group\n\t\t\t\t\t\tif( previousFragmentStep ) {\n\t\t\t\t\t\t\tpreviousFragmentStep.forEach( function( fragment ) {\n\t\t\t\t\t\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Show the fragments for the current index\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.add( 'visible', 'current-fragment' );\n\t\t\t\t\t\t}, this );\n\n\t\t\t\t\t\t// Create a separate page for the current fragment state\n\t\t\t\t\t\tconst clonedPage = page.cloneNode( true );\n\n\t\t\t\t\t\t// Inject unique page numbers for fragments\n\t\t\t\t\t\tif( injectPageNumbers ) {\n\t\t\t\t\t\t\tconst numberElement = clonedPage.querySelector( '.slide-number-pdf' );\n\t\t\t\t\t\t\tconst fragmentNumber = index + 1;\n\t\t\t\t\t\t\tnumberElement.innerHTML += '.' + fragmentNumber;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tpages.push( clonedPage );\n\n\t\t\t\t\t\tpreviousFragmentStep = fragments;\n\n\t\t\t\t\t}, this );\n\n\t\t\t\t\t// Reset the first/original page so that all fragments are hidden\n\t\t\t\t\tfragmentGroups.forEach( function( fragments ) {\n\t\t\t\t\t\tfragments.forEach( function( fragment ) {\n\t\t\t\t\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t\t\t\t\t} );\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\t\t\t\t// Show all fragments\n\t\t\t\telse {\n\t\t\t\t\tqueryAll( page, '.fragment:not(.fade-out)' ).forEach( function( fragment ) {\n\t\t\t\t\t\tfragment.classList.add( 'visible' );\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}, this );\n\n\t\tawait new Promise( requestAnimationFrame );\n\n\t\tpages.forEach( page => pageContainer.appendChild( page ) );\n\n\t\t// Notify subscribers that the PDF layout is good to go\n\t\tthis.Reveal.dispatchEvent({ type: 'pdf-ready' });\n\n\t}\n\n\t/**\n\t * Checks if this instance is being used to print a PDF.\n\t */\n\tisPrintingPDF() {\n\n\t\treturn ( /print-pdf/gi ).test( window.location.search );\n\n\t}\n\n}\n","import { isAndroid } from '../utils/device.js'\nimport { matches } from '../utils/util.js'\n\nconst SWIPE_THRESHOLD = 40;\n\n/**\n * Controls all touch interactions and navigations for\n * a presentation.\n */\nexport default class Touch {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\t// Holds information about the currently ongoing touch interaction\n\t\tthis.touchStartX = 0;\n\t\tthis.touchStartY = 0;\n\t\tthis.touchStartCount = 0;\n\t\tthis.touchCaptured = false;\n\n\t\tthis.onPointerDown = this.onPointerDown.bind( this );\n\t\tthis.onPointerMove = this.onPointerMove.bind( this );\n\t\tthis.onPointerUp = this.onPointerUp.bind( this );\n\t\tthis.onTouchStart = this.onTouchStart.bind( this );\n\t\tthis.onTouchMove = this.onTouchMove.bind( this );\n\t\tthis.onTouchEnd = this.onTouchEnd.bind( this );\n\n\t}\n\n\t/**\n\t *\n\t */\n\tbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\tif( 'onpointerdown' in window ) {\n\t\t\t// Use W3C pointer events\n\t\t\trevealElement.addEventListener( 'pointerdown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'pointermove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'pointerup', this.onPointerUp, false );\n\t\t}\n\t\telse if( window.navigator.msPointerEnabled ) {\n\t\t\t// IE 10 uses prefixed version of pointer events\n\t\t\trevealElement.addEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\t\trevealElement.addEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\t\trevealElement.addEventListener( 'MSPointerUp', this.onPointerUp, false );\n\t\t}\n\t\telse {\n\t\t\t// Fall back to touch events\n\t\t\trevealElement.addEventListener( 'touchstart', this.onTouchStart, false );\n\t\t\trevealElement.addEventListener( 'touchmove', this.onTouchMove, false );\n\t\t\trevealElement.addEventListener( 'touchend', this.onTouchEnd, false );\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t */\n\tunbind() {\n\n\t\tlet revealElement = this.Reveal.getRevealElement();\n\n\t\trevealElement.removeEventListener( 'pointerdown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'pointermove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'pointerup', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'MSPointerDown', this.onPointerDown, false );\n\t\trevealElement.removeEventListener( 'MSPointerMove', this.onPointerMove, false );\n\t\trevealElement.removeEventListener( 'MSPointerUp', this.onPointerUp, false );\n\n\t\trevealElement.removeEventListener( 'touchstart', this.onTouchStart, false );\n\t\trevealElement.removeEventListener( 'touchmove', this.onTouchMove, false );\n\t\trevealElement.removeEventListener( 'touchend', this.onTouchEnd, false );\n\n\t}\n\n\t/**\n\t * Checks if the target element prevents the triggering of\n\t * swipe navigation.\n\t */\n\tisSwipePrevented( target ) {\n\n\t\t// Prevent accidental swipes when scrubbing timelines\n\t\tif( matches( target, 'video, audio' ) ) return true;\n\n\t\twhile( target && typeof target.hasAttribute === 'function' ) {\n\t\t\tif( target.hasAttribute( 'data-prevent-swipe' ) ) return true;\n\t\t\ttarget = target.parentNode;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchstart' event, enables support for\n\t * swipe and pinch gestures.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchStart( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tthis.touchStartX = event.touches[0].clientX;\n\t\tthis.touchStartY = event.touches[0].clientY;\n\t\tthis.touchStartCount = event.touches.length;\n\n\t}\n\n\t/**\n\t * Handler for the 'touchmove' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchMove( event ) {\n\n\t\tif( this.isSwipePrevented( event.target ) ) return true;\n\n\t\tlet config = this.Reveal.getConfig();\n\n\t\t// Each touch should only trigger one action\n\t\tif( !this.touchCaptured ) {\n\t\t\tthis.Reveal.onUserInput( event );\n\n\t\t\tlet currentX = event.touches[0].clientX;\n\t\t\tlet currentY = event.touches[0].clientY;\n\n\t\t\t// There was only one touch point, look for a swipe\n\t\t\tif( event.touches.length === 1 && this.touchStartCount !== 2 ) {\n\n\t\t\t\tlet availableRoutes = this.Reveal.availableRoutes({ includeFragments: true });\n\n\t\t\t\tlet deltaX = currentX - this.touchStartX,\n\t\t\t\t\tdeltaY = currentY - this.touchStartY;\n\n\t\t\t\tif( deltaX > SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.left();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaX < -SWIPE_THRESHOLD && Math.abs( deltaX ) > Math.abs( deltaY ) ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tif( config.rtl ) {\n\t\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.right();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY > SWIPE_THRESHOLD && availableRoutes.up ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.prev();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.up();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( deltaY < -SWIPE_THRESHOLD && availableRoutes.down ) {\n\t\t\t\t\tthis.touchCaptured = true;\n\t\t\t\t\tif( config.navigationMode === 'linear' ) {\n\t\t\t\t\t\tthis.Reveal.next();\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.Reveal.down();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If we're embedded, only block touch events if they have\n\t\t\t\t// triggered an action\n\t\t\t\tif( config.embedded ) {\n\t\t\t\t\tif( this.touchCaptured || this.Reveal.isVerticalSlide() ) {\n\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Not embedded? Block them all to avoid needless tossing\n\t\t\t\t// around of the viewport in iOS\n\t\t\t\telse {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\t\t// There's a bug with swiping on some Android devices unless\n\t\t// the default action is always prevented\n\t\telse if( isAndroid ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the 'touchend' event.\n\t *\n\t * @param {object} event\n\t */\n\tonTouchEnd( event ) {\n\n\t\tthis.touchCaptured = false;\n\n\t}\n\n\t/**\n\t * Convert pointer down to touch start.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerDown( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" ) {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchStart( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer move to touch move.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerMove( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchMove( event );\n\t\t}\n\n\t}\n\n\t/**\n\t * Convert pointer up to touch end.\n\t *\n\t * @param {object} event\n\t */\n\tonPointerUp( event ) {\n\n\t\tif( event.pointerType === event.MSPOINTER_TYPE_TOUCH || event.pointerType === \"touch\" )  {\n\t\t\tevent.touches = [{ clientX: event.clientX, clientY: event.clientY }];\n\t\t\tthis.onTouchEnd( event );\n\t\t}\n\n\t}\n\n}","import { closest } from '../utils/util.js'\n\n/**\n * Manages focus when a presentation is embedded. This\n * helps us only capture keyboard from the presentation\n * a user is currently interacting with in a page where\n * multiple presentations are embedded.\n */\n\nconst STATE_FOCUS = 'focus';\nconst STATE_BLUR = 'blur';\n\nexport default class Focus {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t\tthis.onRevealPointerDown = this.onRevealPointerDown.bind( this );\n\t\tthis.onDocumentPointerDown = this.onDocumentPointerDown.bind( this );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.embedded ) {\n\t\t\tthis.blur();\n\t\t}\n\t\telse {\n\t\t\tthis.focus();\n\t\t\tthis.unbind();\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tif( this.Reveal.getConfig().embedded ) {\n\t\t\tthis.Reveal.getRevealElement().addEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tthis.Reveal.getRevealElement().removeEventListener( 'pointerdown', this.onRevealPointerDown, false );\n\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\n\t}\n\n\tfocus() {\n\n\t\tif( this.state !== STATE_FOCUS ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'focused' );\n\t\t\tdocument.addEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_FOCUS;\n\n\t}\n\n\tblur() {\n\n\t\tif( this.state !== STATE_BLUR ) {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\t\t\tdocument.removeEventListener( 'pointerdown', this.onDocumentPointerDown, false );\n\t\t}\n\n\t\tthis.state = STATE_BLUR;\n\n\t}\n\n\tisFocused() {\n\n\t\treturn this.state === STATE_FOCUS;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.Reveal.getRevealElement().classList.remove( 'focused' );\n\n\t}\n\n\tonRevealPointerDown( event ) {\n\n\t\tthis.focus();\n\n\t}\n\n\tonDocumentPointerDown( event ) {\n\n\t\tlet revealElement = closest( event.target, '.reveal' );\n\t\tif( !revealElement || revealElement !== this.Reveal.getRevealElement() ) {\n\t\t\tthis.blur();\n\t\t}\n\n\t}\n\n}","/**\n * Handles the showing and \n */\nexport default class Notes {\n\n\tconstructor( Reveal ) {\n\n\t\tthis.Reveal = Reveal;\n\n\t}\n\n\trender() {\n\n\t\tthis.element = document.createElement( 'div' );\n\t\tthis.element.className = 'speaker-notes';\n\t\tthis.element.setAttribute( 'data-prevent-swipe', '' );\n\t\tthis.element.setAttribute( 'tabindex', '0' );\n\t\tthis.Reveal.getRevealElement().appendChild( this.element );\n\n\t}\n\n\t/**\n\t * Called when the reveal.js config is updated.\n\t */\n\tconfigure( config, oldConfig ) {\n\n\t\tif( config.showNotes ) {\n\t\t\tthis.element.setAttribute( 'data-layout', typeof config.showNotes === 'string' ? config.showNotes : 'inline' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Pick up notes from the current slide and display them\n\t * to the viewer.\n\t *\n\t * @see {@link config.showNotes}\n\t */\n\tupdate() {\n\n\t\tif( this.Reveal.getConfig().showNotes && this.element && this.Reveal.getCurrentSlide() && !this.Reveal.print.isPrintingPDF() ) {\n\n\t\t\tthis.element.innerHTML = this.getSlideNotes() || '<span class=\"notes-placeholder\">No notes on this slide.</span>';\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates the visibility of the speaker notes sidebar that\n\t * is used to share annotated slides. The notes sidebar is\n\t * only visible if showNotes is true and there are notes on\n\t * one or more slides in the deck.\n\t */\n\tupdateVisibility() {\n\n\t\tif( this.Reveal.getConfig().showNotes && this.hasNotes() && !this.Reveal.print.isPrintingPDF() ) {\n\t\t\tthis.Reveal.getRevealElement().classList.add( 'show-notes' );\n\t\t}\n\t\telse {\n\t\t\tthis.Reveal.getRevealElement().classList.remove( 'show-notes' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if there are speaker notes for ANY slide in the\n\t * presentation.\n\t */\n\thasNotes() {\n\n\t\treturn this.Reveal.getSlidesElement().querySelectorAll( '[data-notes], aside.notes' ).length > 0;\n\n\t}\n\n\t/**\n\t * Checks if this presentation is running inside of the\n\t * speaker notes window.\n\t *\n\t * @return {boolean}\n\t */\n\tisSpeakerNotesWindow() {\n\n\t\treturn !!window.location.search.match( /receiver/gi );\n\n\t}\n\n\t/**\n\t * Retrieves the speaker notes from a slide. Notes can be\n\t * defined in two ways:\n\t * 1. As a data-notes attribute on the slide <section>\n\t * 2. As an <aside class=\"notes\"> inside of the slide\n\t *\n\t * @param {HTMLElement} [slide=currentSlide]\n\t * @return {(string|null)}\n\t */\n\tgetSlideNotes( slide = this.Reveal.getCurrentSlide() ) {\n\n\t\t// Notes can be specified via the data-notes attribute...\n\t\tif( slide.hasAttribute( 'data-notes' ) ) {\n\t\t\treturn slide.getAttribute( 'data-notes' );\n\t\t}\n\n\t\t// ... or using an <aside class=\"notes\"> element\n\t\tlet notesElement = slide.querySelector( 'aside.notes' );\n\t\tif( notesElement ) {\n\t\t\treturn notesElement.innerHTML;\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tdestroy() {\n\n\t\tthis.element.remove();\n\n\t}\n\n}","/**\n * UI component that lets the use control auto-slide\n * playback via play/pause.\n */\nexport default class Playback {\n\n\t/**\n\t * @param {HTMLElement} container The component will append\n\t * itself to this\n\t * @param {function} progressCheck A method which will be\n\t * called frequently to get the current playback progress on\n\t * a range of 0-1\n\t */\n\tconstructor( container, progressCheck ) {\n\n\t\t// Cosmetics\n\t\tthis.diameter = 100;\n\t\tthis.diameter2 = this.diameter/2;\n\t\tthis.thickness = 6;\n\n\t\t// Flags if we are currently playing\n\t\tthis.playing = false;\n\n\t\t// Current progress on a 0-1 range\n\t\tthis.progress = 0;\n\n\t\t// Used to loop the animation smoothly\n\t\tthis.progressOffset = 1;\n\n\t\tthis.container = container;\n\t\tthis.progressCheck = progressCheck;\n\n\t\tthis.canvas = document.createElement( 'canvas' );\n\t\tthis.canvas.className = 'playback';\n\t\tthis.canvas.width = this.diameter;\n\t\tthis.canvas.height = this.diameter;\n\t\tthis.canvas.style.width = this.diameter2 + 'px';\n\t\tthis.canvas.style.height = this.diameter2 + 'px';\n\t\tthis.context = this.canvas.getContext( '2d' );\n\n\t\tthis.container.appendChild( this.canvas );\n\n\t\tthis.render();\n\n\t}\n\n\tsetPlaying( value ) {\n\n\t\tconst wasPlaying = this.playing;\n\n\t\tthis.playing = value;\n\n\t\t// Start repainting if we weren't already\n\t\tif( !wasPlaying && this.playing ) {\n\t\t\tthis.animate();\n\t\t}\n\t\telse {\n\t\t\tthis.render();\n\t\t}\n\n\t}\n\n\tanimate() {\n\n\t\tconst progressBefore = this.progress;\n\n\t\tthis.progress = this.progressCheck();\n\n\t\t// When we loop, offset the progress so that it eases\n\t\t// smoothly rather than immediately resetting\n\t\tif( progressBefore > 0.8 && this.progress < 0.2 ) {\n\t\t\tthis.progressOffset = this.progress;\n\t\t}\n\n\t\tthis.render();\n\n\t\tif( this.playing ) {\n\t\t\trequestAnimationFrame( this.animate.bind( this ) );\n\t\t}\n\n\t}\n\n\t/**\n\t * Renders the current progress and playback state.\n\t */\n\trender() {\n\n\t\tlet progress = this.playing ? this.progress : 0,\n\t\t\tradius = ( this.diameter2 ) - this.thickness,\n\t\t\tx = this.diameter2,\n\t\t\ty = this.diameter2,\n\t\t\ticonSize = 28;\n\n\t\t// Ease towards 1\n\t\tthis.progressOffset += ( 1 - this.progressOffset ) * 0.1;\n\n\t\tconst endAngle = ( - Math.PI / 2 ) + ( progress * ( Math.PI * 2 ) );\n\t\tconst startAngle = ( - Math.PI / 2 ) + ( this.progressOffset * ( Math.PI * 2 ) );\n\n\t\tthis.context.save();\n\t\tthis.context.clearRect( 0, 0, this.diameter, this.diameter );\n\n\t\t// Solid background color\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius + 4, 0, Math.PI * 2, false );\n\t\tthis.context.fillStyle = 'rgba( 0, 0, 0, 0.4 )';\n\t\tthis.context.fill();\n\n\t\t// Draw progress track\n\t\tthis.context.beginPath();\n\t\tthis.context.arc( x, y, radius, 0, Math.PI * 2, false );\n\t\tthis.context.lineWidth = this.thickness;\n\t\tthis.context.strokeStyle = 'rgba( 255, 255, 255, 0.2 )';\n\t\tthis.context.stroke();\n\n\t\tif( this.playing ) {\n\t\t\t// Draw progress on top of track\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.arc( x, y, radius, startAngle, endAngle, false );\n\t\t\tthis.context.lineWidth = this.thickness;\n\t\t\tthis.context.strokeStyle = '#fff';\n\t\t\tthis.context.stroke();\n\t\t}\n\n\t\tthis.context.translate( x - ( iconSize / 2 ), y - ( iconSize / 2 ) );\n\n\t\t// Draw play/pause icons\n\t\tif( this.playing ) {\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fillRect( 0, 0, iconSize / 2 - 4, iconSize );\n\t\t\tthis.context.fillRect( iconSize / 2 + 4, 0, iconSize / 2 - 4, iconSize );\n\t\t}\n\t\telse {\n\t\t\tthis.context.beginPath();\n\t\t\tthis.context.translate( 4, 0 );\n\t\t\tthis.context.moveTo( 0, 0 );\n\t\t\tthis.context.lineTo( iconSize - 4, iconSize / 2 );\n\t\t\tthis.context.lineTo( 0, iconSize );\n\t\t\tthis.context.fillStyle = '#fff';\n\t\t\tthis.context.fill();\n\t\t}\n\n\t\tthis.context.restore();\n\n\t}\n\n\ton( type, listener ) {\n\t\tthis.canvas.addEventListener( type, listener, false );\n\t}\n\n\toff( type, listener ) {\n\t\tthis.canvas.removeEventListener( type, listener, false );\n\t}\n\n\tdestroy() {\n\n\t\tthis.playing = false;\n\n\t\tif( this.canvas.parentNode ) {\n\t\t\tthis.container.removeChild( this.canvas );\n\t\t}\n\n\t}\n\n}","/**\n * The default reveal.js config object.\n */\nexport default {\n\n\t// The \"normal\" size of the presentation, aspect ratio will be preserved\n\t// when the presentation is scaled to fit different resolutions\n\twidth: 960,\n\theight: 700,\n\n\t// Factor of the display size that should remain empty around the content\n\tmargin: 0.04,\n\n\t// Bounds for smallest/largest possible scale to apply to content\n\tminScale: 0.2,\n\tmaxScale: 2.0,\n\n\t// Display presentation control arrows\n\tcontrols: true,\n\n\t// Help the user learn the controls by providing hints, for example by\n\t// bouncing the down arrow when they first encounter a vertical slide\n\tcontrolsTutorial: true,\n\n\t// Determines where controls appear, \"edges\" or \"bottom-right\"\n\tcontrolsLayout: 'bottom-right',\n\n\t// Visibility rule for backwards navigation arrows; \"faded\", \"hidden\"\n\t// or \"visible\"\n\tcontrolsBackArrows: 'faded',\n\n\t// Display a presentation progress bar\n\tprogress: true,\n\n\t// Display the page number of the current slide\n\t// - true:    Show slide number\n\t// - false:   Hide slide number\n\t//\n\t// Can optionally be set as a string that specifies the number formatting:\n\t// - \"h.v\":\t  Horizontal . vertical slide number (default)\n\t// - \"h/v\":\t  Horizontal / vertical slide number\n\t// - \"c\":\t  Flattened slide number\n\t// - \"c/t\":\t  Flattened slide number / total slides\n\t//\n\t// Alternatively, you can provide a function that returns the slide\n\t// number for the current slide. The function should take in a slide\n\t// object and return an array with one string [slideNumber] or\n\t// three strings [n1,delimiter,n2]. See #formatSlideNumber().\n\tslideNumber: false,\n\n\t// Can be used to limit the contexts in which the slide number appears\n\t// - \"all\":      Always show the slide number\n\t// - \"print\":    Only when printing to PDF\n\t// - \"speaker\":  Only in the speaker view\n\tshowSlideNumber: 'all',\n\n\t// Use 1 based indexing for # links to match slide number (default is zero\n\t// based)\n\thashOneBasedIndex: false,\n\n\t// Add the current slide number to the URL hash so that reloading the\n\t// page/copying the URL will return you to the same slide\n\thash: false,\n\n\t// Flags if we should monitor the hash and change slides accordingly\n\trespondToHashChanges: true,\n\n\t// Push each slide change to the browser history.  Implies `hash: true`\n\thistory: false,\n\n\t// Enable keyboard shortcuts for navigation\n\tkeyboard: true,\n\n\t// Optional function that blocks keyboard events when retuning false\n\t//\n\t// If you set this to 'focused', we will only capture keyboard events\n\t// for embedded decks when they are in focus\n\tkeyboardCondition: null,\n\n\t// Disables the default reveal.js slide layout (scaling and centering)\n\t// so that you can use custom CSS layout\n\tdisableLayout: false,\n\n\t// Enable the slide overview mode\n\toverview: true,\n\n\t// Vertical centering of slides\n\tcenter: true,\n\n\t// Enables touch navigation on devices with touch input\n\ttouch: true,\n\n\t// Loop the presentation\n\tloop: false,\n\n\t// Change the presentation direction to be RTL\n\trtl: false,\n\n\t// Changes the behavior of our navigation directions.\n\t//\n\t// \"default\"\n\t// Left/right arrow keys step between horizontal slides, up/down\n\t// arrow keys step between vertical slides. Space key steps through\n\t// all slides (both horizontal and vertical).\n\t//\n\t// \"linear\"\n\t// Removes the up/down arrows. Left/right arrows step through all\n\t// slides (both horizontal and vertical).\n\t//\n\t// \"grid\"\n\t// When this is enabled, stepping left/right from a vertical stack\n\t// to an adjacent vertical stack will land you at the same vertical\n\t// index.\n\t//\n\t// Consider a deck with six slides ordered in two vertical stacks:\n\t// 1.1    2.1\n\t// 1.2    2.2\n\t// 1.3    2.3\n\t//\n\t// If you're on slide 1.3 and navigate right, you will normally move\n\t// from 1.3 -> 2.1. If \"grid\" is used, the same navigation takes you\n\t// from 1.3 -> 2.3.\n\tnavigationMode: 'default',\n\n\t// Randomizes the order of slides each time the presentation loads\n\tshuffle: false,\n\n\t// Turns fragments on and off globally\n\tfragments: true,\n\n\t// Flags whether to include the current fragment in the URL,\n\t// so that reloading brings you to the same fragment position\n\tfragmentInURL: true,\n\n\t// Flags if the presentation is running in an embedded mode,\n\t// i.e. contained within a limited portion of the screen\n\tembedded: false,\n\n\t// Flags if we should show a help overlay when the question-mark\n\t// key is pressed\n\thelp: true,\n\n\t// Flags if it should be possible to pause the presentation (blackout)\n\tpause: true,\n\n\t// Flags if speaker notes should be visible to all viewers\n\tshowNotes: false,\n\n\t// Flags if slides with data-visibility=\"hidden\" should be kep visible\n\tshowHiddenSlides: false,\n\n\t// Global override for autoplaying embedded media (video/audio/iframe)\n\t// - null:   Media will only autoplay if data-autoplay is present\n\t// - true:   All media will autoplay, regardless of individual setting\n\t// - false:  No media will autoplay, regardless of individual setting\n\tautoPlayMedia: null,\n\n\t// Global override for preloading lazy-loaded iframes\n\t// - null:   Iframes with data-src AND data-preload will be loaded when within\n\t//           the viewDistance, iframes with only data-src will be loaded when visible\n\t// - true:   All iframes with data-src will be loaded when within the viewDistance\n\t// - false:  All iframes with data-src will be loaded only when visible\n\tpreloadIframes: null,\n\n\t// Can be used to globally disable auto-animation\n\tautoAnimate: true,\n\n\t// Optionally provide a custom element matcher that will be\n\t// used to dictate which elements we can animate between.\n\tautoAnimateMatcher: null,\n\n\t// Default settings for our auto-animate transitions, can be\n\t// overridden per-slide or per-element via data arguments\n\tautoAnimateEasing: 'ease',\n\tautoAnimateDuration: 1.0,\n\tautoAnimateUnmatched: true,\n\n\t// CSS properties that can be auto-animated. Position & scale\n\t// is matched separately so there's no need to include styles\n\t// like top/right/bottom/left, width/height or margin.\n\tautoAnimateStyles: [\n\t\t'opacity',\n\t\t'color',\n\t\t'background-color',\n\t\t'padding',\n\t\t'font-size',\n\t\t'line-height',\n\t\t'letter-spacing',\n\t\t'border-width',\n\t\t'border-color',\n\t\t'border-radius',\n\t\t'outline',\n\t\t'outline-offset'\n\t],\n\n\t// Controls automatic progression to the next slide\n\t// - 0:      Auto-sliding only happens if the data-autoslide HTML attribute\n\t//           is present on the current slide or fragment\n\t// - 1+:     All slides will progress automatically at the given interval\n\t// - false:  No auto-sliding, even if data-autoslide is present\n\tautoSlide: 0,\n\n\t// Stop auto-sliding after user input\n\tautoSlideStoppable: true,\n\n\t// Use this method for navigation when auto-sliding (defaults to navigateNext)\n\tautoSlideMethod: null,\n\n\t// Specify the average time in seconds that you think you will spend\n\t// presenting each slide. This is used to show a pacing timer in the\n\t// speaker view\n\tdefaultTiming: null,\n\n\t// Enable slide navigation via mouse wheel\n\tmouseWheel: false,\n\n\t// Opens links in an iframe preview overlay\n\t// Add `data-preview-link` and `data-preview-link=\"false\"` to customise each link\n\t// individually\n\tpreviewLinks: false,\n\n\t// Exposes the reveal.js API through window.postMessage\n\tpostMessage: true,\n\n\t// Dispatches all reveal.js events to the parent window through postMessage\n\tpostMessageEvents: false,\n\n\t// Focuses body when page changes visibility to ensure keyboard shortcuts work\n\tfocusBodyOnPageVisibilityChange: true,\n\n\t// Transition style\n\ttransition: 'slide', // none/fade/slide/convex/concave/zoom\n\n\t// Transition speed\n\ttransitionSpeed: 'default', // default/fast/slow\n\n\t// Transition style for full page slide backgrounds\n\tbackgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom\n\n\t// Parallax background image\n\tparallaxBackgroundImage: '', // CSS syntax, e.g. \"a.jpg\"\n\n\t// Parallax background size\n\tparallaxBackgroundSize: '', // CSS syntax, e.g. \"3000px 2000px\"\n\n\t// Parallax background repeat\n\tparallaxBackgroundRepeat: '', // repeat/repeat-x/repeat-y/no-repeat/initial/inherit\n\n\t// Parallax background position\n\tparallaxBackgroundPosition: '', // CSS syntax, e.g. \"top left\"\n\n\t// Amount of pixels to move the parallax background per slide step\n\tparallaxBackgroundHorizontal: null,\n\tparallaxBackgroundVertical: null,\n\n\t// The maximum number of pages a single slide can expand onto when printing\n\t// to PDF, unlimited by default\n\tpdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,\n\n\t// Prints each fragment on a separate slide\n\tpdfSeparateFragments: true,\n\n\t// Offset used to reduce the height of content within exported PDF pages.\n\t// This exists to account for environment differences based on how you\n\t// print to PDF. CLI printing options, like phantomjs and wkpdf, can end\n\t// on precisely the total height of the document whereas in-browser\n\t// printing has to end one pixel before.\n\tpdfPageHeightOffset: -1,\n\n\t// Number of slides away from the current that are visible\n\tviewDistance: 3,\n\n\t// Number of slides away from the current that are visible on mobile\n\t// devices. It is advisable to set this to a lower number than\n\t// viewDistance in order to save resources.\n\tmobileViewDistance: 2,\n\n\t// The display mode that will be used to show slides\n\tdisplay: 'block',\n\n\t// Hide cursor if inactive\n\thideInactiveCursor: true,\n\n\t// Time before the cursor is hidden (in ms)\n\thideCursorTime: 5000,\n\n\t// Script dependencies to load\n\tdependencies: [],\n\n\t// Plugin objects to register and use for this presentation\n\tplugins: []\n\n}","import SlideContent from './controllers/slidecontent.js'\nimport SlideNumber from './controllers/slidenumber.js'\nimport Backgrounds from './controllers/backgrounds.js'\nimport AutoAnimate from './controllers/autoanimate.js'\nimport Fragments from './controllers/fragments.js'\nimport Overview from './controllers/overview.js'\nimport Keyboard from './controllers/keyboard.js'\nimport Location from './controllers/location.js'\nimport Controls from './controllers/controls.js'\nimport Progress from './controllers/progress.js'\nimport Pointer from './controllers/pointer.js'\nimport Plugins from './controllers/plugins.js'\nimport Print from './controllers/print.js'\nimport Touch from './controllers/touch.js'\nimport Focus from './controllers/focus.js'\nimport Notes from './controllers/notes.js'\nimport Playback from './components/playback.js'\nimport defaultConfig from './config.js'\nimport * as Util from './utils/util.js'\nimport * as Device from './utils/device.js'\nimport {\n\tSLIDES_SELECTOR,\n\tHORIZONTAL_SLIDES_SELECTOR,\n\tVERTICAL_SLIDES_SELECTOR,\n\tPOST_MESSAGE_METHOD_BLACKLIST\n} from './utils/constants.js'\n\n// The reveal.js version\nexport const VERSION = '4.3.1';\n\n/**\n * reveal.js\n * https://revealjs.com\n * MIT licensed\n *\n * Copyright (C) 2011-2022 Hakim El Hattab, https://hakim.se\n */\nexport default function( revealElement, options ) {\n\n\t// Support initialization with no args, one arg\n\t// [options] or two args [revealElement, options]\n\tif( arguments.length < 2 ) {\n\t\toptions = arguments[0];\n\t\trevealElement = document.querySelector( '.reveal' );\n\t}\n\n\tconst Reveal = {};\n\n\t// Configuration defaults, can be overridden at initialization time\n\tlet config = {},\n\n\t\t// Flags if reveal.js is loaded (has dispatched the 'ready' event)\n\t\tready = false,\n\n\t\t// The horizontal and vertical index of the currently active slide\n\t\tindexh,\n\t\tindexv,\n\n\t\t// The previous and current slide HTML elements\n\t\tpreviousSlide,\n\t\tcurrentSlide,\n\n\t\t// Remember which directions that the user has navigated towards\n\t\tnavigationHistory = {\n\t\t\thasNavigatedHorizontally: false,\n\t\t\thasNavigatedVertically: false\n\t\t},\n\n\t\t// Slides may have a data-state attribute which we pick up and apply\n\t\t// as a class to the body. This list contains the combined state of\n\t\t// all current slides.\n\t\tstate = [],\n\n\t\t// The current scale of the presentation (see width/height config)\n\t\tscale = 1,\n\n\t\t// CSS transform that is currently applied to the slides container,\n\t\t// split into two groups\n\t\tslidesTransform = { layout: '', overview: '' },\n\n\t\t// Cached references to DOM elements\n\t\tdom = {},\n\n\t\t// Flags if the interaction event listeners are bound\n\t\teventsAreBound = false,\n\n\t\t// The current slide transition state; idle or running\n\t\ttransition = 'idle',\n\n\t\t// The current auto-slide duration\n\t\tautoSlide = 0,\n\n\t\t// Auto slide properties\n\t\tautoSlidePlayer,\n\t\tautoSlideTimeout = 0,\n\t\tautoSlideStartTime = -1,\n\t\tautoSlidePaused = false,\n\n\t\t// Controllers for different aspects of our presentation. They're\n\t\t// all given direct references to this Reveal instance since there\n\t\t// may be multiple presentations running in parallel.\n\t\tslideContent = new SlideContent( Reveal ),\n\t\tslideNumber = new SlideNumber( Reveal ),\n\t\tautoAnimate = new AutoAnimate( Reveal ),\n\t\tbackgrounds = new Backgrounds( Reveal ),\n\t\tfragments = new Fragments( Reveal ),\n\t\toverview = new Overview( Reveal ),\n\t\tkeyboard = new Keyboard( Reveal ),\n\t\tlocation = new Location( Reveal ),\n\t\tcontrols = new Controls( Reveal ),\n\t\tprogress = new Progress( Reveal ),\n\t\tpointer = new Pointer( Reveal ),\n\t\tplugins = new Plugins( Reveal ),\n\t\tprint = new Print( Reveal ),\n\t\tfocus = new Focus( Reveal ),\n\t\ttouch = new Touch( Reveal ),\n\t\tnotes = new Notes( Reveal );\n\n\t/**\n\t * Starts up the presentation.\n\t */\n\tfunction initialize( initOptions ) {\n\n\t\tif( !revealElement ) throw 'Unable to find presentation root (<div class=\"reveal\">).';\n\n\t\t// Cache references to key DOM elements\n\t\tdom.wrapper = revealElement;\n\t\tdom.slides = revealElement.querySelector( '.slides' );\n\n\t\tif( !dom.slides ) throw 'Unable to find slides container (<div class=\"slides\">).';\n\n\t\t// Compose our config object in order of increasing precedence:\n\t\t// 1. Default reveal.js options\n\t\t// 2. Options provided via Reveal.configure() prior to\n\t\t//    initialization\n\t\t// 3. Options passed to the Reveal constructor\n\t\t// 4. Options passed to Reveal.initialize\n\t\t// 5. Query params\n\t\tconfig = { ...defaultConfig, ...config, ...options, ...initOptions, ...Util.getQueryHash() };\n\n\t\tsetViewport();\n\n\t\t// Force a layout when the whole page, incl fonts, has loaded\n\t\twindow.addEventListener( 'load', layout, false );\n\n\t\t// Register plugins and load dependencies, then move on to #start()\n\t\tplugins.load( config.plugins, config.dependencies ).then( start );\n\n\t\treturn new Promise( resolve => Reveal.on( 'ready', resolve ) );\n\n\t}\n\n\t/**\n\t * Encase the presentation in a reveal.js viewport. The\n\t * extent of the viewport differs based on configuration.\n\t */\n\tfunction setViewport() {\n\n\t\t// Embedded decks use the reveal element as their viewport\n\t\tif( config.embedded === true ) {\n\t\t\tdom.viewport = Util.closest( revealElement, '.reveal-viewport' ) || revealElement;\n\t\t}\n\t\t// Full-page decks use the body as their viewport\n\t\telse {\n\t\t\tdom.viewport = document.body;\n\t\t\tdocument.documentElement.classList.add( 'reveal-full-page' );\n\t\t}\n\n\t\tdom.viewport.classList.add( 'reveal-viewport' );\n\n\t}\n\n\t/**\n\t * Starts up reveal.js by binding input events and navigating\n\t * to the current URL deeplink if there is one.\n\t */\n\tfunction start() {\n\n\t\tready = true;\n\n\t\t// Remove slides hidden with data-visibility\n\t\tremoveHiddenSlides();\n\n\t\t// Make sure we've got all the DOM elements we need\n\t\tsetupDOM();\n\n\t\t// Listen to messages posted to this window\n\t\tsetupPostMessage();\n\n\t\t// Prevent the slides from being scrolled out of view\n\t\tsetupScrollPrevention();\n\n\t\t// Adds bindings for fullscreen mode\n\t\tsetupFullscreen();\n\n\t\t// Resets all vertical slides so that only the first is visible\n\t\tresetVerticalSlides();\n\n\t\t// Updates the presentation to match the current configuration values\n\t\tconfigure();\n\n\t\t// Read the initial hash\n\t\tlocation.readURL();\n\n\t\t// Create slide backgrounds\n\t\tbackgrounds.update( true );\n\n\t\t// Notify listeners that the presentation is ready but use a 1ms\n\t\t// timeout to ensure it's not fired synchronously after #initialize()\n\t\tsetTimeout( () => {\n\t\t\t// Enable transitions now that we're loaded\n\t\t\tdom.slides.classList.remove( 'no-transition' );\n\n\t\t\tdom.wrapper.classList.add( 'ready' );\n\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'ready',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tcurrentSlide\n\t\t\t\t}\n\t\t\t});\n\t\t}, 1 );\n\n\t\t// Special setup and config is required when printing to PDF\n\t\tif( print.isPrintingPDF() ) {\n\t\t\tremoveEventListeners();\n\n\t\t\t// The document needs to have loaded for the PDF layout\n\t\t\t// measurements to be accurate\n\t\t\tif( document.readyState === 'complete' ) {\n\t\t\t\tprint.setupPDF();\n\t\t\t}\n\t\t\telse {\n\t\t\t\twindow.addEventListener( 'load', () => {\n\t\t\t\t\tprint.setupPDF();\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Removes all slides with data-visibility=\"hidden\". This\n\t * is done right before the rest of the presentation is\n\t * initialized.\n\t *\n\t * If you want to show all hidden slides, initialize\n\t * reveal.js with showHiddenSlides set to true.\n\t */\n\tfunction removeHiddenSlides() {\n\n\t\tif( !config.showHiddenSlides ) {\n\t\t\tUtil.queryAll( dom.wrapper, 'section[data-visibility=\"hidden\"]' ).forEach( slide => {\n\t\t\t\tslide.parentNode.removeChild( slide );\n\t\t\t} );\n\t\t}\n\n\t}\n\n\t/**\n\t * Finds and stores references to DOM elements which are\n\t * required by the presentation. If a required element is\n\t * not found, it is created.\n\t */\n\tfunction setupDOM() {\n\n\t\t// Prevent transitions while we're loading\n\t\tdom.slides.classList.add( 'no-transition' );\n\n\t\tif( Device.isMobile ) {\n\t\t\tdom.wrapper.classList.add( 'no-hover' );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.classList.remove( 'no-hover' );\n\t\t}\n\n\t\tbackgrounds.render();\n\t\tslideNumber.render();\n\t\tcontrols.render();\n\t\tprogress.render();\n\t\tnotes.render();\n\n\t\t// Overlay graphic which is displayed during the paused mode\n\t\tdom.pauseOverlay = Util.createSingletonNode( dom.wrapper, 'div', 'pause-overlay', config.controls ? '<button class=\"resume-button\">Resume presentation</button>' : null );\n\n\t\tdom.statusElement = createStatusElement();\n\n\t\tdom.wrapper.setAttribute( 'role', 'application' );\n\t}\n\n\t/**\n\t * Creates a hidden div with role aria-live to announce the\n\t * current slide content. Hide the div off-screen to make it\n\t * available only to Assistive Technologies.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction createStatusElement() {\n\n\t\tlet statusElement = dom.wrapper.querySelector( '.aria-status' );\n\t\tif( !statusElement ) {\n\t\t\tstatusElement = document.createElement( 'div' );\n\t\t\tstatusElement.style.position = 'absolute';\n\t\t\tstatusElement.style.height = '1px';\n\t\t\tstatusElement.style.width = '1px';\n\t\t\tstatusElement.style.overflow = 'hidden';\n\t\t\tstatusElement.style.clip = 'rect( 1px, 1px, 1px, 1px )';\n\t\t\tstatusElement.classList.add( 'aria-status' );\n\t\t\tstatusElement.setAttribute( 'aria-live', 'polite' );\n\t\t\tstatusElement.setAttribute( 'aria-atomic','true' );\n\t\t\tdom.wrapper.appendChild( statusElement );\n\t\t}\n\t\treturn statusElement;\n\n\t}\n\n\t/**\n\t * Announces the given text to screen readers.\n\t */\n\tfunction announceStatus( value ) {\n\n\t\tdom.statusElement.textContent = value;\n\n\t}\n\n\t/**\n\t * Converts the given HTML element into a string of text\n\t * that can be announced to a screen reader. Hidden\n\t * elements are excluded.\n\t */\n\tfunction getStatusText( node ) {\n\n\t\tlet text = '';\n\n\t\t// Text node\n\t\tif( node.nodeType === 3 ) {\n\t\t\ttext += node.textContent;\n\t\t}\n\t\t// Element node\n\t\telse if( node.nodeType === 1 ) {\n\n\t\t\tlet isAriaHidden = node.getAttribute( 'aria-hidden' );\n\t\t\tlet isDisplayHidden = window.getComputedStyle( node )['display'] === 'none';\n\t\t\tif( isAriaHidden !== 'true' && !isDisplayHidden ) {\n\n\t\t\t\tArray.from( node.childNodes ).forEach( child => {\n\t\t\t\t\ttext += getStatusText( child );\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t\ttext = text.trim();\n\n\t\treturn text === '' ? '' : text + ' ';\n\n\t}\n\n\t/**\n\t * This is an unfortunate necessity. Some actions – such as\n\t * an input field being focused in an iframe or using the\n\t * keyboard to expand text selection beyond the bounds of\n\t * a slide – can trigger our content to be pushed out of view.\n\t * This scrolling can not be prevented by hiding overflow in\n\t * CSS (we already do) so we have to resort to repeatedly\n\t * checking if the slides have been offset :(\n\t */\n\tfunction setupScrollPrevention() {\n\n\t\tsetInterval( () => {\n\t\t\tif( dom.wrapper.scrollTop !== 0 || dom.wrapper.scrollLeft !== 0 ) {\n\t\t\t\tdom.wrapper.scrollTop = 0;\n\t\t\t\tdom.wrapper.scrollLeft = 0;\n\t\t\t}\n\t\t}, 1000 );\n\n\t}\n\n\t/**\n\t * After entering fullscreen we need to force a layout to\n\t * get our presentations to scale correctly. This behavior\n\t * is inconsistent across browsers but a force layout seems\n\t * to normalize it.\n\t */\n\tfunction setupFullscreen() {\n\n\t\tdocument.addEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.addEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\n\t}\n\n\t/**\n\t * Registers a listener to postMessage events, this makes it\n\t * possible to call all reveal.js API methods from another\n\t * window. For example:\n\t *\n\t * revealWindow.postMessage( JSON.stringify({\n\t *   method: 'slide',\n\t *   args: [ 2 ]\n\t * }), '*' );\n\t */\n\tfunction setupPostMessage() {\n\n\t\tif( config.postMessage ) {\n\t\t\twindow.addEventListener( 'message', onPostMessage, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies the configuration settings from the config\n\t * object. May be called multiple times.\n\t *\n\t * @param {object} options\n\t */\n\tfunction configure( options ) {\n\n\t\tconst oldConfig = { ...config }\n\n\t\t// New config options may be passed when this method\n\t\t// is invoked through the API after initialization\n\t\tif( typeof options === 'object' ) Util.extend( config, options );\n\n\t\t// Abort if reveal.js hasn't finished loading, config\n\t\t// changes will be applied automatically once ready\n\t\tif( Reveal.isReady() ===  false ) return;\n\n\t\tconst numberOfSlides = dom.wrapper.querySelectorAll( SLIDES_SELECTOR ).length;\n\n\t\t// The transition is added as a class on the .reveal element\n\t\tdom.wrapper.classList.remove( oldConfig.transition );\n\t\tdom.wrapper.classList.add( config.transition );\n\n\t\tdom.wrapper.setAttribute( 'data-transition-speed', config.transitionSpeed );\n\t\tdom.wrapper.setAttribute( 'data-background-transition', config.backgroundTransition );\n\n\t\t// Expose our configured slide dimensions as custom props\n\t\tdom.viewport.style.setProperty( '--slide-width', config.width + 'px' );\n\t\tdom.viewport.style.setProperty( '--slide-height', config.height + 'px' );\n\n\t\tif( config.shuffle ) {\n\t\t\tshuffle();\n\t\t}\n\n\t\tUtil.toggleClass( dom.wrapper, 'embedded', config.embedded );\n\t\tUtil.toggleClass( dom.wrapper, 'rtl', config.rtl );\n\t\tUtil.toggleClass( dom.wrapper, 'center', config.center );\n\n\t\t// Exit the paused mode if it was configured off\n\t\tif( config.pause === false ) {\n\t\t\tresume();\n\t\t}\n\n\t\t// Iframe link previews\n\t\tif( config.previewLinks ) {\n\t\t\tenablePreviewLinks();\n\t\t\tdisablePreviewLinks( '[data-preview-link=false]' );\n\t\t}\n\t\telse {\n\t\t\tdisablePreviewLinks();\n\t\t\tenablePreviewLinks( '[data-preview-link]:not([data-preview-link=false])' );\n\t\t}\n\n\t\t// Reset all changes made by auto-animations\n\t\tautoAnimate.reset();\n\n\t\t// Remove existing auto-slide controls\n\t\tif( autoSlidePlayer ) {\n\t\t\tautoSlidePlayer.destroy();\n\t\t\tautoSlidePlayer = null;\n\t\t}\n\n\t\t// Generate auto-slide controls if needed\n\t\tif( numberOfSlides > 1 && config.autoSlide && config.autoSlideStoppable ) {\n\t\t\tautoSlidePlayer = new Playback( dom.wrapper, () => {\n\t\t\t\treturn Math.min( Math.max( ( Date.now() - autoSlideStartTime ) / autoSlide, 0 ), 1 );\n\t\t\t} );\n\n\t\t\tautoSlidePlayer.on( 'click', onAutoSlidePlayerClick );\n\t\t\tautoSlidePaused = false;\n\t\t}\n\n\t\t// Add the navigation mode to the DOM so we can adjust styling\n\t\tif( config.navigationMode !== 'default' ) {\n\t\t\tdom.wrapper.setAttribute( 'data-navigation-mode', config.navigationMode );\n\t\t}\n\t\telse {\n\t\t\tdom.wrapper.removeAttribute( 'data-navigation-mode' );\n\t\t}\n\n\t\tnotes.configure( config, oldConfig );\n\t\tfocus.configure( config, oldConfig );\n\t\tpointer.configure( config, oldConfig );\n\t\tcontrols.configure( config, oldConfig );\n\t\tprogress.configure( config, oldConfig );\n\t\tkeyboard.configure( config, oldConfig );\n\t\tfragments.configure( config, oldConfig );\n\t\tslideNumber.configure( config, oldConfig );\n\n\t\tsync();\n\n\t}\n\n\t/**\n\t * Binds all event listeners.\n\t */\n\tfunction addEventListeners() {\n\n\t\teventsAreBound = true;\n\n\t\twindow.addEventListener( 'resize', onWindowResize, false );\n\n\t\tif( config.touch ) touch.bind();\n\t\tif( config.keyboard ) keyboard.bind();\n\t\tif( config.progress ) progress.bind();\n\t\tif( config.respondToHashChanges ) location.bind();\n\t\tcontrols.bind();\n\t\tfocus.bind();\n\n\t\tdom.slides.addEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.addEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.addEventListener( 'click', resume, false );\n\n\t\tif( config.focusBodyOnPageVisibilityChange ) {\n\t\t\tdocument.addEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\t}\n\n\t}\n\n\t/**\n\t * Unbinds all event listeners.\n\t */\n\tfunction removeEventListeners() {\n\n\t\teventsAreBound = false;\n\n\t\ttouch.unbind();\n\t\tfocus.unbind();\n\t\tkeyboard.unbind();\n\t\tcontrols.unbind();\n\t\tprogress.unbind();\n\t\tlocation.unbind();\n\n\t\twindow.removeEventListener( 'resize', onWindowResize, false );\n\n\t\tdom.slides.removeEventListener( 'click', onSlidesClicked, false );\n\t\tdom.slides.removeEventListener( 'transitionend', onTransitionEnd, false );\n\t\tdom.pauseOverlay.removeEventListener( 'click', resume, false );\n\n\t}\n\n\t/**\n\t * Uninitializes reveal.js by undoing changes made to the\n\t * DOM and removing all event listeners.\n\t */\n\tfunction destroy() {\n\n\t\tremoveEventListeners();\n\t\tcancelAutoSlide();\n\t\tdisablePreviewLinks();\n\n\t\t// Destroy controllers\n\t\tnotes.destroy();\n\t\tfocus.destroy();\n\t\tplugins.destroy();\n\t\tpointer.destroy();\n\t\tcontrols.destroy();\n\t\tprogress.destroy();\n\t\tbackgrounds.destroy();\n\t\tslideNumber.destroy();\n\n\t\t// Remove event listeners\n\t\tdocument.removeEventListener( 'fullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'webkitfullscreenchange', onFullscreenChange );\n\t\tdocument.removeEventListener( 'visibilitychange', onPageVisibilityChange, false );\n\t\twindow.removeEventListener( 'message', onPostMessage, false );\n\t\twindow.removeEventListener( 'load', layout, false );\n\n\t\t// Undo DOM changes\n\t\tif( dom.pauseOverlay ) dom.pauseOverlay.remove();\n\t\tif( dom.statusElement ) dom.statusElement.remove();\n\n\t\tdocument.documentElement.classList.remove( 'reveal-full-page' );\n\n\t\tdom.wrapper.classList.remove( 'ready', 'center', 'has-horizontal-slides', 'has-vertical-slides' );\n\t\tdom.wrapper.removeAttribute( 'data-transition-speed' );\n\t\tdom.wrapper.removeAttribute( 'data-background-transition' );\n\n\t\tdom.viewport.classList.remove( 'reveal-viewport' );\n\t\tdom.viewport.style.removeProperty( '--slide-width' );\n\t\tdom.viewport.style.removeProperty( '--slide-height' );\n\n\t\tdom.slides.style.removeProperty( 'width' );\n\t\tdom.slides.style.removeProperty( 'height' );\n\t\tdom.slides.style.removeProperty( 'zoom' );\n\t\tdom.slides.style.removeProperty( 'left' );\n\t\tdom.slides.style.removeProperty( 'top' );\n\t\tdom.slides.style.removeProperty( 'bottom' );\n\t\tdom.slides.style.removeProperty( 'right' );\n\t\tdom.slides.style.removeProperty( 'transform' );\n\n\t\tArray.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) ).forEach( slide => {\n\t\t\tslide.style.removeProperty( 'display' );\n\t\t\tslide.style.removeProperty( 'top' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Adds a listener to one of our custom reveal.js events,\n\t * like slidechanged.\n\t */\n\tfunction on( type, listener, useCapture ) {\n\n\t\trevealElement.addEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Unsubscribes from a reveal.js event.\n\t */\n\tfunction off( type, listener, useCapture ) {\n\n\t\trevealElement.removeEventListener( type, listener, useCapture );\n\n\t}\n\n\t/**\n\t * Applies CSS transforms to the slides container. The container\n\t * is transformed from two separate sources: layout and the overview\n\t * mode.\n\t *\n\t * @param {object} transforms\n\t */\n\tfunction transformSlides( transforms ) {\n\n\t\t// Pick up new transforms from arguments\n\t\tif( typeof transforms.layout === 'string' ) slidesTransform.layout = transforms.layout;\n\t\tif( typeof transforms.overview === 'string' ) slidesTransform.overview = transforms.overview;\n\n\t\t// Apply the transforms to the slides container\n\t\tif( slidesTransform.layout ) {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.layout + ' ' + slidesTransform.overview );\n\t\t}\n\t\telse {\n\t\t\tUtil.transformElement( dom.slides, slidesTransform.overview );\n\t\t}\n\n\t}\n\n\t/**\n\t * Dispatches an event of the specified type from the\n\t * reveal DOM element.\n\t */\n\tfunction dispatchEvent({ target=dom.wrapper, type, data, bubbles=true }) {\n\n\t\tlet event = document.createEvent( 'HTMLEvents', 1, 2 );\n\t\tevent.initEvent( type, bubbles, true );\n\t\tUtil.extend( event, data );\n\t\ttarget.dispatchEvent( event );\n\n\t\tif( target === dom.wrapper ) {\n\t\t\t// If we're in an iframe, post each reveal.js event to the\n\t\t\t// parent window. Used by the notes plugin\n\t\t\tdispatchPostMessage( type );\n\t\t}\n\n\t\treturn event;\n\n\t}\n\n\t/**\n\t * Dispatched a postMessage of the given type from our window.\n\t */\n\tfunction dispatchPostMessage( type, data ) {\n\n\t\tif( config.postMessageEvents && window.parent !== window.self ) {\n\t\t\tlet message = {\n\t\t\t\tnamespace: 'reveal',\n\t\t\t\teventName: type,\n\t\t\t\tstate: getState()\n\t\t\t};\n\n\t\t\tUtil.extend( message, data );\n\n\t\t\twindow.parent.postMessage( JSON.stringify( message ), '*' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Bind preview frame links.\n\t *\n\t * @param {string} [selector=a] - selector for anchors\n\t */\n\tfunction enablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.addEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Unbind preview frame links.\n\t */\n\tfunction disablePreviewLinks( selector = 'a' ) {\n\n\t\tArray.from( dom.wrapper.querySelectorAll( selector ) ).forEach( element => {\n\t\t\tif( /^(http|www)/gi.test( element.getAttribute( 'href' ) ) ) {\n\t\t\t\telement.removeEventListener( 'click', onPreviewLinkClicked, false );\n\t\t\t}\n\t\t} );\n\n\t}\n\n\t/**\n\t * Opens a preview window for the target URL.\n\t *\n\t * @param {string} url - url for preview iframe src\n\t */\n\tfunction showPreview( url ) {\n\n\t\tcloseOverlay();\n\n\t\tdom.overlay = document.createElement( 'div' );\n\t\tdom.overlay.classList.add( 'overlay' );\n\t\tdom.overlay.classList.add( 'overlay-preview' );\n\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\tdom.overlay.innerHTML =\n\t\t\t`<header>\n\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t<a class=\"external\" href=\"${url}\" target=\"_blank\"><span class=\"icon\"></span></a>\n\t\t\t</header>\n\t\t\t<div class=\"spinner\"></div>\n\t\t\t<div class=\"viewport\">\n\t\t\t\t<iframe src=\"${url}\"></iframe>\n\t\t\t\t<small class=\"viewport-inner\">\n\t\t\t\t\t<span class=\"x-frame-error\">Unable to load iframe. This is likely due to the site's policy (x-frame-options).</span>\n\t\t\t\t</small>\n\t\t\t</div>`;\n\n\t\tdom.overlay.querySelector( 'iframe' ).addEventListener( 'load', event => {\n\t\t\tdom.overlay.classList.add( 'loaded' );\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t\tevent.preventDefault();\n\t\t}, false );\n\n\t\tdom.overlay.querySelector( '.external' ).addEventListener( 'click', event => {\n\t\t\tcloseOverlay();\n\t\t}, false );\n\n\t}\n\n\t/**\n\t * Open or close help overlay window.\n\t *\n\t * @param {Boolean} [override] Flag which overrides the\n\t * toggle logic and forcibly sets the desired state. True means\n\t * help is open, false means it's closed.\n\t */\n\tfunction toggleHelp( override ){\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? showHelp() : closeOverlay();\n\t\t}\n\t\telse {\n\t\t\tif( dom.overlay ) {\n\t\t\t\tcloseOverlay();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tshowHelp();\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Opens an overlay window with help material.\n\t */\n\tfunction showHelp() {\n\n\t\tif( config.help ) {\n\n\t\t\tcloseOverlay();\n\n\t\t\tdom.overlay = document.createElement( 'div' );\n\t\t\tdom.overlay.classList.add( 'overlay' );\n\t\t\tdom.overlay.classList.add( 'overlay-help' );\n\t\t\tdom.wrapper.appendChild( dom.overlay );\n\n\t\t\tlet html = '<p class=\"title\">Keyboard Shortcuts</p><br/>';\n\n\t\t\tlet shortcuts = keyboard.getShortcuts(),\n\t\t\t\tbindings = keyboard.getBindings();\n\n\t\t\thtml += '<table><th>KEY</th><th>ACTION</th>';\n\t\t\tfor( let key in shortcuts ) {\n\t\t\t\thtml += `<tr><td>${key}</td><td>${shortcuts[ key ]}</td></tr>`;\n\t\t\t}\n\n\t\t\t// Add custom key bindings that have associated descriptions\n\t\t\tfor( let binding in bindings ) {\n\t\t\t\tif( bindings[binding].key && bindings[binding].description ) {\n\t\t\t\t\thtml += `<tr><td>${bindings[binding].key}</td><td>${bindings[binding].description}</td></tr>`;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thtml += '</table>';\n\n\t\t\tdom.overlay.innerHTML = `\n\t\t\t\t<header>\n\t\t\t\t\t<a class=\"close\" href=\"#\"><span class=\"icon\"></span></a>\n\t\t\t\t</header>\n\t\t\t\t<div class=\"viewport\">\n\t\t\t\t\t<div class=\"viewport-inner\">${html}</div>\n\t\t\t\t</div>\n\t\t\t`;\n\n\t\t\tdom.overlay.querySelector( '.close' ).addEventListener( 'click', event => {\n\t\t\t\tcloseOverlay();\n\t\t\t\tevent.preventDefault();\n\t\t\t}, false );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Closes any currently open overlay.\n\t */\n\tfunction closeOverlay() {\n\n\t\tif( dom.overlay ) {\n\t\t\tdom.overlay.parentNode.removeChild( dom.overlay );\n\t\t\tdom.overlay = null;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Applies JavaScript-controlled layout rules to the\n\t * presentation.\n\t */\n\tfunction layout() {\n\n\t\tif( dom.wrapper && !print.isPrintingPDF() ) {\n\n\t\t\tif( !config.disableLayout ) {\n\n\t\t\t\t// On some mobile devices '100vh' is taller than the visible\n\t\t\t\t// viewport which leads to part of the presentation being\n\t\t\t\t// cut off. To work around this we define our own '--vh' custom\n\t\t\t\t// property where 100x adds up to the correct height.\n\t\t\t\t//\n\t\t\t\t// https://css-tricks.com/the-trick-to-viewport-units-on-mobile/\n\t\t\t\tif( Device.isMobile && !config.embedded ) {\n\t\t\t\t\tdocument.documentElement.style.setProperty( '--vh', ( window.innerHeight * 0.01 ) + 'px' );\n\t\t\t\t}\n\n\t\t\t\tconst size = getComputedSlideSize();\n\n\t\t\t\tconst oldScale = scale;\n\n\t\t\t\t// Layout the contents of the slides\n\t\t\t\tlayoutSlideContents( config.width, config.height );\n\n\t\t\t\tdom.slides.style.width = size.width + 'px';\n\t\t\t\tdom.slides.style.height = size.height + 'px';\n\n\t\t\t\t// Determine scale of content to fit within available space\n\t\t\t\tscale = Math.min( size.presentationWidth / size.width, size.presentationHeight / size.height );\n\n\t\t\t\t// Respect max/min scale settings\n\t\t\t\tscale = Math.max( scale, config.minScale );\n\t\t\t\tscale = Math.min( scale, config.maxScale );\n\n\t\t\t\t// Don't apply any scaling styles if scale is 1\n\t\t\t\tif( scale === 1 ) {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '';\n\t\t\t\t\tdom.slides.style.top = '';\n\t\t\t\t\tdom.slides.style.bottom = '';\n\t\t\t\t\tdom.slides.style.right = '';\n\t\t\t\t\ttransformSlides( { layout: '' } );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdom.slides.style.zoom = '';\n\t\t\t\t\tdom.slides.style.left = '50%';\n\t\t\t\t\tdom.slides.style.top = '50%';\n\t\t\t\t\tdom.slides.style.bottom = 'auto';\n\t\t\t\t\tdom.slides.style.right = 'auto';\n\t\t\t\t\ttransformSlides( { layout: 'translate(-50%, -50%) scale('+ scale +')' } );\n\t\t\t\t}\n\n\t\t\t\t// Select all slides, vertical and horizontal\n\t\t\t\tconst slides = Array.from( dom.wrapper.querySelectorAll( SLIDES_SELECTOR ) );\n\n\t\t\t\tfor( let i = 0, len = slides.length; i < len; i++ ) {\n\t\t\t\t\tconst slide = slides[ i ];\n\n\t\t\t\t\t// Don't bother updating invisible slides\n\t\t\t\t\tif( slide.style.display === 'none' ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif( config.center || slide.classList.contains( 'center' ) ) {\n\t\t\t\t\t\t// Vertical stacks are not centred since their section\n\t\t\t\t\t\t// children will be\n\t\t\t\t\t\tif( slide.classList.contains( 'stack' ) ) {\n\t\t\t\t\t\t\tslide.style.top = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslide.style.top = Math.max( ( size.height - slide.scrollHeight ) / 2, 0 ) + 'px';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tslide.style.top = '';\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif( oldScale !== scale ) {\n\t\t\t\t\tdispatchEvent({\n\t\t\t\t\t\ttype: 'resize',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\toldScale,\n\t\t\t\t\t\t\tscale,\n\t\t\t\t\t\t\tsize\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.style.setProperty( '--slide-scale', scale );\n\n\t\t\tprogress.update();\n\t\t\tbackgrounds.updateParallax();\n\n\t\t\tif( overview.isActive() ) {\n\t\t\t\toverview.update();\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Applies layout logic to the contents of all slides in\n\t * the presentation.\n\t *\n\t * @param {string|number} width\n\t * @param {string|number} height\n\t */\n\tfunction layoutSlideContents( width, height ) {\n\n\t\t// Handle sizing of elements with the 'r-stretch' class\n\t\tUtil.queryAll( dom.slides, 'section > .stretch, section > .r-stretch' ).forEach( element => {\n\n\t\t\t// Determine how much vertical space we can use\n\t\t\tlet remainingHeight = Util.getRemainingHeight( element, height );\n\n\t\t\t// Consider the aspect ratio of media elements\n\t\t\tif( /(img|video)/gi.test( element.nodeName ) ) {\n\t\t\t\tconst nw = element.naturalWidth || element.videoWidth,\n\t\t\t\t\t  nh = element.naturalHeight || element.videoHeight;\n\n\t\t\t\tconst es = Math.min( width / nw, remainingHeight / nh );\n\n\t\t\t\telement.style.width = ( nw * es ) + 'px';\n\t\t\t\telement.style.height = ( nh * es ) + 'px';\n\n\t\t\t}\n\t\t\telse {\n\t\t\t\telement.style.width = width + 'px';\n\t\t\t\telement.style.height = remainingHeight + 'px';\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Calculates the computed pixel size of our slides. These\n\t * values are based on the width and height configuration\n\t * options.\n\t *\n\t * @param {number} [presentationWidth=dom.wrapper.offsetWidth]\n\t * @param {number} [presentationHeight=dom.wrapper.offsetHeight]\n\t */\n\tfunction getComputedSlideSize( presentationWidth, presentationHeight ) {\n\n\t\tconst size = {\n\t\t\t// Slide size\n\t\t\twidth: config.width,\n\t\t\theight: config.height,\n\n\t\t\t// Presentation size\n\t\t\tpresentationWidth: presentationWidth || dom.wrapper.offsetWidth,\n\t\t\tpresentationHeight: presentationHeight || dom.wrapper.offsetHeight\n\t\t};\n\n\t\t// Reduce available space by margin\n\t\tsize.presentationWidth -= ( size.presentationWidth * config.margin );\n\t\tsize.presentationHeight -= ( size.presentationHeight * config.margin );\n\n\t\t// Slide width may be a percentage of available width\n\t\tif( typeof size.width === 'string' && /%$/.test( size.width ) ) {\n\t\t\tsize.width = parseInt( size.width, 10 ) / 100 * size.presentationWidth;\n\t\t}\n\n\t\t// Slide height may be a percentage of available height\n\t\tif( typeof size.height === 'string' && /%$/.test( size.height ) ) {\n\t\t\tsize.height = parseInt( size.height, 10 ) / 100 * size.presentationHeight;\n\t\t}\n\n\t\treturn size;\n\n\t}\n\n\t/**\n\t * Stores the vertical index of a stack so that the same\n\t * vertical slide can be selected when navigating to and\n\t * from the stack.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t * @param {string|number} [v=0] Index to memorize\n\t */\n\tfunction setPreviousVerticalIndex( stack, v ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' ) {\n\t\t\tstack.setAttribute( 'data-previous-indexv', v || 0 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Retrieves the vertical index which was stored using\n\t * #setPreviousVerticalIndex() or 0 if no previous index\n\t * exists.\n\t *\n\t * @param {HTMLElement} stack The vertical stack element\n\t */\n\tfunction getPreviousVerticalIndex( stack ) {\n\n\t\tif( typeof stack === 'object' && typeof stack.setAttribute === 'function' && stack.classList.contains( 'stack' ) ) {\n\t\t\t// Prefer manually defined start-indexv\n\t\t\tconst attributeName = stack.hasAttribute( 'data-start-indexv' ) ? 'data-start-indexv' : 'data-previous-indexv';\n\n\t\t\treturn parseInt( stack.getAttribute( attributeName ) || 0, 10 );\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\t/**\n\t * Checks if the current or specified slide is vertical\n\t * (nested within another slide).\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide to check\n\t * orientation of\n\t * @return {Boolean}\n\t */\n\tfunction isVerticalSlide( slide = currentSlide ) {\n\n\t\treturn slide && slide.parentNode && !!slide.parentNode.nodeName.match( /section/i );\n\n\t}\n\n\t/**\n\t * Returns true if we're on the last slide in the current\n\t * vertical stack.\n\t */\n\tfunction isLastVerticalSlide() {\n\n\t\tif( currentSlide && isVerticalSlide( currentSlide ) ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the first slide in\n\t * the presentation.\n\t */\n\tfunction isFirstSlide() {\n\n\t\treturn indexh === 0 && indexv === 0;\n\n\t}\n\n\t/**\n\t * Returns true if we're currently on the last slide in\n\t * the presenation. If the last slide is a stack, we only\n\t * consider this the last slide if it's at the end of the\n\t * stack.\n\t */\n\tfunction isLastSlide() {\n\n\t\tif( currentSlide ) {\n\t\t\t// Does this slide have a next sibling?\n\t\t\tif( currentSlide.nextElementSibling ) return false;\n\n\t\t\t// If it's vertical, does its parent have a next sibling?\n\t\t\tif( isVerticalSlide( currentSlide ) && currentSlide.parentNode.nextElementSibling ) return false;\n\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t/**\n\t * Enters the paused mode which fades everything on screen to\n\t * black.\n\t */\n\tfunction pause() {\n\n\t\tif( config.pause ) {\n\t\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\n\t\t\tcancelAutoSlide();\n\t\t\tdom.wrapper.classList.add( 'paused' );\n\n\t\t\tif( wasPaused === false ) {\n\t\t\t\tdispatchEvent({ type: 'paused' });\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Exits from the paused mode.\n\t */\n\tfunction resume() {\n\n\t\tconst wasPaused = dom.wrapper.classList.contains( 'paused' );\n\t\tdom.wrapper.classList.remove( 'paused' );\n\n\t\tcueAutoSlide();\n\n\t\tif( wasPaused ) {\n\t\t\tdispatchEvent({ type: 'resumed' });\n\t\t}\n\n\t}\n\n\t/**\n\t * Toggles the paused mode on and off.\n\t */\n\tfunction togglePause( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? pause() : resume();\n\t\t}\n\t\telse {\n\t\t\tisPaused() ? resume() : pause();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if we are currently in the paused mode.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isPaused() {\n\n\t\treturn dom.wrapper.classList.contains( 'paused' );\n\n\t}\n\n\t/**\n\t * Toggles the auto slide mode on and off.\n\t *\n\t * @param {Boolean} [override] Flag which sets the desired state.\n\t * True means autoplay starts, false means it stops.\n\t */\n\n\tfunction toggleAutoSlide( override ) {\n\n\t\tif( typeof override === 'boolean' ) {\n\t\t\toverride ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t\telse {\n\t\t\tautoSlidePaused ? resumeAutoSlide() : pauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t * Checks if the auto slide mode is currently on.\n\t *\n\t * @return {Boolean}\n\t */\n\tfunction isAutoSliding() {\n\n\t\treturn !!( autoSlide && !autoSlidePaused );\n\n\t}\n\n\t/**\n\t * Steps from the current point in the presentation to the\n\t * slide which matches the specified horizontal and vertical\n\t * indices.\n\t *\n\t * @param {number} [h=indexh] Horizontal index of the target slide\n\t * @param {number} [v=indexv] Vertical index of the target slide\n\t * @param {number} [f] Index of a fragment within the\n\t * target slide to activate\n\t * @param {number} [origin] Origin for use in multimaster environments\n\t */\n\tfunction slide( h, v, f, origin ) {\n\n\t\t// Dispatch an event before hte slide\n\t\tconst slidechange = dispatchEvent({\n\t\t\ttype: 'beforeslidechange',\n\t\t\tdata: {\n\t\t\t\tindexh: h === undefined ? indexh : h,\n\t\t\t\tindexv: v === undefined ? indexv : v,\n\t\t\t\torigin\n\t\t\t}\n\t\t});\n\n\t\t// Abort if this slide change was prevented by an event listener\n\t\tif( slidechange.defaultPrevented ) return;\n\n\t\t// Remember where we were at before\n\t\tpreviousSlide = currentSlide;\n\n\t\t// Query all horizontal slides in the deck\n\t\tconst horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR );\n\n\t\t// Abort if there are no slides\n\t\tif( horizontalSlides.length === 0 ) return;\n\n\t\t// If no vertical index is specified and the upcoming slide is a\n\t\t// stack, resume at its previous vertical index\n\t\tif( v === undefined && !overview.isActive() ) {\n\t\t\tv = getPreviousVerticalIndex( horizontalSlides[ h ] );\n\t\t}\n\n\t\t// If we were on a vertical stack, remember what vertical index\n\t\t// it was on so we can resume at the same position when returning\n\t\tif( previousSlide && previousSlide.parentNode && previousSlide.parentNode.classList.contains( 'stack' ) ) {\n\t\t\tsetPreviousVerticalIndex( previousSlide.parentNode, indexv );\n\t\t}\n\n\t\t// Remember the state before this slide\n\t\tconst stateBefore = state.concat();\n\n\t\t// Reset the state array\n\t\tstate.length = 0;\n\n\t\tlet indexhBefore = indexh || 0,\n\t\t\tindexvBefore = indexv || 0;\n\n\t\t// Activate and transition to the new slide\n\t\tindexh = updateSlides( HORIZONTAL_SLIDES_SELECTOR, h === undefined ? indexh : h );\n\t\tindexv = updateSlides( VERTICAL_SLIDES_SELECTOR, v === undefined ? indexv : v );\n\n\t\t// Dispatch an event if the slide changed\n\t\tlet slideChanged = ( indexh !== indexhBefore || indexv !== indexvBefore );\n\n\t\t// Ensure that the previous slide is never the same as the current\n\t\tif( !slideChanged ) previousSlide = null;\n\n\t\t// Find the current horizontal slide and any possible vertical slides\n\t\t// within it\n\t\tlet currentHorizontalSlide = horizontalSlides[ indexh ],\n\t\t\tcurrentVerticalSlides = currentHorizontalSlide.querySelectorAll( 'section' );\n\n\t\t// Store references to the previous and current slides\n\t\tcurrentSlide = currentVerticalSlides[ indexv ] || currentHorizontalSlide;\n\n\t\tlet autoAnimateTransition = false;\n\n\t\t// Detect if we're moving between two auto-animated slides\n\t\tif( slideChanged && previousSlide && currentSlide && !overview.isActive() ) {\n\n\t\t\t// If this is an auto-animated transition, we disable the\n\t\t\t// regular slide transition\n\t\t\t//\n\t\t\t// Note 20-03-2020:\n\t\t\t// This needs to happen before we update slide visibility,\n\t\t\t// otherwise transitions will still run in Safari.\n\t\t\tif( previousSlide.hasAttribute( 'data-auto-animate' ) && currentSlide.hasAttribute( 'data-auto-animate' )\n\t\t\t\t\t&& previousSlide.getAttribute( 'data-auto-animate-id' ) === currentSlide.getAttribute( 'data-auto-animate-id' )\n\t\t\t\t\t&& !( ( indexh > indexhBefore || indexv > indexvBefore ) ? currentSlide : previousSlide ).hasAttribute( 'data-auto-animate-restart' ) ) {\n\n\t\t\t\tautoAnimateTransition = true;\n\t\t\t\tdom.slides.classList.add( 'disable-slide-transitions' );\n\t\t\t}\n\n\t\t\ttransition = 'running';\n\n\t\t}\n\n\t\t// Update the visibility of slides now that the indices have changed\n\t\tupdateSlidesVisibility();\n\n\t\tlayout();\n\n\t\t// Update the overview if it's currently active\n\t\tif( overview.isActive() ) {\n\t\t\toverview.update();\n\t\t}\n\n\t\t// Show fragment, if specified\n\t\tif( typeof f !== 'undefined' ) {\n\t\t\tfragments.goto( f );\n\t\t}\n\n\t\t// Solves an edge case where the previous slide maintains the\n\t\t// 'present' class when navigating between adjacent vertical\n\t\t// stacks\n\t\tif( previousSlide && previousSlide !== currentSlide ) {\n\t\t\tpreviousSlide.classList.remove( 'present' );\n\t\t\tpreviousSlide.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t// Reset all slides upon navigate to home\n\t\t\tif( isFirstSlide() ) {\n\t\t\t\t// Launch async task\n\t\t\t\tsetTimeout( () => {\n\t\t\t\t\tgetVerticalStacks().forEach( slide => {\n\t\t\t\t\t\tsetPreviousVerticalIndex( slide, 0 );\n\t\t\t\t\t} );\n\t\t\t\t}, 0 );\n\t\t\t}\n\t\t}\n\n\t\t// Apply the new state\n\t\tstateLoop: for( let i = 0, len = state.length; i < len; i++ ) {\n\t\t\t// Check if this state existed on the previous slide. If it\n\t\t\t// did, we will avoid adding it repeatedly\n\t\t\tfor( let j = 0; j < stateBefore.length; j++ ) {\n\t\t\t\tif( stateBefore[j] === state[i] ) {\n\t\t\t\t\tstateBefore.splice( j, 1 );\n\t\t\t\t\tcontinue stateLoop;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdom.viewport.classList.add( state[i] );\n\n\t\t\t// Dispatch custom event matching the state's name\n\t\t\tdispatchEvent({ type: state[i] });\n\t\t}\n\n\t\t// Clean up the remains of the previous state\n\t\twhile( stateBefore.length ) {\n\t\t\tdom.viewport.classList.remove( stateBefore.pop() );\n\t\t}\n\n\t\tif( slideChanged ) {\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidechanged',\n\t\t\t\tdata: {\n\t\t\t\t\tindexh,\n\t\t\t\t\tindexv,\n\t\t\t\t\tpreviousSlide,\n\t\t\t\t\tcurrentSlide,\n\t\t\t\t\torigin\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Handle embedded content\n\t\tif( slideChanged || !previousSlide ) {\n\t\t\tslideContent.stopEmbeddedContent( previousSlide );\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\t// Announce the current slide contents to screen readers\n\t\t// Use animation frame to prevent getComputedStyle in getStatusText\n\t\t// from triggering layout mid-frame\n\t\trequestAnimationFrame( () => {\n\t\t\tannounceStatus( getStatusText( currentSlide ) );\n\t\t});\n\n\t\tprogress.update();\n\t\tcontrols.update();\n\t\tnotes.update();\n\t\tbackgrounds.update();\n\t\tbackgrounds.updateParallax();\n\t\tslideNumber.update();\n\t\tfragments.update();\n\n\t\t// Update the URL hash\n\t\tlocation.writeURL();\n\n\t\tcueAutoSlide();\n\n\t\t// Auto-animation\n\t\tif( autoAnimateTransition ) {\n\n\t\t\tsetTimeout( () => {\n\t\t\t\tdom.slides.classList.remove( 'disable-slide-transitions' );\n\t\t\t}, 0 );\n\n\t\t\tif( config.autoAnimate ) {\n\t\t\t\t// Run the auto-animation between our slides\n\t\t\t\tautoAnimate.run( previousSlide, currentSlide );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Syncs the presentation with the current DOM. Useful\n\t * when new slides or control elements are added or when\n\t * the configuration has changed.\n\t */\n\tfunction sync() {\n\n\t\t// Subscribe to input\n\t\tremoveEventListeners();\n\t\taddEventListeners();\n\n\t\t// Force a layout to make sure the current config is accounted for\n\t\tlayout();\n\n\t\t// Reflect the current autoSlide value\n\t\tautoSlide = config.autoSlide;\n\n\t\t// Start auto-sliding if it's enabled\n\t\tcueAutoSlide();\n\n\t\t// Re-create all slide backgrounds\n\t\tbackgrounds.create();\n\n\t\t// Write the current hash to the URL\n\t\tlocation.writeURL();\n\n\t\tfragments.sortAll();\n\n\t\tcontrols.update();\n\t\tprogress.update();\n\n\t\tupdateSlidesVisibility();\n\n\t\tnotes.update();\n\t\tnotes.updateVisibility();\n\t\tbackgrounds.update( true );\n\t\tslideNumber.update();\n\t\tslideContent.formatEmbeddedContent();\n\n\t\t// Start or stop embedded content depending on global config\n\t\tif( config.autoPlayMedia === false ) {\n\t\t\tslideContent.stopEmbeddedContent( currentSlide, { unloadIframes: false } );\n\t\t}\n\t\telse {\n\t\t\tslideContent.startEmbeddedContent( currentSlide );\n\t\t}\n\n\t\tif( overview.isActive() ) {\n\t\t\toverview.layout();\n\t\t}\n\n\t}\n\n\t/**\n\t * Updates reveal.js to keep in sync with new slide attributes. For\n\t * example, if you add a new `data-background-image` you can call\n\t * this to have reveal.js render the new background image.\n\t *\n\t * Similar to #sync() but more efficient when you only need to\n\t * refresh a specific slide.\n\t *\n\t * @param {HTMLElement} slide\n\t */\n\tfunction syncSlide( slide = currentSlide ) {\n\n\t\tbackgrounds.sync( slide );\n\t\tfragments.sync( slide );\n\n\t\tslideContent.load( slide );\n\n\t\tbackgrounds.update();\n\t\tnotes.update();\n\n\t}\n\n\t/**\n\t * Resets all vertical slides so that only the first\n\t * is visible.\n\t */\n\tfunction resetVerticalSlides() {\n\n\t\tgetHorizontalSlides().forEach( horizontalSlide => {\n\n\t\t\tUtil.queryAll( horizontalSlide, 'section' ).forEach( ( verticalSlide, y ) => {\n\n\t\t\t\tif( y > 0 ) {\n\t\t\t\t\tverticalSlide.classList.remove( 'present' );\n\t\t\t\t\tverticalSlide.classList.remove( 'past' );\n\t\t\t\t\tverticalSlide.classList.add( 'future' );\n\t\t\t\t\tverticalSlide.setAttribute( 'aria-hidden', 'true' );\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Randomly shuffles all slides in the deck.\n\t */\n\tfunction shuffle( slides = getHorizontalSlides() ) {\n\n\t\tslides.forEach( ( slide, i ) => {\n\n\t\t\t// Insert the slide next to a randomly picked sibling slide\n\t\t\t// slide. This may cause the slide to insert before itself,\n\t\t\t// but that's not an issue.\n\t\t\tlet beforeSlide = slides[ Math.floor( Math.random() * slides.length ) ];\n\t\t\tif( beforeSlide.parentNode === slide.parentNode ) {\n\t\t\t\tslide.parentNode.insertBefore( slide, beforeSlide );\n\t\t\t}\n\n\t\t\t// Randomize the order of vertical slides (if there are any)\n\t\t\tlet verticalSlides = slide.querySelectorAll( 'section' );\n\t\t\tif( verticalSlides.length ) {\n\t\t\t\tshuffle( verticalSlides );\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Updates one dimension of slides by showing the slide\n\t * with the specified index.\n\t *\n\t * @param {string} selector A CSS selector that will fetch\n\t * the group of slides we are working with\n\t * @param {number} index The index of the slide that should be\n\t * shown\n\t *\n\t * @return {number} The index of the slide that is now shown,\n\t * might differ from the passed in index if it was out of\n\t * bounds.\n\t */\n\tfunction updateSlides( selector, index ) {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet slides = Util.queryAll( dom.wrapper, selector ),\n\t\t\tslidesLength = slides.length;\n\n\t\tlet printMode = print.isPrintingPDF();\n\t\tlet loopedForwards = false;\n\t\tlet loopedBackwards = false;\n\n\t\tif( slidesLength ) {\n\n\t\t\t// Should the index loop?\n\t\t\tif( config.loop ) {\n\t\t\t\tif( index >= slidesLength ) loopedForwards = true;\n\n\t\t\t\tindex %= slidesLength;\n\n\t\t\t\tif( index < 0 ) {\n\t\t\t\t\tindex = slidesLength + index;\n\t\t\t\t\tloopedBackwards = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Enforce max and minimum index bounds\n\t\t\tindex = Math.max( Math.min( index, slidesLength - 1 ), 0 );\n\n\t\t\tfor( let i = 0; i < slidesLength; i++ ) {\n\t\t\t\tlet element = slides[i];\n\n\t\t\t\tlet reverse = config.rtl && !isVerticalSlide( element );\n\n\t\t\t\t// Avoid .remove() with multiple args for IE11 support\n\t\t\t\telement.classList.remove( 'past' );\n\t\t\t\telement.classList.remove( 'present' );\n\t\t\t\telement.classList.remove( 'future' );\n\n\t\t\t\t// http://www.w3.org/html/wg/drafts/html/master/editing.html#the-hidden-attribute\n\t\t\t\telement.setAttribute( 'hidden', '' );\n\t\t\t\telement.setAttribute( 'aria-hidden', 'true' );\n\n\t\t\t\t// If this element contains vertical slides\n\t\t\t\tif( element.querySelector( 'section' ) ) {\n\t\t\t\t\telement.classList.add( 'stack' );\n\t\t\t\t}\n\n\t\t\t\t// If we're printing static slides, all slides are \"present\"\n\t\t\t\tif( printMode ) {\n\t\t\t\t\telement.classList.add( 'present' );\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif( i < index ) {\n\t\t\t\t\t// Any element previous to index is given the 'past' class\n\t\t\t\t\telement.classList.add( reverse ? 'future' : 'past' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Show all fragments in prior slides\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if( i > index ) {\n\t\t\t\t\t// Any element subsequent to index is given the 'future' class\n\t\t\t\t\telement.classList.add( reverse ? 'past' : 'future' );\n\n\t\t\t\t\tif( config.fragments ) {\n\t\t\t\t\t\t// Hide all fragments in future slides\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Update the visibility of fragments when a presentation loops\n\t\t\t\t// in either direction\n\t\t\t\telse if( i === index && config.fragments ) {\n\t\t\t\t\tif( loopedForwards ) {\n\t\t\t\t\t\thideFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t\telse if( loopedBackwards ) {\n\t\t\t\t\t\tshowFragmentsIn( element );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet slide = slides[index];\n\t\t\tlet wasPresent = slide.classList.contains( 'present' );\n\n\t\t\t// Mark the current slide as present\n\t\t\tslide.classList.add( 'present' );\n\t\t\tslide.removeAttribute( 'hidden' );\n\t\t\tslide.removeAttribute( 'aria-hidden' );\n\n\t\t\tif( !wasPresent ) {\n\t\t\t\t// Dispatch an event indicating the slide is now visible\n\t\t\t\tdispatchEvent({\n\t\t\t\t\ttarget: slide,\n\t\t\t\t\ttype: 'visible',\n\t\t\t\t\tbubbles: false\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If this slide has a state associated with it, add it\n\t\t\t// onto the current state of the deck\n\t\t\tlet slideState = slide.getAttribute( 'data-state' );\n\t\t\tif( slideState ) {\n\t\t\t\tstate = state.concat( slideState.split( ' ' ) );\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\t// Since there are no slides we can't be anywhere beyond the\n\t\t\t// zeroth index\n\t\t\tindex = 0;\n\t\t}\n\n\t\treturn index;\n\n\t}\n\n\t/**\n\t * Shows all fragment elements within the given contaienr.\n\t */\n\tfunction showFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment' ).forEach( fragment => {\n\t\t\tfragment.classList.add( 'visible' );\n\t\t\tfragment.classList.remove( 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Hides all fragment elements within the given contaienr.\n\t */\n\tfunction hideFragmentsIn( container ) {\n\n\t\tUtil.queryAll( container, '.fragment.visible' ).forEach( fragment => {\n\t\t\tfragment.classList.remove( 'visible', 'current-fragment' );\n\t\t} );\n\n\t}\n\n\t/**\n\t * Optimization method; hide all slides that are far away\n\t * from the present slide.\n\t */\n\tfunction updateSlidesVisibility() {\n\n\t\t// Select all slides and convert the NodeList result to\n\t\t// an array\n\t\tlet horizontalSlides = getHorizontalSlides(),\n\t\t\thorizontalSlidesLength = horizontalSlides.length,\n\t\t\tdistanceX,\n\t\t\tdistanceY;\n\n\t\tif( horizontalSlidesLength && typeof indexh !== 'undefined' ) {\n\n\t\t\t// The number of steps away from the present slide that will\n\t\t\t// be visible\n\t\t\tlet viewDistance = overview.isActive() ? 10 : config.viewDistance;\n\n\t\t\t// Shorten the view distance on devices that typically have\n\t\t\t// less resources\n\t\t\tif( Device.isMobile ) {\n\t\t\t\tviewDistance = overview.isActive() ? 6 : config.mobileViewDistance;\n\t\t\t}\n\n\t\t\t// All slides need to be visible when exporting to PDF\n\t\t\tif( print.isPrintingPDF() ) {\n\t\t\t\tviewDistance = Number.MAX_VALUE;\n\t\t\t}\n\n\t\t\tfor( let x = 0; x < horizontalSlidesLength; x++ ) {\n\t\t\t\tlet horizontalSlide = horizontalSlides[x];\n\n\t\t\t\tlet verticalSlides = Util.queryAll( horizontalSlide, 'section' ),\n\t\t\t\t\tverticalSlidesLength = verticalSlides.length;\n\n\t\t\t\t// Determine how far away this slide is from the present\n\t\t\t\tdistanceX = Math.abs( ( indexh || 0 ) - x ) || 0;\n\n\t\t\t\t// If the presentation is looped, distance should measure\n\t\t\t\t// 1 between the first and last slides\n\t\t\t\tif( config.loop ) {\n\t\t\t\t\tdistanceX = Math.abs( ( ( indexh || 0 ) - x ) % ( horizontalSlidesLength - viewDistance ) ) || 0;\n\t\t\t\t}\n\n\t\t\t\t// Show the horizontal slide if it's within the view distance\n\t\t\t\tif( distanceX < viewDistance ) {\n\t\t\t\t\tslideContent.load( horizontalSlide );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tslideContent.unload( horizontalSlide );\n\t\t\t\t}\n\n\t\t\t\tif( verticalSlidesLength ) {\n\n\t\t\t\t\tlet oy = getPreviousVerticalIndex( horizontalSlide );\n\n\t\t\t\t\tfor( let y = 0; y < verticalSlidesLength; y++ ) {\n\t\t\t\t\t\tlet verticalSlide = verticalSlides[y];\n\n\t\t\t\t\t\tdistanceY = x === ( indexh || 0 ) ? Math.abs( ( indexv || 0 ) - y ) : Math.abs( y - oy );\n\n\t\t\t\t\t\tif( distanceX + distanceY < viewDistance ) {\n\t\t\t\t\t\t\tslideContent.load( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tslideContent.unload( verticalSlide );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Flag if there are ANY vertical slides, anywhere in the deck\n\t\t\tif( hasVerticalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-vertical-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-vertical-slides' );\n\t\t\t}\n\n\t\t\t// Flag if there are ANY horizontal slides, anywhere in the deck\n\t\t\tif( hasHorizontalSlides() ) {\n\t\t\t\tdom.wrapper.classList.add( 'has-horizontal-slides' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdom.wrapper.classList.remove( 'has-horizontal-slides' );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Determine what available routes there are for navigation.\n\t *\n\t * @return {{left: boolean, right: boolean, up: boolean, down: boolean}}\n\t */\n\tfunction availableRoutes({ includeFragments = false } = {}) {\n\n\t\tlet horizontalSlides = dom.wrapper.querySelectorAll( HORIZONTAL_SLIDES_SELECTOR ),\n\t\t\tverticalSlides = dom.wrapper.querySelectorAll( VERTICAL_SLIDES_SELECTOR );\n\n\t\tlet routes = {\n\t\t\tleft: indexh > 0,\n\t\t\tright: indexh < horizontalSlides.length - 1,\n\t\t\tup: indexv > 0,\n\t\t\tdown: indexv < verticalSlides.length - 1\n\t\t};\n\n\t\t// Looped presentations can always be navigated as long as\n\t\t// there are slides available\n\t\tif( config.loop ) {\n\t\t\tif( horizontalSlides.length > 1 ) {\n\t\t\t\troutes.left = true;\n\t\t\t\troutes.right = true;\n\t\t\t}\n\n\t\t\tif( verticalSlides.length > 1 ) {\n\t\t\t\troutes.up = true;\n\t\t\t\troutes.down = true;\n\t\t\t}\n\t\t}\n\n\t\tif ( horizontalSlides.length > 1 && config.navigationMode === 'linear' ) {\n\t\t\troutes.right = routes.right || routes.down;\n\t\t\troutes.left = routes.left || routes.up;\n\t\t}\n\n\t\t// If includeFragments is set, a route will be considered\n\t\t// availalbe if either a slid OR fragment is available in\n\t\t// the given direction\n\t\tif( includeFragments === true ) {\n\t\t\tlet fragmentRoutes = fragments.availableRoutes();\n\t\t\troutes.left = routes.left || fragmentRoutes.prev;\n\t\t\troutes.up = routes.up || fragmentRoutes.prev;\n\t\t\troutes.down = routes.down || fragmentRoutes.next;\n\t\t\troutes.right = routes.right || fragmentRoutes.next;\n\t\t}\n\n\t\t// Reverse horizontal controls for rtl\n\t\tif( config.rtl ) {\n\t\t\tlet left = routes.left;\n\t\t\troutes.left = routes.right;\n\t\t\troutes.right = left;\n\t\t}\n\n\t\treturn routes;\n\n\t}\n\n\t/**\n\t * Returns the number of past slides. This can be used as a global\n\t * flattened index for slides.\n\t *\n\t * @param {HTMLElement} [slide=currentSlide] The slide we're counting before\n\t *\n\t * @return {number} Past slide count\n\t */\n\tfunction getSlidePastCount( slide = currentSlide ) {\n\n\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t// The number of past slides\n\t\tlet pastCount = 0;\n\n\t\t// Step through all slides and count the past ones\n\t\tmainLoop: for( let i = 0; i < horizontalSlides.length; i++ ) {\n\n\t\t\tlet horizontalSlide = horizontalSlides[i];\n\t\t\tlet verticalSlides = horizontalSlide.querySelectorAll( 'section' );\n\n\t\t\tfor( let j = 0; j < verticalSlides.length; j++ ) {\n\n\t\t\t\t// Stop as soon as we arrive at the present\n\t\t\t\tif( verticalSlides[j] === slide ) {\n\t\t\t\t\tbreak mainLoop;\n\t\t\t\t}\n\n\t\t\t\t// Don't count slides with the \"uncounted\" class\n\t\t\t\tif( verticalSlides[j].dataset.visibility !== 'uncounted' ) {\n\t\t\t\t\tpastCount++;\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Stop as soon as we arrive at the present\n\t\t\tif( horizontalSlide === slide ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Don't count the wrapping section for vertical slides and\n\t\t\t// slides marked as uncounted\n\t\t\tif( horizontalSlide.classList.contains( 'stack' ) === false && horizontalSlide.dataset.visibility !== 'uncounted' ) {\n\t\t\t\tpastCount++;\n\t\t\t}\n\n\t\t}\n\n\t\treturn pastCount;\n\n\t}\n\n\t/**\n\t * Returns a value ranging from 0-1 that represents\n\t * how far into the presentation we have navigated.\n\t *\n\t * @return {number}\n\t */\n\tfunction getProgress() {\n\n\t\t// The number of past and total slides\n\t\tlet totalCount = getTotalSlides();\n\t\tlet pastCount = getSlidePastCount();\n\n\t\tif( currentSlide ) {\n\n\t\t\tlet allFragments = currentSlide.querySelectorAll( '.fragment' );\n\n\t\t\t// If there are fragments in the current slide those should be\n\t\t\t// accounted for in the progress.\n\t\t\tif( allFragments.length > 0 ) {\n\t\t\t\tlet visibleFragments = currentSlide.querySelectorAll( '.fragment.visible' );\n\n\t\t\t\t// This value represents how big a portion of the slide progress\n\t\t\t\t// that is made up by its fragments (0-1)\n\t\t\t\tlet fragmentWeight = 0.9;\n\n\t\t\t\t// Add fragment progress to the past slide count\n\t\t\t\tpastCount += ( visibleFragments.length / allFragments.length ) * fragmentWeight;\n\t\t\t}\n\n\t\t}\n\n\t\treturn Math.min( pastCount / ( totalCount - 1 ), 1 );\n\n\t}\n\n\t/**\n\t * Retrieves the h/v location and fragment of the current,\n\t * or specified, slide.\n\t *\n\t * @param {HTMLElement} [slide] If specified, the returned\n\t * index will be for this slide rather than the currently\n\t * active one\n\t *\n\t * @return {{h: number, v: number, f: number}}\n\t */\n\tfunction getIndices( slide ) {\n\n\t\t// By default, return the current indices\n\t\tlet h = indexh,\n\t\t\tv = indexv,\n\t\t\tf;\n\n\t\t// If a slide is specified, return the indices of that slide\n\t\tif( slide ) {\n\t\t\tlet isVertical = isVerticalSlide( slide );\n\t\t\tlet slideh = isVertical ? slide.parentNode : slide;\n\n\t\t\t// Select all horizontal slides\n\t\t\tlet horizontalSlides = getHorizontalSlides();\n\n\t\t\t// Now that we know which the horizontal slide is, get its index\n\t\t\th = Math.max( horizontalSlides.indexOf( slideh ), 0 );\n\n\t\t\t// Assume we're not vertical\n\t\t\tv = undefined;\n\n\t\t\t// If this is a vertical slide, grab the vertical index\n\t\t\tif( isVertical ) {\n\t\t\t\tv = Math.max( Util.queryAll( slide.parentNode, 'section' ).indexOf( slide ), 0 );\n\t\t\t}\n\t\t}\n\n\t\tif( !slide && currentSlide ) {\n\t\t\tlet hasFragments = currentSlide.querySelectorAll( '.fragment' ).length > 0;\n\t\t\tif( hasFragments ) {\n\t\t\t\tlet currentFragment = currentSlide.querySelector( '.current-fragment' );\n\t\t\t\tif( currentFragment && currentFragment.hasAttribute( 'data-fragment-index' ) ) {\n\t\t\t\t\tf = parseInt( currentFragment.getAttribute( 'data-fragment-index' ), 10 );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tf = currentSlide.querySelectorAll( '.fragment.visible' ).length - 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn { h, v, f };\n\n\t}\n\n\t/**\n\t * Retrieves all slides in this presentation.\n\t */\n\tfunction getSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, SLIDES_SELECTOR + ':not(.stack):not([data-visibility=\"uncounted\"])' );\n\n\t}\n\n\t/**\n\t * Returns a list of all horizontal slides in the deck. Each\n\t * vertical stack is included as one horizontal slide in the\n\t * resulting array.\n\t */\n\tfunction getHorizontalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR );\n\n\t}\n\n\t/**\n\t * Returns all vertical slides that exist within this deck.\n\t */\n\tfunction getVerticalSlides() {\n\n\t\treturn Util.queryAll( dom.wrapper, '.slides>section>section' );\n\n\t}\n\n\t/**\n\t * Returns all vertical stacks (each stack can contain multiple slides).\n\t */\n\tfunction getVerticalStacks() {\n\n\t\treturn Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.stack');\n\n\t}\n\n\t/**\n\t * Returns true if there are at least two horizontal slides.\n\t */\n\tfunction hasHorizontalSlides() {\n\n\t\treturn getHorizontalSlides().length > 1;\n\t}\n\n\t/**\n\t * Returns true if there are at least two vertical slides.\n\t */\n\tfunction hasVerticalSlides() {\n\n\t\treturn getVerticalSlides().length > 1;\n\n\t}\n\n\t/**\n\t * Returns an array of objects where each object represents the\n\t * attributes on its respective slide.\n\t */\n\tfunction getSlidesAttributes() {\n\n\t\treturn getSlides().map( slide => {\n\n\t\t\tlet attributes = {};\n\t\t\tfor( let i = 0; i < slide.attributes.length; i++ ) {\n\t\t\t\tlet attribute = slide.attributes[ i ];\n\t\t\t\tattributes[ attribute.name ] = attribute.value;\n\t\t\t}\n\t\t\treturn attributes;\n\n\t\t} );\n\n\t}\n\n\t/**\n\t * Retrieves the total number of slides in this presentation.\n\t *\n\t * @return {number}\n\t */\n\tfunction getTotalSlides() {\n\n\t\treturn getSlides().length;\n\n\t}\n\n\t/**\n\t * Returns the slide element matching the specified index.\n\t *\n\t * @return {HTMLElement}\n\t */\n\tfunction getSlide( x, y ) {\n\n\t\tlet horizontalSlide = getHorizontalSlides()[ x ];\n\t\tlet verticalSlides = horizontalSlide && horizontalSlide.querySelectorAll( 'section' );\n\n\t\tif( verticalSlides && verticalSlides.length && typeof y === 'number' ) {\n\t\t\treturn verticalSlides ? verticalSlides[ y ] : undefined;\n\t\t}\n\n\t\treturn horizontalSlide;\n\n\t}\n\n\t/**\n\t * Returns the background element for the given slide.\n\t * All slides, even the ones with no background properties\n\t * defined, have a background element so as long as the\n\t * index is valid an element will be returned.\n\t *\n\t * @param {mixed} x Horizontal background index OR a slide\n\t * HTML element\n\t * @param {number} y Vertical background index\n\t * @return {(HTMLElement[]|*)}\n\t */\n\tfunction getSlideBackground( x, y ) {\n\n\t\tlet slide = typeof x === 'number' ? getSlide( x, y ) : x;\n\t\tif( slide ) {\n\t\t\treturn slide.slideBackgroundElement;\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\t/**\n\t * Retrieves the current state of the presentation as\n\t * an object. This state can then be restored at any\n\t * time.\n\t *\n\t * @return {{indexh: number, indexv: number, indexf: number, paused: boolean, overview: boolean}}\n\t */\n\tfunction getState() {\n\n\t\tlet indices = getIndices();\n\n\t\treturn {\n\t\t\tindexh: indices.h,\n\t\t\tindexv: indices.v,\n\t\t\tindexf: indices.f,\n\t\t\tpaused: isPaused(),\n\t\t\toverview: overview.isActive()\n\t\t};\n\n\t}\n\n\t/**\n\t * Restores the presentation to the given state.\n\t *\n\t * @param {object} state As generated by getState()\n\t * @see {@link getState} generates the parameter `state`\n\t */\n\tfunction setState( state ) {\n\n\t\tif( typeof state === 'object' ) {\n\t\t\tslide( Util.deserialize( state.indexh ), Util.deserialize( state.indexv ), Util.deserialize( state.indexf ) );\n\n\t\t\tlet pausedFlag = Util.deserialize( state.paused ),\n\t\t\t\toverviewFlag = Util.deserialize( state.overview );\n\n\t\t\tif( typeof pausedFlag === 'boolean' && pausedFlag !== isPaused() ) {\n\t\t\t\ttogglePause( pausedFlag );\n\t\t\t}\n\n\t\t\tif( typeof overviewFlag === 'boolean' && overviewFlag !== overview.isActive() ) {\n\t\t\t\toverview.toggle( overviewFlag );\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Cues a new automated slide if enabled in the config.\n\t */\n\tfunction cueAutoSlide() {\n\n\t\tcancelAutoSlide();\n\n\t\tif( currentSlide && config.autoSlide !== false ) {\n\n\t\t\tlet fragment = currentSlide.querySelector( '.current-fragment' );\n\n\t\t\t// When the slide first appears there is no \"current\" fragment so\n\t\t\t// we look for a data-autoslide timing on the first fragment\n\t\t\tif( !fragment ) fragment = currentSlide.querySelector( '.fragment' );\n\n\t\t\tlet fragmentAutoSlide = fragment ? fragment.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet parentAutoSlide = currentSlide.parentNode ? currentSlide.parentNode.getAttribute( 'data-autoslide' ) : null;\n\t\t\tlet slideAutoSlide = currentSlide.getAttribute( 'data-autoslide' );\n\n\t\t\t// Pick value in the following priority order:\n\t\t\t// 1. Current fragment's data-autoslide\n\t\t\t// 2. Current slide's data-autoslide\n\t\t\t// 3. Parent slide's data-autoslide\n\t\t\t// 4. Global autoSlide setting\n\t\t\tif( fragmentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( fragmentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( slideAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( slideAutoSlide, 10 );\n\t\t\t}\n\t\t\telse if( parentAutoSlide ) {\n\t\t\t\tautoSlide = parseInt( parentAutoSlide, 10 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tautoSlide = config.autoSlide;\n\n\t\t\t\t// If there are media elements with data-autoplay,\n\t\t\t\t// automatically set the autoSlide duration to the\n\t\t\t\t// length of that media. Not applicable if the slide\n\t\t\t\t// is divided up into fragments.\n\t\t\t\t// playbackRate is accounted for in the duration.\n\t\t\t\tif( currentSlide.querySelectorAll( '.fragment' ).length === 0 ) {\n\t\t\t\t\tUtil.queryAll( currentSlide, 'video, audio' ).forEach( el => {\n\t\t\t\t\t\tif( el.hasAttribute( 'data-autoplay' ) ) {\n\t\t\t\t\t\t\tif( autoSlide && (el.duration * 1000 / el.playbackRate ) > autoSlide ) {\n\t\t\t\t\t\t\t\tautoSlide = ( el.duration * 1000 / el.playbackRate ) + 1000;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Cue the next auto-slide if:\n\t\t\t// - There is an autoSlide value\n\t\t\t// - Auto-sliding isn't paused by the user\n\t\t\t// - The presentation isn't paused\n\t\t\t// - The overview isn't active\n\t\t\t// - The presentation isn't over\n\t\t\tif( autoSlide && !autoSlidePaused && !isPaused() && !overview.isActive() && ( !isLastSlide() || fragments.availableRoutes().next || config.loop === true ) ) {\n\t\t\t\tautoSlideTimeout = setTimeout( () => {\n\t\t\t\t\tif( typeof config.autoSlideMethod === 'function' ) {\n\t\t\t\t\t\tconfig.autoSlideMethod()\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tnavigateNext();\n\t\t\t\t\t}\n\t\t\t\t\tcueAutoSlide();\n\t\t\t\t}, autoSlide );\n\t\t\t\tautoSlideStartTime = Date.now();\n\t\t\t}\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( autoSlideTimeout !== -1 );\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Cancels any ongoing request to auto-slide.\n\t */\n\tfunction cancelAutoSlide() {\n\n\t\tclearTimeout( autoSlideTimeout );\n\t\tautoSlideTimeout = -1;\n\n\t}\n\n\tfunction pauseAutoSlide() {\n\n\t\tif( autoSlide && !autoSlidePaused ) {\n\t\t\tautoSlidePaused = true;\n\t\t\tdispatchEvent({ type: 'autoslidepaused' });\n\t\t\tclearTimeout( autoSlideTimeout );\n\n\t\t\tif( autoSlidePlayer ) {\n\t\t\t\tautoSlidePlayer.setPlaying( false );\n\t\t\t}\n\t\t}\n\n\t}\n\n\tfunction resumeAutoSlide() {\n\n\t\tif( autoSlide && autoSlidePaused ) {\n\t\t\tautoSlidePaused = false;\n\t\t\tdispatchEvent({ type: 'autoslideresumed' });\n\t\t\tcueAutoSlide();\n\t\t}\n\n\t}\n\n\tfunction navigateLeft({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().left ) {\n\t\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().left ) {\n\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateRight({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\n\t\t// Reverse for RTL\n\t\tif( config.rtl ) {\n\t\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().right ) {\n\t\t\t\tslide( indexh - 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t\t}\n\t\t}\n\t\t// Normal navigation\n\t\telse if( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().right ) {\n\t\t\tslide( indexh + 1, config.navigationMode === 'grid' ? indexv : undefined );\n\t\t}\n\n\t}\n\n\tfunction navigateUp({skipFragments=false}={}) {\n\n\t\t// Prioritize hiding fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.prev() === false ) && availableRoutes().up ) {\n\t\t\tslide( indexh, indexv - 1 );\n\t\t}\n\n\t}\n\n\tfunction navigateDown({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( ( overview.isActive() || skipFragments || fragments.next() === false ) && availableRoutes().down ) {\n\t\t\tslide( indexh, indexv + 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Navigates backwards, prioritized in the following order:\n\t * 1) Previous fragment\n\t * 2) Previous vertical slide\n\t * 3) Previous horizontal slide\n\t */\n\tfunction navigatePrev({skipFragments=false}={}) {\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.prev() === false ) {\n\t\t\tif( availableRoutes().up ) {\n\t\t\t\tnavigateUp({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Fetch the previous horizontal slide, if there is one\n\t\t\t\tlet previousSlide;\n\n\t\t\t\tif( config.rtl ) {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.future' ).pop();\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tpreviousSlide = Util.queryAll( dom.wrapper, HORIZONTAL_SLIDES_SELECTOR + '.past' ).pop();\n\t\t\t\t}\n\n\t\t\t\t// When going backwards and arriving on a stack we start\n\t\t\t\t// at the bottom of the stack\n\t\t\t\tif( previousSlide && previousSlide.classList.contains( 'stack' ) ) {\n\t\t\t\t\tlet v = ( previousSlide.querySelectorAll( 'section' ).length - 1 ) || undefined;\n\t\t\t\t\tlet h = indexh - 1;\n\t\t\t\t\tslide( h, v );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * The reverse of #navigatePrev().\n\t */\n\tfunction navigateNext({skipFragments=false}={}) {\n\n\t\tnavigationHistory.hasNavigatedHorizontally = true;\n\t\tnavigationHistory.hasNavigatedVertically = true;\n\n\t\t// Prioritize revealing fragments\n\t\tif( skipFragments || fragments.next() === false ) {\n\n\t\t\tlet routes = availableRoutes();\n\n\t\t\t// When looping is enabled `routes.down` is always available\n\t\t\t// so we need a separate check for when we've reached the\n\t\t\t// end of a stack and should move horizontally\n\t\t\tif( routes.down && routes.right && config.loop && isLastVerticalSlide() ) {\n\t\t\t\troutes.down = false;\n\t\t\t}\n\n\t\t\tif( routes.down ) {\n\t\t\t\tnavigateDown({skipFragments});\n\t\t\t}\n\t\t\telse if( config.rtl ) {\n\t\t\t\tnavigateLeft({skipFragments});\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnavigateRight({skipFragments});\n\t\t\t}\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ----------------------------- EVENTS -------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t/**\n\t * Called by all event handlers that are based on user\n\t * input.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onUserInput( event ) {\n\n\t\tif( config.autoSlideStoppable ) {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\t/**\n\t* Listener for post message events posted to this window.\n\t*/\n\tfunction onPostMessage( event ) {\n\n\t\tlet data = event.data;\n\n\t\t// Make sure we're dealing with JSON\n\t\tif( typeof data === 'string' && data.charAt( 0 ) === '{' && data.charAt( data.length - 1 ) === '}' ) {\n\t\t\tdata = JSON.parse( data );\n\n\t\t\t// Check if the requested method can be found\n\t\t\tif( data.method && typeof Reveal[data.method] === 'function' ) {\n\n\t\t\t\tif( POST_MESSAGE_METHOD_BLACKLIST.test( data.method ) === false ) {\n\n\t\t\t\t\tconst result = Reveal[data.method].apply( Reveal, data.args );\n\n\t\t\t\t\t// Dispatch a postMessage event with the returned value from\n\t\t\t\t\t// our method invocation for getter functions\n\t\t\t\t\tdispatchPostMessage( 'callback', { method: data.method, result: result } );\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.warn( 'reveal.js: \"'+ data.method +'\" is is blacklisted from the postMessage API' );\n\t\t\t\t}\n\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Event listener for transition end on the current slide.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onTransitionEnd( event ) {\n\n\t\tif( transition === 'running' && /section/gi.test( event.target.nodeName ) ) {\n\t\t\ttransition = 'idle';\n\t\t\tdispatchEvent({\n\t\t\t\ttype: 'slidetransitionend',\n\t\t\t\tdata: { indexh, indexv, previousSlide, currentSlide }\n\t\t\t});\n\t\t}\n\n\t}\n\n\t/**\n\t * A global listener for all click events inside of the\n\t * .slides container.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onSlidesClicked( event ) {\n\n\t\tconst anchor = Util.closest( event.target, 'a[href^=\"#\"]' );\n\n\t\t// If a hash link is clicked, we find the target slide\n\t\t// and navigate to it. We previously relied on 'hashchange'\n\t\t// for links like these but that prevented media with\n\t\t// audio tracks from playing in mobile browsers since it\n\t\t// wasn't considered a direct interaction with the document.\n\t\tif( anchor ) {\n\t\t\tconst hash = anchor.getAttribute( 'href' );\n\t\t\tconst indices = location.getIndicesFromHash( hash );\n\n\t\t\tif( indices ) {\n\t\t\t\tReveal.slide( indices.h, indices.v, indices.f );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the window level 'resize' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onWindowResize( event ) {\n\n\t\tlayout();\n\n\t}\n\n\t/**\n\t * Handle for the window level 'visibilitychange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onPageVisibilityChange( event ) {\n\n\t\t// If, after clicking a link or similar and we're coming back,\n\t\t// focus the document.body to ensure we can use keyboard shortcuts\n\t\tif( document.hidden === false && document.activeElement !== document.body ) {\n\t\t\t// Not all elements support .blur() - SVGs among them.\n\t\t\tif( typeof document.activeElement.blur === 'function' ) {\n\t\t\t\tdocument.activeElement.blur();\n\t\t\t}\n\t\t\tdocument.body.focus();\n\t\t}\n\n\t}\n\n\t/**\n\t * Handler for the document level 'fullscreenchange' event.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onFullscreenChange( event ) {\n\n\t\tlet element = document.fullscreenElement || document.webkitFullscreenElement;\n\t\tif( element === dom.wrapper ) {\n\t\t\tevent.stopImmediatePropagation();\n\n\t\t\t// Timeout to avoid layout shift in Safari\n\t\t\tsetTimeout( () => {\n\t\t\t\tReveal.layout();\n\t\t\t\tReveal.focus.focus(); // focus.focus :'(\n\t\t\t}, 1 );\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles clicks on links that are set to preview in the\n\t * iframe overlay.\n\t *\n\t * @param {object} event\n\t */\n\tfunction onPreviewLinkClicked( event ) {\n\n\t\tif( event.currentTarget && event.currentTarget.hasAttribute( 'href' ) ) {\n\t\t\tlet url = event.currentTarget.getAttribute( 'href' );\n\t\t\tif( url ) {\n\t\t\t\tshowPreview( url );\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Handles click on the auto-sliding controls element.\n\t *\n\t * @param {object} [event]\n\t */\n\tfunction onAutoSlidePlayerClick( event ) {\n\n\t\t// Replay\n\t\tif( isLastSlide() && config.loop === false ) {\n\t\t\tslide( 0, 0 );\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Resume\n\t\telse if( autoSlidePaused ) {\n\t\t\tresumeAutoSlide();\n\t\t}\n\t\t// Pause\n\t\telse {\n\t\t\tpauseAutoSlide();\n\t\t}\n\n\t}\n\n\n\t// --------------------------------------------------------------------//\n\t// ------------------------------- API --------------------------------//\n\t// --------------------------------------------------------------------//\n\n\t// The public reveal.js API\n\tconst API = {\n\t\tVERSION,\n\n\t\tinitialize,\n\t\tconfigure,\n\t\tdestroy,\n\n\t\tsync,\n\t\tsyncSlide,\n\t\tsyncFragments: fragments.sync.bind( fragments ),\n\n\t\t// Navigation methods\n\t\tslide,\n\t\tleft: navigateLeft,\n\t\tright: navigateRight,\n\t\tup: navigateUp,\n\t\tdown: navigateDown,\n\t\tprev: navigatePrev,\n\t\tnext: navigateNext,\n\n\t\t// Navigation aliases\n\t\tnavigateLeft, navigateRight, navigateUp, navigateDown, navigatePrev, navigateNext,\n\n\t\t// Fragment methods\n\t\tnavigateFragment: fragments.goto.bind( fragments ),\n\t\tprevFragment: fragments.prev.bind( fragments ),\n\t\tnextFragment: fragments.next.bind( fragments ),\n\n\t\t// Event binding\n\t\ton,\n\t\toff,\n\n\t\t// Legacy event binding methods left in for backwards compatibility\n\t\taddEventListener: on,\n\t\tremoveEventListener: off,\n\n\t\t// Forces an update in slide layout\n\t\tlayout,\n\n\t\t// Randomizes the order of slides\n\t\tshuffle,\n\n\t\t// Returns an object with the available routes as booleans (left/right/top/bottom)\n\t\tavailableRoutes,\n\n\t\t// Returns an object with the available fragments as booleans (prev/next)\n\t\tavailableFragments: fragments.availableRoutes.bind( fragments ),\n\n\t\t// Toggles a help overlay with keyboard shortcuts\n\t\ttoggleHelp,\n\n\t\t// Toggles the overview mode on/off\n\t\ttoggleOverview: overview.toggle.bind( overview ),\n\n\t\t// Toggles the \"black screen\" mode on/off\n\t\ttogglePause,\n\n\t\t// Toggles the auto slide mode on/off\n\t\ttoggleAutoSlide,\n\n\t\t// Slide navigation checks\n\t\tisFirstSlide,\n\t\tisLastSlide,\n\t\tisLastVerticalSlide,\n\t\tisVerticalSlide,\n\n\t\t// State checks\n\t\tisPaused,\n\t\tisAutoSliding,\n\t\tisSpeakerNotes: notes.isSpeakerNotesWindow.bind( notes ),\n\t\tisOverview: overview.isActive.bind( overview ),\n\t\tisFocused: focus.isFocused.bind( focus ),\n\t\tisPrintingPDF: print.isPrintingPDF.bind( print ),\n\n\t\t// Checks if reveal.js has been loaded and is ready for use\n\t\tisReady: () => ready,\n\n\t\t// Slide preloading\n\t\tloadSlide: slideContent.load.bind( slideContent ),\n\t\tunloadSlide: slideContent.unload.bind( slideContent ),\n\n\t\t// Preview management\n\t\tshowPreview,\n\t\thidePreview: closeOverlay,\n\n\t\t// Adds or removes all internal event listeners\n\t\taddEventListeners,\n\t\tremoveEventListeners,\n\t\tdispatchEvent,\n\n\t\t// Facility for persisting and restoring the presentation state\n\t\tgetState,\n\t\tsetState,\n\n\t\t// Presentation progress on range of 0-1\n\t\tgetProgress,\n\n\t\t// Returns the indices of the current, or specified, slide\n\t\tgetIndices,\n\n\t\t// Returns an Array of key:value maps of the attributes of each\n\t\t// slide in the deck\n\t\tgetSlidesAttributes,\n\n\t\t// Returns the number of slides that we have passed\n\t\tgetSlidePastCount,\n\n\t\t// Returns the total number of slides\n\t\tgetTotalSlides,\n\n\t\t// Returns the slide element at the specified index\n\t\tgetSlide,\n\n\t\t// Returns the previous slide element, may be null\n\t\tgetPreviousSlide: () => previousSlide,\n\n\t\t// Returns the current slide element\n\t\tgetCurrentSlide: () => currentSlide,\n\n\t\t// Returns the slide background element at the specified index\n\t\tgetSlideBackground,\n\n\t\t// Returns the speaker notes string for a slide, or null\n\t\tgetSlideNotes: notes.getSlideNotes.bind( notes ),\n\n\t\t// Returns an Array of all slides\n\t\tgetSlides,\n\n\t\t// Returns an array with all horizontal/vertical slides in the deck\n\t\tgetHorizontalSlides,\n\t\tgetVerticalSlides,\n\n\t\t// Checks if the presentation contains two or more horizontal\n\t\t// and vertical slides\n\t\thasHorizontalSlides,\n\t\thasVerticalSlides,\n\n\t\t// Checks if the deck has navigated on either axis at least once\n\t\thasNavigatedHorizontally: () => navigationHistory.hasNavigatedHorizontally,\n\t\thasNavigatedVertically: () => navigationHistory.hasNavigatedVertically,\n\n\t\t// Adds/removes a custom key binding\n\t\taddKeyBinding: keyboard.addKeyBinding.bind( keyboard ),\n\t\tremoveKeyBinding: keyboard.removeKeyBinding.bind( keyboard ),\n\n\t\t// Programmatically triggers a keyboard event\n\t\ttriggerKey: keyboard.triggerKey.bind( keyboard ),\n\n\t\t// Registers a new shortcut to include in the help overlay\n\t\tregisterKeyboardShortcut: keyboard.registerKeyboardShortcut.bind( keyboard ),\n\n\t\tgetComputedSlideSize,\n\n\t\t// Returns the current scale of the presentation content\n\t\tgetScale: () => scale,\n\n\t\t// Returns the current configuration object\n\t\tgetConfig: () => config,\n\n\t\t// Helper method, retrieves query string as a key:value map\n\t\tgetQueryHash: Util.getQueryHash,\n\n\t\t// Returns the path to the current slide as represented in the URL\n\t\tgetSlidePath: location.getHash.bind( location ),\n\n\t\t// Returns reveal.js DOM elements\n\t\tgetRevealElement: () => revealElement,\n\t\tgetSlidesElement: () => dom.slides,\n\t\tgetViewportElement: () => dom.viewport,\n\t\tgetBackgroundsElement: () => backgrounds.element,\n\n\t\t// API for registering and retrieving plugins\n\t\tregisterPlugin: plugins.registerPlugin.bind( plugins ),\n\t\thasPlugin: plugins.hasPlugin.bind( plugins ),\n\t\tgetPlugin: plugins.getPlugin.bind( plugins ),\n\t\tgetPlugins: plugins.getRegisteredPlugins.bind( plugins )\n\n\t};\n\n\t// Our internal API which controllers have access to\n\tUtil.extend( Reveal, {\n\t\t...API,\n\n\t\t// Methods for announcing content to screen readers\n\t\tannounceStatus,\n\t\tgetStatusText,\n\n\t\t// Controllers\n\t\tprint,\n\t\tfocus,\n\t\tprogress,\n\t\tcontrols,\n\t\tlocation,\n\t\toverview,\n\t\tfragments,\n\t\tslideContent,\n\t\tslideNumber,\n\n\t\tonUserInput,\n\t\tcloseOverlay,\n\t\tupdateSlidesVisibility,\n\t\tlayoutSlideContents,\n\t\ttransformSlides,\n\t\tcueAutoSlide,\n\t\tcancelAutoSlide\n\t} );\n\n\treturn API;\n\n};\n","import Deck, { VERSION } from './reveal.js'\n\n/**\n * Expose the Reveal class to the window. To create a\n * new instance:\n * let deck = new Reveal( document.querySelector( '.reveal' ), {\n *   controls: false\n * } );\n * deck.initialize().then(() => {\n *   // reveal.js is ready\n * });\n */\nlet Reveal = Deck;\n\n\n/**\n * The below is a thin shell that mimics the pre 4.0\n * reveal.js API and ensures backwards compatibility.\n * This API only allows for one Reveal instance per\n * page, whereas the new API above lets you run many\n * presentations on the same page.\n *\n * Reveal.initialize( { controls: false } ).then(() => {\n *   // reveal.js is ready\n * });\n */\n\nlet enqueuedAPICalls = [];\n\nReveal.initialize = options => {\n\n\t// Create our singleton reveal.js instance\n\tObject.assign( Reveal, new Deck( document.querySelector( '.reveal' ), options ) );\n\n\t// Invoke any enqueued API calls\n\tenqueuedAPICalls.map( method => method( Reveal ) );\n\n\treturn Reveal.initialize();\n\n}\n\n/**\n * The pre 4.0 API let you add event listener before\n * initializing. We maintain the same behavior by\n * queuing up premature API calls and invoking all\n * of them when Reveal.initialize is called.\n */\n[ 'configure', 'on', 'off', 'addEventListener', 'removeEventListener', 'registerPlugin' ].forEach( method => {\n\tReveal[method] = ( ...args ) => {\n\t\tenqueuedAPICalls.push( deck => deck[method].call( null, ...args ) );\n\t}\n} );\n\nReveal.isReady = () => false;\n\nReveal.VERSION = VERSION;\n\nexport default Reveal;"],"names":["extend","a","b","i","queryAll","el","selector","Array","from","querySelectorAll","toggleClass","className","value","classList","add","remove","deserialize","match","parseFloat","transformElement","element","transform","style","matches","target","matchesMethod","matchesSelector","msMatchesSelector","call","closest","parentNode","createStyleSheet","tag","document","createElement","type","length","styleSheet","cssText","appendChild","createTextNode","head","getQueryHash","query","location","search","replace","split","shift","pop","unescape","fileExtensionToMimeMap","UA","navigator","userAgent","isMobile","test","platform","maxTouchPoints","isAndroid","Object","defineProperty","fitty_module","_extends","assign","arguments","source","key","prototype","hasOwnProperty","w","DrawState","IDLE","DIRTY_CONTENT","DIRTY_LAYOUT","DIRTY","fitties","redrawFrame","requestRedraw","cancelAnimationFrame","requestAnimationFrame","redraw","filter","f","dirty","active","redrawAll","forEach","styleComputed","computeStyle","shouldPreStyle","applyStyle","fittiesToRedraw","shouldRedraw","calculateStyles","markAsClean","dispatchFitEvent","availableWidth","clientWidth","currentWidth","scrollWidth","previousFontSize","currentFontSize","Math","min","max","minSize","maxSize","whiteSpace","multiLine","getComputedStyle","getPropertyValue","display","preStyle","preStyleTestCompleted","fontSize","dispatchEvent","CustomEvent","detail","oldValue","newValue","scaleFactor","fit","init","originalStyle","observeMutations","newbie","push","destroy","_","observer","disconnect","subscribe","unsubscribe","MutationObserver","observe","defaultOptions","subtree","childList","characterData","resizeDebounce","onWindowResized","clearTimeout","setTimeout","fitty","observeWindowDelay","events","set","enabled","method","e","observeWindow","fitAll","fittyCreate","elements","options","fittyOptions","publicFitties","map","unfreeze","freeze","nl","undefined","slice","window","SlideContent","constructor","Reveal","startEmbeddedIframe","this","bind","shouldPreload","preload","getConfig","preloadIframes","hasAttribute","load","slide","tagName","setAttribute","getAttribute","removeAttribute","media","sources","background","slideBackgroundElement","backgroundContent","slideBackgroundContentElement","backgroundIframe","backgroundImage","backgroundVideo","backgroundVideoLoop","backgroundVideoMuted","trim","encodeURI","join","isSpeakerNotes","video","muted","filename","getMimeTypeFromFile","innerHTML","excludeIframes","iframe","width","height","maxHeight","maxWidth","backgroundIframeElement","querySelector","layout","unload","getSlideBackground","formatEmbeddedContent","_appendParamToIframeSource","sourceAttribute","sourceURL","param","getSlidesElement","src","indexOf","startEmbeddedContent","autoplay","autoPlayMedia","play","readyState","startEmbeddedMedia","promise","catch","controls","addEventListener","removeEventListener","event","isAttachedToDOM","isVisible","currentTime","contentWindow","postMessage","stopEmbeddedContent","unloadIframes","pause","SlideNumber","render","getRevealElement","configure","config","oldConfig","slideNumberDisplay","slideNumber","isPrintingPDF","showSlideNumber","update","getSlideNumber","getCurrentSlide","format","getHorizontalSlides","horizontalOffset","dataset","visibility","getSlidePastCount","getTotalSlides","indices","getIndices","h","sep","isVerticalSlide","v","url","getHash","formatNumber","delimiter","isNaN","colorToRgb","color","hex3","r","parseInt","charAt","g","hex6","rgb","rgba","Backgrounds","create","slideh","backgroundStack","createBackground","slidev","parallaxBackgroundImage","backgroundSize","parallaxBackgroundSize","backgroundRepeat","parallaxBackgroundRepeat","backgroundPosition","parallaxBackgroundPosition","container","contentElement","sync","data","backgroundColor","backgroundGradient","backgroundTransition","backgroundOpacity","dataPreload","opacity","contrastColor","computedBackgroundStyle","includeAll","currentSlide","currentBackground","horizontalPast","rtl","horizontalFuture","childNodes","backgroundh","backgroundv","previousBackground","slideContent","currentBackgroundContent","backgroundImageURL","previousBackgroundHash","currentBackgroundHash","classToBubble","contains","updateParallax","backgroundWidth","backgroundHeight","horizontalSlides","verticalSlides","getVerticalSlides","horizontalOffsetMultiplier","slideWidth","offsetWidth","horizontalSlideCount","parallaxBackgroundHorizontal","verticalOffsetMultiplier","verticalOffset","slideHeight","offsetHeight","verticalSlideCount","parallaxBackgroundVertical","SLIDES_SELECTOR","HORIZONTAL_SLIDES_SELECTOR","VERTICAL_SLIDES_SELECTOR","POST_MESSAGE_METHOD_BLACKLIST","FRAGMENT_STYLE_REGEX","autoAnimateCounter","AutoAnimate","run","fromSlide","toSlide","reset","allSlides","getSlides","toSlideIndex","fromSlideIndex","autoAnimateStyleSheet","animationOptions","getAutoAnimateOptions","autoAnimate","slideDirection","fromSlideIsHidden","css","getAutoAnimatableElements","autoAnimateElements","to","autoAnimateUnmatched","defaultUnmatchedDuration","duration","defaultUnmatchedDelay","getUnmatchedAutoAnimateElements","unmatchedElement","unmatchedOptions","id","delay","autoAnimateTarget","fontWeight","sheet","removeChild","elementOptions","easing","fromProps","getAutoAnimatableProperties","toProps","styles","translate","scale","presentationScale","getScale","delta","x","y","scaleX","scaleY","round","propertyName","toValue","fromValue","explicitValue","toStyleProperties","keys","inheritedOptions","autoAnimateEasing","autoAnimateDuration","autoAnimatedParent","autoAnimateDelay","direction","properties","bounds","measure","center","getBoundingClientRect","offsetLeft","offsetTop","computedStyles","autoAnimateStyles","property","pairs","autoAnimateMatcher","getAutoAnimatePairs","reserved","pair","index","textNodes","findAutoAnimateMatches","node","nodeName","innerText","textContent","getLocalBoundingBox","fromScope","toScope","serializer","fromMatches","toMatches","fromElement","pimaryIndex","secondaryIndex","rootElement","children","reduce","result","containsAnimatedElements","concat","Fragments","fragments","disable","enable","availableRoutes","hiddenFragments","prev","next","sort","grouped","ordered","unordered","sorted","fragment","group","sortAll","horizontalSlide","verticalSlide","changedFragments","shown","hidden","maxIndex","currentFragment","wasVisible","announceStatus","getStatusText","bubbles","goto","offset","lastVisibleFragment","progress","fragmentInURL","writeURL","Overview","onSlideClicked","activate","overview","isActive","cancelAutoSlide","getBackgroundsElement","margin","slideSize","getComputedSlideSize","overviewSlideWidth","overviewSlideHeight","updateSlidesVisibility","hslide","vslide","hbackground","vbackground","vmin","innerWidth","innerHeight","transformSlides","deactivate","cueAutoSlide","toggle","override","preventDefault","Keyboard","shortcuts","bindings","onDocumentKeyDown","onDocumentKeyPress","navigationMode","unbind","addKeyBinding","binding","callback","keyCode","description","removeKeyBinding","triggerKey","registerKeyboardShortcut","getShortcuts","getBindings","shiftKey","charCode","toggleHelp","keyboardCondition","isFocused","autoSlideWasPaused","isAutoSliding","onUserInput","activeElementIsCE","activeElement","isContentEditable","activeElementIsInput","activeElementIsNotes","unusedModifier","altKey","ctrlKey","metaKey","resumeKeyCodes","keyboard","isPaused","useLinearMode","hasHorizontalSlides","hasVerticalSlides","triggered","apply","action","skipFragments","left","right","up","Number","MAX_VALUE","down","togglePause","requestMethod","documentElement","requestFullscreen","webkitRequestFullscreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen","enterFullscreen","embedded","getViewportElement","autoSlideStoppable","toggleAutoSlide","closeOverlay","Location","writeURLTimeout","replaceStateTimestamp","onWindowHashChange","getIndicesFromHash","hash","name","bits","hashIndexBase","hashOneBasedIndex","getElementById","decodeURIComponent","error","readURL","currentIndices","newIndices","history","debouncedReplaceState","pathname","replaceState","Date","now","replaceStateTimeout","MAX_REPLACE_STATE_FREQUENCY","s","encodeURIComponent","Controls","onNavigateLeftClicked","onNavigateRightClicked","onNavigateUpClicked","onNavigateDownClicked","onNavigatePrevClicked","onNavigateNextClicked","revealElement","controlsLeft","controlsRight","controlsUp","controlsDown","controlsPrev","controlsNext","controlsRightArrow","controlsLeftArrow","controlsDownArrow","controlsLayout","controlsBackArrows","pointerEvents","eventName","routes","fragmentsRoutes","controlsTutorial","hasNavigatedVertically","hasNavigatedHorizontally","Progress","onProgressClicked","bar","getProgress","getMaxWidth","slides","slidesTotal","slideIndex","floor","clientX","targetIndices","Pointer","lastMouseWheelStep","cursorHidden","cursorInactiveTimeout","onDocumentCursorActive","onDocumentMouseScroll","mouseWheel","hideInactiveCursor","showCursor","cursor","hideCursor","hideCursorTime","wheelDelta","loadScript","script","async","defer","onload","onreadystatechange","onerror","err","Error","insertBefore","lastChild","Plugins","reveal","state","registeredPlugins","asyncDependencies","plugins","dependencies","registerPlugin","Promise","resolve","scripts","scriptsToLoad","condition","scriptLoadedCallback","initPlugins","then","console","warn","pluginValues","values","pluginsToInitialize","loadAsync","initNextPlugin","afterPlugInitialized","plugin","hasPlugin","getPlugin","getRegisteredPlugins","Print","injectPageNumbers","pageWidth","pageHeight","body","viewportElement","presentationBackground","viewportStyles","layoutSlideContents","slideScrollHeights","scrollHeight","pages","pageContainer","top","contentHeight","numberOfPages","ceil","pdfMaxPagesPerSlide","page","pdfPageHeightOffset","showNotes","notes","getSlideNotes","notesSpacing","notesLayout","notesElement","bottom","numberElement","pdfSeparateFragments","fragmentGroups","previousFragmentStep","clonedPage","cloneNode","fragmentNumber","Touch","touchStartX","touchStartY","touchStartCount","touchCaptured","onPointerDown","onPointerMove","onPointerUp","onTouchStart","onTouchMove","onTouchEnd","msPointerEnabled","isSwipePrevented","touches","clientY","currentX","currentY","includeFragments","deltaX","deltaY","abs","pointerType","MSPOINTER_TYPE_TOUCH","STATE_FOCUS","STATE_BLUR","Focus","onRevealPointerDown","onDocumentPointerDown","blur","focus","Notes","print","updateVisibility","hasNotes","isSpeakerNotesWindow","Playback","progressCheck","diameter","diameter2","thickness","playing","progressOffset","canvas","context","getContext","setPlaying","wasPlaying","animate","progressBefore","radius","iconSize","endAngle","PI","startAngle","save","clearRect","beginPath","arc","fillStyle","fill","lineWidth","strokeStyle","stroke","fillRect","moveTo","lineTo","restore","on","listener","off","minScale","maxScale","respondToHashChanges","disableLayout","touch","loop","shuffle","help","showHiddenSlides","autoSlide","autoSlideMethod","defaultTiming","previewLinks","postMessageEvents","focusBodyOnPageVisibilityChange","transition","transitionSpeed","POSITIVE_INFINITY","viewDistance","mobileViewDistance","VERSION","indexh","indexv","previousSlide","autoSlidePlayer","ready","navigationHistory","slidesTransform","dom","autoSlideTimeout","autoSlideStartTime","autoSlidePaused","backgrounds","pointer","start","Util","wrapper","Device","pauseOverlay","tagname","classname","nodes","testNode","statusElement","position","overflow","clip","createStatusElement","setupDOM","onPostMessage","setInterval","scrollTop","scrollLeft","onFullscreenChange","removeEventListeners","setupPDF","text","nodeType","isAriaHidden","isDisplayHidden","child","isReady","numberOfSlides","viewport","setProperty","resume","enablePreviewLinks","disablePreviewLinks","onAutoSlidePlayerClick","addEventListeners","onWindowResize","onSlidesClicked","onTransitionEnd","onPageVisibilityChange","useCapture","transforms","createEvent","initEvent","dispatchPostMessage","parent","self","message","namespace","getState","JSON","stringify","onPreviewLinkClicked","showPreview","overlay","showHelp","html","size","oldScale","presentationWidth","presentationHeight","zoom","len","remainingHeight","newHeight","oldHeight","removeProperty","nw","naturalWidth","videoWidth","nh","naturalHeight","videoHeight","es","setPreviousVerticalIndex","stack","getPreviousVerticalIndex","attributeName","isLastVerticalSlide","nextElementSibling","isFirstSlide","isLastSlide","wasPaused","origin","defaultPrevented","stateBefore","indexhBefore","indexvBefore","updateSlides","slideChanged","currentHorizontalSlide","currentVerticalSlides","autoAnimateTransition","stateLoop","j","splice","beforeSlide","random","slidesLength","printMode","loopedForwards","loopedBackwards","reverse","showFragmentsIn","hideFragmentsIn","wasPresent","slideState","distanceX","distanceY","horizontalSlidesLength","verticalSlidesLength","oy","fragmentRoutes","pastCount","mainLoop","isVertical","getSlide","indexf","paused","fragmentAutoSlide","parentAutoSlide","slideAutoSlide","playbackRate","navigateNext","pauseAutoSlide","resumeAutoSlide","navigateLeft","navigateRight","navigateUp","navigateDown","navigatePrev","parse","args","anchor","fullscreenElement","webkitFullscreenElement","stopImmediatePropagation","currentTarget","API","initialize","initOptions","defaultConfig","setViewport","syncSlide","syncFragments","navigateFragment","prevFragment","nextFragment","availableFragments","toggleOverview","isOverview","loadSlide","unloadSlide","hidePreview","setState","pausedFlag","overviewFlag","totalCount","allFragments","fragmentWeight","getSlidesAttributes","attributes","attribute","getPreviousSlide","getSlidePath","getPlugins","Deck","enqueuedAPICalls","deck"],"mappings":"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"}